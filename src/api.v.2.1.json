{
  "swagger": "2.0",
  "basePath": "/nms/api/v2.1",
  "info": {
    "title": "UISP API",
    "version": "1.5.0",
    "description": "You can authorize calls with x-auth-token by clicking the button on the right.\n    You can get this token on endpoint /user/login"
  },
  "tags": [
    {
      "name": "Authorization",
      "description": "Login and user authorization."
    },
    {
      "name": "Users",
      "description": "Manage UISP users and their profiles."
    },
    {
      "name": "Server",
      "description": "UISP settings with SMTP configuration, SSL and backups configuration."
    },
    {
      "name": "Sites",
      "description": "Manage sites and clients (former endpoints), their pictures and network structure."
    },
    {
      "name": "Devices",
      "description": "Configuration and monitoring for all devices."
    },
    {
      "name": "Tasks",
      "description": "View, start or cancel UISP background tasks, for example firmware upgrade."
    },
    {
      "name": "Logs",
      "description": "View devices log lines."
    },
    {
      "name": "Outages",
      "description": "View devices outages."
    },
    {
      "name": "Discovery",
      "description": "Scan for devices and connect them to UISP."
    },
    {
      "name": "Firmware",
      "description": "Manage firmware files in UISP."
    },
    {
      "name": "Traffic",
      "description": "Devices and clients traffic statistics generated thanks to NetFlow."
    },
    {
      "name": "Export",
      "description": "Client data export."
    },
    {
      "name": "Vault",
      "description": "Device credentials vault."
    },
    {
      "name": "Token",
      "description": "Manage access tokens."
    },
    {
      "name": "Gateways",
      "description": "Setup network device gateways."
    },
    {
      "name": "Backups",
      "description": "UISP manual and automatic backups."
    },
    {
      "name": "Data Links",
      "description": "Data Links between devices."
    },
    {
      "name": "Speed Test",
      "description": "Speedtest between device to device or device to internet."
    },
    {
      "name": "CRM",
      "description": "Customer relationship management."
    }
  ],
  "securityDefinitions": {
    "UserSecurity": {
      "type": "apiKey",
      "in": "header",
      "name": "x-auth-token",
      "description": "User authorization token"
    }
  },
  "security": [
    {
      "UserSecurity": []
    }
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/nms/account/login/ubiquiti": {
      "get": {
        "summary": "SSO authentication response endpoint.",
        "operationId": "getNmsAccountLoginUbiquiti",
        "parameters": [
          {
            "in": "query",
            "name": "NewParameter",
            "description": "New parameter",
            "required": "true",
            "schema": {
              "": ""
            }
          },
          {
            "type": "string",
            "name": "code",
            "in": "query"
          },
          {
            "type": "string",
            "name": "state",
            "in": "query"
          },
          {
            "type": "string",
            "name": "error",
            "in": "query"
          },
          {
            "type": "string",
            "name": "error_description",
            "in": "query"
          },
          {
            "type": "string",
            "name": "deviceUrl",
            "in": "query"
          },
          {
            "type": "string",
            "name": "deviceName",
            "in": "query"
          },
          {
            "type": "string",
            "name": "token",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model1"
            },
            "description": "Successful"
          },
          "302": {
            "schema": {
              "type": "string"
            },
            "description": "Found"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/data-links": {
      "get": {
        "summary": "List of all data links.",
        "operationId": "getDatalinks",
        "parameters": [
          {
            "type": "boolean",
            "default": false,
            "name": "siteLinksOnly",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Data Links"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfDataLinks"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create data link.",
        "operationId": "postDatalinks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DataLinkPayload"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Data Links"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DataLink"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices": {
      "get": {
        "summary": "List of all devices in UISP.",
        "operationId": "getDevices",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "name": "withInterfaces",
            "in": "query"
          },
          {
            "type": "boolean",
            "name": "authorized",
            "in": "query"
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "enum": [
                "onu",
                "olt",
                "uispp",
                "uispr",
                "uisps",
                "uispLte",
                "erouter",
                "eswitch",
                "epower",
                "airCube",
                "airMax",
                "airFiber",
                "toughSwitch",
                "solarBeam",
                "wave",
                "blackBox",
                "uisprlxc",
                "express"
              ]
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query",
            "required": false
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "enum": [
                "ap",
                "gateway",
                "gpon",
                "convertor",
                "other",
                "ptp",
                "router",
                "server",
                "station",
                "switch",
                "ups",
                "wireless",
                "wired",
                "homeWiFi",
                "wirelessDevice"
              ]
            },
            "collectionFormat": "multi",
            "name": "role",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "description": "Read-only overview for device list.",
            "schema": {
              "$ref": "#/definitions/ListOfDevices"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/firmwares": {
      "get": {
        "summary": "Fetch available firmware.",
        "operationId": "getFirmwares",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Firmware"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfFirmwares"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Upload new firmware image.",
        "operationId": "postFirmwares",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Firmware"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Firmware"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gateways": {
      "get": {
        "summary": "Get all gateways.",
        "operationId": "getGateways",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Gateways"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfGateways"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create a new gateway.",
        "operationId": "postGateways",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewGateway"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Gateways"
        ],
        "responses": {
          "200": {
            "description": "status of updated gateway with data",
            "schema": {
              "$ref": "#/definitions/Model156"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/logs": {
      "get": {
        "summary": "List of all log items.",
        "operationId": "getLogs",
        "parameters": [
          {
            "type": "number",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "x-format": {
                "guid": true
              }
            },
            "collectionFormat": "multi",
            "name": "siteId",
            "in": "query"
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "x-format": {
                "guid": true
              }
            },
            "collectionFormat": "multi",
            "name": "deviceId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Timestamp of the beginning of the logs",
            "minimum": 1,
            "name": "start",
            "in": "query",
            "required": false
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "enum": [
                "info",
                "warning",
                "error"
              ]
            },
            "collectionFormat": "multi",
            "name": "level",
            "in": "query"
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "enum": [
                "login",
                "device",
                "email-dispatch",
                "nms-backup",
                "nms-update",
                "nms-error",
                "device-alert-message",
                "device-state",
                "device-backup",
                "device-upgrade",
                "device-restart",
                "device-interface",
                "site",
                "uisp-general",
                "pevice-preregistration"
              ]
            },
            "collectionFormat": "multi",
            "name": "tag",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Unix timestamp in milliseconds.",
            "minimum": 10000,
            "maximum": 31536000000,
            "name": "period",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Search pattern.",
            "minLength": 1,
            "name": "query",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Logs"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model12"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/outages": {
      "get": {
        "summary": "List of all network outages for last month.",
        "operationId": "getOutages",
        "parameters": [
          {
            "type": "number",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
              "x-format": {
                "guid": true
              }
            },
            "collectionFormat": "multi",
            "name": "deviceId",
            "in": "query"
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "x-format": {
                "guid": true
              }
            },
            "collectionFormat": "multi",
            "name": "siteId",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Timestamp of the beginning of the finished outages",
            "minimum": 1,
            "name": "start",
            "in": "query",
            "required": false
          },
          {
            "type": "number",
            "description": "Milliseconds passed since start (or now) timestamp",
            "minimum": 3600,
            "name": "period",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "minLength": 1,
            "name": "query",
            "in": "query",
            "required": false
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "enum": [
                "outage",
                "unreachable"
              ]
            },
            "collectionFormat": "multi",
            "name": "type",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "name": "inProgress",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "name": "haveEnded",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "name": "grouped",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Outages"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Outages"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites": {
      "get": {
        "summary": "List of sites in UISP. Only some combinations of query parameters are valid.",
        "operationId": "getSites",
        "parameters": [
          {
            "type": "array",
            "description": "Return only sites with these IDs.",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
              "x-format": {
                "guid": true
              }
            },
            "collectionFormat": "multi",
            "name": "id",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "Return only sites that contain a device with this IP address.",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "ip",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "Return site containing device with this ID.",
            "name": "deviceId",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Return sites with this type.",
            "enum": [
              "site",
              "endpoint",
              "client",
              "subscriber"
            ],
            "name": "type",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "description": "If true, returns only sites that are bound with CRM. If false, returns only sites that are not bound with CRM. Can be used only with \"type\" parameter.",
            "name": "ucrm",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Include CRM client and service details. Can be used with any other parameter.",
            "name": "ucrmDetails",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SitesList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new site.",
        "operationId": "postSites",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateSite"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Site"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/speed-tests": {
      "get": {
        "summary": "Return detail about running speedtests.",
        "operationId": "getSpeedtests",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Speed Test"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfSpeedTests"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/tasks": {
      "get": {
        "summary": "List all tasks.",
        "operationId": "getTasks",
        "parameters": [
          {
            "type": "number",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "enum": [
              "success",
              "failed",
              "in-progress",
              "canceled",
              "queued"
            ],
            "name": "status",
            "in": "query"
          },
          {
            "type": "number",
            "x-constraint": {
              "sign": "positive"
            },
            "name": "period",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Task"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Start FW upgrade task for a group of devices.",
        "operationId": "postTasks",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model158"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token": {
      "get": {
        "summary": "Get all API tokens.",
        "operationId": "getToken",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Token"
        ],
        "responses": {
          "200": {
            "description": "List of tokens.",
            "schema": {
              "$ref": "#/definitions/TokenListSchema"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new API token.",
        "operationId": "postToken",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateToken"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Token"
        ],
        "responses": {
          "200": {
            "description": "Information about new token.",
            "schema": {
              "$ref": "#/definitions/NewTokenSchema"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user": {
      "get": {
        "summary": "Get the authenticated user.",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/User"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserSchema"
                }
              ]
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates authenticated user.",
        "operationId": "putUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EditUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/User"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserSchema"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Return list of all users.",
        "operationId": "getUsers",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserList"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new user.",
        "operationId": "postUsers",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/User"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserSchema"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/access-groups/sites": {
      "get": {
        "summary": "Return site access groups.",
        "operationId": "getAccessgroupsSites",
        "parameters": [
          {
            "type": "array",
            "default": [],
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
              "x-format": {
                "guid": true
              }
            },
            "collectionFormat": "multi",
            "name": "groupId",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Whether to include internal access groups.",
            "default": false,
            "name": "withInternal",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Whether to include site and user counts.",
            "default": false,
            "name": "withOverview",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SiteAccessGroupList"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new site access group.",
        "operationId": "postAccessgroupsSites",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RequestSiteAccessGroup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SiteAccessGroup"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/crm/roles": {
      "get": {
        "summary": "Get CRM admin users.",
        "operationId": "getCrmRoles",
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRM"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CrmRoleListSchema"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/crm/service-plans": {
      "get": {
        "summary": "Get CRM service plans.",
        "operationId": "getCrmServiceplans",
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRM"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CrmServicePlanListSchema"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/data-links/{id}": {
      "get": {
        "summary": "Get data link based on its ID.",
        "operationId": "getDatalinksId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Data Links"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DataLink"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update data link.",
        "operationId": "putDatalinksId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DataLinkPayload"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Data Links"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DataLink"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete data link based on its ID.",
        "operationId": "deleteDatalinksId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Data Links"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/discovered": {
      "get": {
        "summary": "List of discovered devices.",
        "operationId": "getDevicesDiscovered",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "description": "Read-only overview for device list.",
            "schema": {
              "$ref": "#/definitions/ListOfDevices"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/images": {
      "get": {
        "summary": "Returns list of all devices model image.",
        "operationId": "getDevicesImages",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceImageInfo"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/ips": {
      "get": {
        "summary": "Return a list of devices IPs which are in UISP monitored IP ranges.",
        "operationId": "getDevicesIps",
        "parameters": [
          {
            "type": "boolean",
            "description": "Return only IPs which are blocked.",
            "name": "suspended",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "Return also management IPs.",
            "name": "management",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Return only IPs for this UISP site.",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "Return only IPs for this UCRM service.",
            "name": "ucrmId",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "description": "Return all available IP addresses including those disconnected for longer than 24 hours",
            "name": "includeObsolete",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model19"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/login": {
      "get": {
        "summary": "Create device ticket to login via controller",
        "operationId": "getDevicesLogin",
        "parameters": [
          {
            "type": "string",
            "description": "Device MAC address.",
            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$",
            "name": "mac",
            "in": "query"
          },
          {
            "type": "string",
            "description": "IP address or FQDN to redirect.",
            "minLength": 1,
            "name": "ip",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model20"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/macs": {
      "get": {
        "summary": "Return a list of all devices MAC address (except for ONUs).",
        "operationId": "getDevicesMacs",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model21"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus": {
      "get": {
        "summary": "List of ONU in UISP.",
        "operationId": "getDevicesOnus",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "parentId",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfOnuDevices"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/ssids": {
      "get": {
        "summary": "Get devices wireless configuration",
        "operationId": "getDevicesSsids",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceSsidList"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/unknown": {
      "get": {
        "summary": "Get unknown client devices (based on detected network traffic) ordered by total traffic.",
        "operationId": "getDevicesUnknown",
        "parameters": [
          {
            "type": "number",
            "description": "Get only devices that produced at least this amount of traffic (in bytes).",
            "default": 102400,
            "minimum": 0,
            "name": "minTraffic",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices",
          "Traffic"
        ],
        "responses": {
          "200": {
            "description": "List of unknown devices.",
            "schema": {
              "$ref": "#/definitions/UnknownDevicesList"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}": {
      "get": {
        "summary": "Device status overview.",
        "operationId": "getDevicesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete device.",
        "operationId": "deleteDevicesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/scan-status": {
      "get": {
        "summary": "Get current scan status (payload is WIP).",
        "operationId": "getDiscoveryScanstatus",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gateways/speed": {
      "get": {
        "summary": "Get current and last 24-hour peak of sums of up/down speed of all gateways",
        "operationId": "getGatewaysSpeed",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Gateways"
        ],
        "responses": {
          "200": {
            "description": "gatewaySpeedSchema",
            "schema": {
              "$ref": "#/definitions/Model22"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gateways/{id}": {
      "get": {
        "summary": "Get gateway detail",
        "operationId": "getGatewaysId",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Gateways"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model10"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update a gateway.",
        "operationId": "putGatewaysId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model10"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Gateways"
        ],
        "responses": {
          "200": {
            "description": "status of updated gateway with data",
            "schema": {
              "$ref": "#/definitions/Model156"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete a gateway.",
        "operationId": "deleteGatewaysId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Gateways"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/address": {
      "get": {
        "summary": "Get IP address of the UISP server, resolve hostname if necessary.",
        "operationId": "getNmsAddress",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "IP addresss",
            "schema": {
              "type": "string",
              "description": "IP addresss",
              "example": "192.168.1.100",
              "x-format": {
                "ip": {
                  "cidr": "optional"
                }
              }
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/backups": {
      "get": {
        "summary": "Get UISP backups.",
        "operationId": "getNmsBackups",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispBackupList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/changed": {
      "get": {
        "summary": "List of items in UISP that changed since given timestamp.",
        "operationId": "getNmsChanged",
        "parameters": [
          {
            "type": "integer",
            "description": "Timestamp in milliseconds.",
            "minimum": 0,
            "name": "since",
            "in": "query",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Search items related to UCRM.",
            "name": "ucrm",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ChangedItems"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/connection": {
      "get": {
        "summary": "Return UISP key for UISP server.",
        "operationId": "getNmsConnection",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/enums": {
      "get": {
        "summary": "Return UISP enumerations.",
        "operationId": "getNmsEnums",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "Enumerations object",
            "schema": {
              "type": "string",
              "description": "Enumerations object"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/heartbeat": {
      "get": {
        "summary": "Liveness check.",
        "operationId": "getNmsHeartbeat",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/info": {
      "get": {
        "summary": "Return UISP info.",
        "operationId": "getNmsInfo",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "forbidden"
              }
            },
            "x-alternatives": [
              {
                "type": "string",
                "x-format": {
                  "ip": {
                    "cidr": "forbidden"
                  }
                }
              },
              {
                "type": "string",
                "x-format": {
                  "ip": {
                    "cidr": "forbidden"
                  }
                }
              }
            ],
            "name": "ip",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model23"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "405": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Method Not Allowed"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/nms/keep-alive": {
      "get": {
        "summary": "Extend validity of user token.",
        "operationId": "getNmsKeepalive",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model24"
            },
            "description": "Successful"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/log-verbosity": {
      "get": {
        "summary": "Get current server log verbosity.",
        "operationId": "getNmsLogverbosity",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServerLogVerbosityResponseSchema"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Change current server log verbosity and generate profile.",
        "operationId": "postNmsLogverbosity",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ServerLogVerbosityPayloadSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServerLogVerbosityResponseSchema"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/mailserver": {
      "get": {
        "summary": "Fetch mail server settings.",
        "operationId": "getNmsMailserver",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MailServer"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update mail server settings.",
        "operationId": "putNmsMailserver",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/smtp"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MailServer"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/news": {
      "get": {
        "summary": "Get news from UISP feed for user.",
        "operationId": "getNmsNews",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NewsSchemaList"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "406": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Acceptable"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/search": {
      "get": {
        "summary": "Search UISP.",
        "operationId": "getNmsSearch",
        "parameters": [
          {
            "type": "string",
            "description": "Text to search for.",
            "name": "query",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Results per page.",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Results page.",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SearchResultSchema"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/server-config": {
      "get": {
        "summary": "Return UISP server configuration.",
        "operationId": "getNmsServerconfig",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServerConfig"
            },
            "description": "Successful"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/server-time": {
      "get": {
        "summary": "Get server time of the UISP server.",
        "operationId": "getNmsServertime",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "description": "server time on server",
            "schema": {
              "type": "string",
              "description": "server time on server",
              "example": "2018-11-16T08:42:18.679Z"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/settings": {
      "get": {
        "summary": "Get UISP settings.",
        "operationId": "getNmsSettings",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NmsSettings1"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update UISP settings.",
        "operationId": "putNmsSettings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NmsUpdateSettings"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NmsSettings1"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "412": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Precondition Failed"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/setup": {
      "get": {
        "summary": "Return status of UISP setup.",
        "operationId": "getNmsSetup",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServerStatusUnmsSetup"
            },
            "description": "Successful"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Setup UISP instance.",
        "operationId": "postNmsSetup",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model166"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SetupUispFinish"
            },
            "description": "Successful"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/statistics": {
      "get": {
        "summary": "Get UISP network statistics.",
        "operationId": "getNmsStatistics",
        "parameters": [
          {
            "type": "string",
            "description": "Interval",
            "enum": [
              "hour",
              "fourhours",
              "day",
              "week",
              "month",
              "quarter",
              "year",
              "range"
            ],
            "name": "interval",
            "in": "query",
            "required": false
          },
          {
            "type": "integer",
            "description": "Timestamp of the beginning of statistics",
            "minimum": 0,
            "name": "start",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "Milliseconds since start timestamp",
            "minimum": 1,
            "name": "period",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NetworkStatistics"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "406": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Acceptable"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/subscriber": {
      "get": {
        "summary": "Get subscriber detail with QoS and device list",
        "operationId": "getNmsSubscriber",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubscriberSuccessSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/summary": {
      "get": {
        "summary": "Various badge-count like values, e.g. unread logs count.",
        "operationId": "getNmsSummary",
        "parameters": [
          {
            "type": "integer",
            "default": 0,
            "name": "outagesTimestamp",
            "in": "query"
          },
          {
            "type": "integer",
            "default": 0,
            "name": "logsTimestamp",
            "in": "query"
          },
          {
            "type": "array",
            "x-constraint": {
              "single": true
            },
            "items": {
              "type": "string",
              "enum": [
                "info",
                "warning",
                "error"
              ]
            },
            "collectionFormat": "multi",
            "name": "logsLevel",
            "in": "query",
            "required": true
          },
          {
            "type": "integer",
            "default": 0,
            "name": "firmwaresTimestamp",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ServerSummary"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/traffic": {
      "get": {
        "summary": "Return netflow traffic status.",
        "operationId": "getNmsTraffic",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Traffic",
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrafficStatus"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/update": {
      "get": {
        "summary": "Get UISP update status.",
        "operationId": "getNmsUpdate",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NmsUpdateStatus"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Service Unavailable"
          }
        }
      },
      "put": {
        "summary": "Request UISP update.",
        "operationId": "putNmsUpdate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model230"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/nms/version": {
      "get": {
        "summary": "Get UISP version.",
        "operationId": "getNmsVersion",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Version"
            },
            "description": "Successful"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/search": {
      "get": {
        "summary": "Search sites based on name, address, MAC address or IP address.",
        "operationId": "getSitesSearch",
        "parameters": [
          {
            "type": "string",
            "description": "Text to search for in site.",
            "name": "query",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Results per page.",
            "minimum": 1,
            "name": "count",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Results page.",
            "minimum": 1,
            "name": "page",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Type of site to search.",
            "enum": [
              "site",
              "endpoint",
              "client",
              "subscriber"
            ],
            "name": "type",
            "in": "query",
            "required": false
          },
          {
            "type": "boolean",
            "description": "Search sites bound with UCRM.",
            "name": "ucrm",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Order sites by distance from this latitude.",
            "name": "latitude",
            "in": "query"
          },
          {
            "type": "number",
            "description": "Order sites by distance from this longitude.",
            "name": "longitude",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SitesList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/traffic": {
      "get": {
        "summary": "Get traffic from each site between two points in time.",
        "operationId": "getSitesTraffic",
        "parameters": [
          {
            "type": "number",
            "description": "Timestamp of the beginning of the interval in milliseconds",
            "name": "from",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Timestamp of the end of the interval in milliseconds",
            "name": "to",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Granularity of the traffic stats",
            "enum": [
              "fiveMinutes",
              "oneHour"
            ],
            "name": "granularity",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites",
          "Traffic"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SiteTrafficList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{id}": {
      "get": {
        "summary": "Return a site's detail.",
        "operationId": "getSitesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Include CRM client and service details.",
            "name": "ucrmDetails",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Site"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update site.",
        "operationId": "putSitesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SiteUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Site"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete site. It's possible to call only on empty site.",
        "operationId": "deleteSitesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/device-status-numbers-by-roles": {
      "get": {
        "summary": "Return number of devices firmware upgrade status by roles.",
        "operationId": "getTasksDevicestatusnumbersbyroles",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "name": "DevicesFirmwareStatusByRoles",
              "properties": {
                "string": {
                  "$ref": "#/definitions/string1"
                }
              }
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/in-progress": {
      "get": {
        "summary": "Return number of tasks in progress state.",
        "operationId": "getTasksInprogress",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InProgress"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/prepare-auto-updates": {
      "get": {
        "summary": "Construct tasks for auto updates.",
        "operationId": "getTasksPrepareautoupdates",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "name": "DevicesFirmwareStatusByRoles",
              "properties": {
                "string": {
                  "$ref": "#/definitions/string1"
                }
              }
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/{batchId}": {
      "get": {
        "summary": "Returns a mass upgrade task inner task items.",
        "operationId": "getTasksBatchid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "batchId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfTaskItems1"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/{tokenId}": {
      "get": {
        "summary": "Get API token by ID.",
        "operationId": "getTokenTokenid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "tokenId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Token"
        ],
        "responses": {
          "200": {
            "description": "Information about token.",
            "schema": {
              "$ref": "#/definitions/TokenSchema"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete API token.",
        "operationId": "deleteTokenTokenid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "tokenId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Token"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/totpauth": {
      "get": {
        "summary": "Gets new information for two factor authentication.",
        "operationId": "getUserTotpauth",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TwoFactorSecret"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Sets two factor authentication for user.",
        "operationId": "putUserTotpauth",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EnableTotpAuth"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/User"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserSchema"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/credentials": {
      "get": {
        "summary": "Get credentials vault status.",
        "operationId": "getVaultCredentials",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vault"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Vault"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Update credentials vault status.",
        "operationId": "postVaultCredentials",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VaultCredentials"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vault"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Vault"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/access-groups/sites/{groupId}": {
      "get": {
        "summary": "Get site access group.",
        "operationId": "getAccessgroupsSitesGroupid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SiteAccessGroup"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update site access group.",
        "operationId": "putAccessgroupsSitesGroupid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RequestSiteAccessGroup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SiteAccessGroup"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete site access group.",
        "operationId": "deleteAccessgroupsSitesGroupid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "groupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/airlink/proxy/airlink-be": {
      "get": {
        "summary": "Get elevation data between two points.",
        "operationId": "getAirlinkProxyAirlinkbe",
        "parameters": [
          {
            "type": "number",
            "description": "Latitude of the first point.",
            "minimum": -90,
            "maximum": 90,
            "name": "lat1",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Longitude of the first point.",
            "minimum": -180,
            "maximum": 180,
            "name": "lon1",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Latitude of the second point.",
            "minimum": -90,
            "maximum": 90,
            "name": "lat2",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Longitude of the second point.",
            "minimum": -180,
            "maximum": 180,
            "name": "lon2",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Number of elevations to get.",
            "default": 256,
            "minimum": 2,
            "maximum": 1024,
            "name": "samples",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirLinkBeSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "502": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/airlink/proxy/countries-map.geo.json": {
      "get": {
        "summary": "Get countries map data file.",
        "operationId": "getAirlinkProxyCountriesmapgeojson",
        "parameters": [
          {
            "type": "number",
            "description": "Countries map file version.",
            "default": 1,
            "name": "version",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "502": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/airlink/proxy/elevation": {
      "get": {
        "summary": "Get elevation data file.",
        "operationId": "getAirlinkProxyElevation",
        "parameters": [
          {
            "type": "string",
            "description": "Elevation file name.",
            "x-format": {
              "alphanum": true
            },
            "x-convert": {
              "case": "upper"
            },
            "name": "file",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Elevation file version.",
            "default": 1,
            "name": "version",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "502": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/airlink/proxy/lidar-boundaries.geojson": {
      "get": {
        "summary": "Get lidar boundaries data file.",
        "operationId": "getAirlinkProxyLidarboundariesgeojson",
        "parameters": [
          {
            "type": "number",
            "description": "Lidar boundaries file version",
            "default": 1,
            "name": "version",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "502": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/airlink/proxy/rainfall-average.map": {
      "get": {
        "summary": "Get average rainfall map data file.",
        "operationId": "getAirlinkProxyRainfallaveragemap",
        "parameters": [
          {
            "type": "number",
            "description": "Rainfall map file version.",
            "default": 1,
            "name": "version",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "502": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/airlink/proxy/rainfall-r001.map": {
      "get": {
        "summary": "Get rainfall map data file.",
        "operationId": "getAirlinkProxyRainfallr001map",
        "parameters": [
          {
            "type": "number",
            "description": "Rainfall map file version.",
            "default": 1,
            "name": "version",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "502": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Gateway"
          }
        }
      }
    },
    "/crm/{ucrmClientId}/tickets": {
      "get": {
        "summary": "List of CRM tickets belonging to the subscriber (CRM client).",
        "operationId": "getCrmUcrmclientidTickets",
        "parameters": [
          {
            "type": "string",
            "name": "ucrmClientId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Result limit.",
            "name": "limit",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Records offset.",
            "name": "offset",
            "in": "query"
          },
          {
            "type": "string",
            "enum": [
              "lastActivity",
              "id",
              "createdAt"
            ],
            "name": "order",
            "in": "query"
          },
          {
            "type": "string",
            "enum": [
              "DESC",
              "ASC"
            ],
            "name": "direction",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRM"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CRM%20tickets"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/data-links/device/{id}": {
      "get": {
        "summary": "Get data link based on device ID.",
        "operationId": "getDatalinksDeviceId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Data Links"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfDataLinks"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/data-links/sites/{siteId}": {
      "get": {
        "summary": "List of data links based siteId",
        "operationId": "getDatalinksSitesSiteid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Data Links"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfDataLinks"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}": {
      "get": {
        "summary": "Return AirCube detail.",
        "operationId": "getDevicesAircubesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withStations",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirCube"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airfibers/{id}": {
      "get": {
        "summary": "Return AirFiber detail.",
        "operationId": "getDevicesAirfibersId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withStations",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirFiber"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}": {
      "get": {
        "summary": "Return AirMax detail.",
        "operationId": "getDevicesAirmaxesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withStations",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceAirmaxSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aps/profiles": {
      "get": {
        "summary": "List of all access points and their connection profiles.",
        "operationId": "getDevicesApsProfiles",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceApsProfileListSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/blackboxes/{id}": {
      "get": {
        "summary": "Return Blackbox device.",
        "operationId": "getDevicesBlackboxesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BlackBox"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/discovered/head": {
      "get": {
        "summary": "First of discovered devices without BlackBox and UX.",
        "operationId": "getDevicesDiscoveredHead",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatusOverview2"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/epowers/{id}": {
      "get": {
        "summary": "Get epower device.",
        "operationId": "getDevicesEpowersId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        }
      }
    },
    "/devices/erouters/{id}": {
      "get": {
        "summary": "Return EdgeRouter detail. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/detail]",
        "operationId": "getDevicesEroutersId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatusOverview"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/eswitches/{id}": {
      "get": {
        "summary": "Return EdgeSwitch detail.",
        "operationId": "getDevicesEswitchesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatusOverview"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/import/status": {
      "get": {
        "summary": "Status of devices import process.",
        "operationId": "getDevicesImportStatus",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model33"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/mac/{mac}": {
      "get": {
        "summary": "Get info on device by mac address.",
        "operationId": "getDevicesMacMac",
        "parameters": [
          {
            "type": "string",
            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$",
            "name": "mac",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model34"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/olts/{id}": {
      "get": {
        "summary": "Return OLT detail.",
        "operationId": "getDevicesOltsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Olt"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}": {
      "get": {
        "summary": "Return ONU detail.",
        "operationId": "getDevicesOnusId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Onu"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/solarbeams/{id}": {
      "get": {
        "summary": "Return SolarBeam detail.",
        "operationId": "getDevicesSolarbeamsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatusOverview"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/toughswitches/{id}": {
      "get": {
        "summary": "Return ToughSwitch detail.",
        "operationId": "getDevicesToughswitchesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatusOverview"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}": {
      "get": {
        "summary": "Return UISPRLXC detail. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/detail]",
        "operationId": "getDevicesUisprlxcsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatusOverview"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}": {
      "get": {
        "summary": "Return UISPR detail. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/detail]",
        "operationId": "getDevicesUisprsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatusOverview"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uispss/{id}": {
      "get": {
        "summary": "Return UISP Switch detail.",
        "operationId": "getDevicesUispssId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatusOverview"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/waves/{id}": {
      "get": {
        "summary": "Return Wave detail.",
        "operationId": "getDevicesWavesId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withStations",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Wave"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/operators": {
      "get": {
        "summary": "Return list of available operators [UISP-LTE]",
        "operationId": "getDevicesIdOperators",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model36"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/mac-table-refresh": {
      "get": {
        "summary": "Fetch mac table from device and save to UISP. [EdgeSwitch, EdgeRouter, AirMax, UISPRouter, UISPSwitch, AirFiber, AirCube]",
        "operationId": "getDevicesDeviceidMactablerefresh",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/capabilities": {
      "get": {
        "summary": "Device supported features lists.",
        "operationId": "getDevicesIdCapabilities",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model42"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system": {
      "get": {
        "summary": "Device system configuration.",
        "operationId": "getDevicesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceSystemConfiguration"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update a device's system settings.",
        "operationId": "putDevicesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeviceSystem"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceSystemConfiguration"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/supportfile": {
      "get": {
        "summary": "Get device's support file.",
        "operationId": "getDevicesIdSupportfile",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/remoteuiproxy": {
      "get": {
        "summary": "Get initial remote UI.",
        "operationId": "getDevicesIdRemoteuiproxy",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/detail": {
      "get": {
        "summary": "Get device detail with interfaces and/or stations.",
        "operationId": "getDevicesIdDetail",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "withStations",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatusOverview3"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/statistics": {
      "get": {
        "summary": "Return device statistics.",
        "operationId": "getDevicesIdStatistics",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Interval",
            "enum": [
              "hour",
              "fourhours",
              "day",
              "week",
              "month",
              "quarter",
              "year",
              "range"
            ],
            "name": "interval",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "start",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "period",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceStatistics"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/configuration": {
      "get": {
        "summary": "Get device system and services configuration.",
        "operationId": "getDevicesIdConfiguration",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model62"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update device system and services configuration.",
        "operationId": "putDevicesIdConfiguration",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model62"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model62"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/services": {
      "get": {
        "summary": "Device services.",
        "operationId": "getDevicesIdServices",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "object",
            "name": "payload",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceService"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update device services.",
        "operationId": "putDevicesIdServices",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeviceService"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceService"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/location": {
      "get": {
        "summary": "Return location of the device.",
        "operationId": "getDevicesDeviceidLocation",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceLocation"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update location of the device.",
        "operationId": "putDevicesDeviceidLocation",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeviceLocation"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceLocation"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/mac-table": {
      "get": {
        "summary": "Return mac table of device.",
        "operationId": "getDevicesDeviceidMactable",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "column name",
            "enum": [
              "device_id",
              "addresses",
              "vendor",
              "mac",
              "vlan",
              "s_name",
              "hostname",
              "interface_id"
            ],
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "descending sort rows [z-a] or [9-0]",
            "name": "sortDesc",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "items count",
            "minimum": 0,
            "name": "count",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "number page",
            "minimum": 1,
            "name": "page",
            "in": "query"
          },
          {
            "type": "string",
            "name": "search",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/MacTableSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/vlans": {
      "get": {
        "summary": "Get device's VLANs.",
        "operationId": "getDevicesIdVlans",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model67"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Update device's VLANs.",
        "operationId": "postDevicesIdVlans",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model67"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model67"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/netflow": {
      "get": {
        "summary": "Get information on device's flow-accounting status.",
        "operationId": "getDevicesIdNetflow",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "minLength": 0,
            "name": "interfaceId",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model68"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          }
        }
      }
    },
    "/devices/{id}/clients": {
      "get": {
        "summary": "Return a devices' connected devices [UISP-LTE]",
        "operationId": "getDevicesIdClients",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model70"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/backups": {
      "get": {
        "summary": "Return list of device backups.",
        "operationId": "getDevicesDeviceidBackups",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceBackupList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new device backup.",
        "operationId": "postDevicesDeviceidBackups",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceBackup"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Upload device backup.",
        "operationId": "putDevicesDeviceidBackups",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model231"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceBackup"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces": {
      "get": {
        "summary": "Return list of device interfaces.",
        "operationId": "getDevicesDeviceidInterfaces",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceListSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/status/{deviceId}": {
      "get": {
        "summary": "Get device's discovery status.",
        "operationId": "getDiscoveryStatusDeviceid",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model71"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gateways/{id}/speed": {
      "get": {
        "summary": "Get current and last 24-hour peak of up/down speed of a gateway",
        "operationId": "getGatewaysIdSpeed",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Gateways"
        ],
        "responses": {
          "200": {
            "description": "gatewaySpeedSchema",
            "schema": {
              "$ref": "#/definitions/Model22"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/gdpr/clients/{id}": {
      "get": {
        "summary": "Download GDPR Client Report.",
        "operationId": "getGdprClientsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Export"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/backups/{backupId}": {
      "get": {
        "summary": "Get UISP backup file.",
        "operationId": "getNmsBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete UISP backup.",
        "operationId": "deleteNmsBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/downloads/{token}": {
      "get": {
        "summary": "Download UISP backups.",
        "operationId": "getNmsDownloadsToken",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/maintenance/backup": {
      "get": {
        "summary": "Download data backup.",
        "operationId": "getNmsMaintenanceBackup",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Upload data backup.",
        "operationId": "putNmsMaintenanceBackup",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/maintenance/supportinfo": {
      "get": {
        "summary": "Download UISP support file.",
        "operationId": "getNmsMaintenanceSupportinfo",
        "parameters": [
          {
            "type": "integer",
            "minimum": 1,
            "maximum": 5,
            "name": "period",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/questionnaires/active": {
      "get": {
        "summary": "Get currently active questionnaire.",
        "operationId": "getNmsQuestionnairesActive",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ActiveQuestionnaire"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/speed/report": {
      "get": {
        "summary": "Results of speed report.",
        "operationId": "getNmsSpeedReport",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "query",
            "required": false
          },
          {
            "type": "string",
            "description": "column name",
            "enum": [
              "created_at",
              "isp_name",
              "s_name",
              "upload_speed_bytes",
              "download_speed_bytes",
              "server_name",
              "type",
              "endpoint",
              "upload_rate_bytes",
              "download_rate_bytes",
              "public_ip",
              "platform",
              "system",
              "vendor",
              "model"
            ],
            "name": "sortBy",
            "in": "query"
          },
          {
            "type": "boolean",
            "description": "descending sort rows [z-a] or [9-0]",
            "name": "sortDesc",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "items count",
            "minimum": 0,
            "name": "count",
            "in": "query"
          },
          {
            "type": "integer",
            "description": "number page",
            "minimum": 1,
            "name": "page",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model73"
            },
            "description": "Successful"
          },
          "405": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Method Not Allowed"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Endpoint for reporting speed. Mobile application WiFiman can share speed result for example.",
        "operationId": "postNmsSpeedReport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model181"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "405": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Method Not Allowed"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/traffic/blacklist": {
      "get": {
        "summary": "Get subnets that are ignored by traffic collection.",
        "operationId": "getNmsTrafficBlacklist",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server",
          "Traffic"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BlacklistSchema"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Set subnets that are ignored by traffic collection.",
        "operationId": "postNmsTrafficBlacklist",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/BlacklistSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server",
          "Traffic"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BlacklistSchema"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/traffic/subnets": {
      "get": {
        "summary": "Get subnets that are relevant for traffic collection.",
        "operationId": "getNmsTrafficSubnets",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server",
          "Traffic"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubnetList"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Set subnets that are relevant for traffic collection.",
        "operationId": "postNmsTrafficSubnets",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model182"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server",
          "Traffic"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubnetList"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/update/log": {
      "get": {
        "summary": "Get latest update log.",
        "operationId": "getNmsUpdateLog",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/nms/version/latest": {
      "get": {
        "summary": "Get latest UISP version.",
        "operationId": "getNmsVersionLatest",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string",
              "example": "1.0.5"
            },
            "description": "Successful"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/subscribers/statistics": {
      "get": {
        "summary": "Get all subscribers statistics",
        "operationId": "getSitesSubscribersStatistics",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model76"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/slastats": {
      "get": {
        "summary": "Get SLA stats for a subscriber. This endpoint's purpose is ISP and SLA score debugging.",
        "operationId": "getSitesSiteidSlastats",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/statistics": {
      "get": {
        "summary": "Get upload and download between site and its parent site",
        "operationId": "getSitesSiteidStatistics",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Interval for which to fetch traffic stats",
            "enum": [
              "hour",
              "day",
              "month"
            ],
            "name": "interval",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SitesStatistics"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{id}/images": {
      "get": {
        "summary": "Return all site images sorted by image order.",
        "operationId": "getSitesIdImages",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfImages"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Upload new image and create image thumbnail.",
        "operationId": "postSitesIdImages",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{id}/uplink-devices": {
      "get": {
        "summary": "Return a site's uplink devices with scores.",
        "operationId": "getSitesIdUplinkdevices",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Include uplink device statistics.",
            "name": "withStatistics",
            "in": "query"
          },
          {
            "type": "string",
            "description": "Interval for which to fetch traffic stats",
            "enum": [
              "hour",
              "day",
              "month"
            ],
            "name": "interval",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model78"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{id}/clients": {
      "get": {
        "summary": "List of all client site ids belonging to the given site or to the given site's subtree.",
        "operationId": "getSitesIdClients",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "description": "Set to true if client site ids are needed from the whole site's subtree.",
            "name": "recursive",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "description": "Ids of client sites",
            "schema": {
              "$ref": "#/definitions/Model79"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/traffic": {
      "get": {
        "summary": "Get site traffic between two points in time.",
        "operationId": "getSitesSiteidTraffic",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "description": "Timestamp of the beginning of the interval in milliseconds",
            "name": "from",
            "in": "query",
            "required": true
          },
          {
            "type": "number",
            "description": "Timestamp of the end of the interval in milliseconds",
            "name": "to",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Granularity of the traffic stats",
            "enum": [
              "fiveMinutes",
              "oneHour"
            ],
            "name": "granularity",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites",
          "Traffic"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrafficList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/qos": {
      "get": {
        "summary": "Get client Traffic Shaping.",
        "operationId": "getSitesSiteidQos",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SiteTrafficShaping2"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update client Traffic Shaping.",
        "operationId": "putSitesSiteidQos",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SiteTrafficShaping2"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SiteTrafficShaping2"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/notifications/push": {
      "get": {
        "summary": "Read user push notifications settings route.",
        "operationId": "getUserNotificationsPush",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model82"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Save user push notifications settings route.",
        "operationId": "patchUserNotificationsPush",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model253"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model256"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/offline-passwords/requested": {
      "get": {
        "summary": "Show status if offline passwords request is present for user.",
        "operationId": "getUserOfflinepasswordsRequested",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/credentials/devices": {
      "get": {
        "summary": "Get all devices' credentials.",
        "operationId": "getVaultCredentialsDevices",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vault"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Device%20list%20credentials"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/{deviceId}/credentials": {
      "get": {
        "summary": "Get device credentials.",
        "operationId": "getVaultDeviceidCredentials",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vault"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Device's%20credentials%20with%20flags"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/system": {
      "get": {
        "summary": "Get AirCube system configuration.",
        "operationId": "getDevicesAircubesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirCubeSystemConfig"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube system configuration.",
        "operationId": "putDevicesAircubesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AirCubeSystemConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/wireless": {
      "get": {
        "summary": "Get AirCube wireless config",
        "operationId": "getDevicesAircubesIdWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirCubeWifiConfig"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube wireless configuration.",
        "operationId": "putDevicesAircubesIdWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AirCubeWifiConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/tx-power-lists": {
      "get": {
        "summary": "Return AirCube tx power lists.",
        "operationId": "getDevicesAircubesIdTxpowerlists",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TxPowerList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/stations": {
      "get": {
        "summary": "Return AirCube station list.",
        "operationId": "getDevicesAircubesIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model84"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/frequency-lists": {
      "get": {
        "summary": "Return AirCube frequency lists.",
        "operationId": "getDevicesAircubesIdFrequencylists",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/FrequencyList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/network": {
      "get": {
        "summary": "Get AirCube network configuration.",
        "operationId": "getDevicesAircubesIdNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirCubeNetworkConfig"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube network configuration.",
        "operationId": "putDevicesAircubesIdNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AirCubeNetworkConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airfibers/{id}/stations": {
      "get": {
        "summary": "Return AirFiber station list.",
        "operationId": "getDevicesAirfibersIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model86"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/frequency-bands": {
      "get": {
        "summary": "Get AirMax stations frequency bands.",
        "operationId": "getDevicesAirmaxesIdFrequencybands",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "name": "DeviceIdFrequencyBandsSchema",
              "properties": {
                "f7ac9cad-ea28-4390-93c8-7add010e8ee3": {
                  "$ref": "#/definitions/f7ac9cad-ea28-4390-93c8-7add010e8ee3"
                }
              }
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/site-survey": {
      "get": {
        "summary": "Scan sites.",
        "operationId": "getDevicesAirmaxesIdSitesurvey",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfSitesAround"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/stations": {
      "get": {
        "summary": "Return AirMax station list.",
        "operationId": "getDevicesAirmaxesIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfAirmaxStations"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/system": {
      "get": {
        "summary": "Get AirMax system config. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/system]",
        "operationId": "getDevicesAirmaxesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model88"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/airos/{id}/regdomain": {
      "get": {
        "summary": "Get device regulatory domain information for configured or provided via query parameter country).",
        "operationId": "getDevicesAirosIdRegdomain",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "countryCode",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model92"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airos/{id}/configuration": {
      "get": {
        "summary": "Get airOS device configuration.",
        "operationId": "getDevicesAirosIdConfiguration",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirosConfigurationSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update airOs device configuration.",
        "operationId": "putDevicesAirosIdConfiguration",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": true,
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "type": "boolean",
            "default": false,
            "name": "isLinkConfiguration",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AirosConfigurationSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airos/{id}/countries": {
      "get": {
        "summary": "Get list of available countries on device.",
        "operationId": "getDevicesAirosIdCountries",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model102"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/blackboxes/{id}/config": {
      "get": {
        "summary": "Return BlackBox device config.",
        "operationId": "getDevicesBlackboxesIdConfig",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceBlackBoxConfig"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update BlackBox device config.",
        "operationId": "putDevicesBlackboxesIdConfig",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeviceBlackBoxConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceBlackBoxConfig"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/netflow": {
      "get": {
        "summary": "Get information on device's flow-accounting status. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/netflow]",
        "operationId": "getDevicesEroutersIdNetflow",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "minLength": 1,
            "name": "interfaceId",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model68"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/eswitches/{id}/system": {
      "get": {
        "summary": "Get EdgeSwitch system configuration. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/system]",
        "operationId": "getDevicesEswitchesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model88"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/onus/{id}/vlans": {
      "get": {
        "summary": "Get list of OLT's VLANs.",
        "operationId": "getDevicesOnusIdVlans",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/vlansSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Implemented"
          }
        }
      }
    },
    "/devices/onus/{id}/wireless": {
      "get": {
        "summary": "Get an Onu's wireless settings.",
        "operationId": "getDevicesOnusIdWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OnuWireless"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Implemented"
          }
        }
      },
      "put": {
        "summary": "Update an Onu's wireless settings.",
        "operationId": "putDevicesOnusIdWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OnuWireless"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OnuWireless"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/clients": {
      "get": {
        "summary": "Get an Onu's connected devices MAC addressees.",
        "operationId": "getDevicesOnusIdClients",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OnuClientList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/services": {
      "get": {
        "summary": "Get an Onu's services.",
        "operationId": "getDevicesOnusIdServices",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model109"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/network": {
      "get": {
        "summary": "Get an Onu's network settings.",
        "operationId": "getDevicesOnusIdNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OnuNetwork"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update an Onu's network settings.",
        "operationId": "putDevicesOnusIdNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OnuNetwork"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OnuNetwork"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/toughswitches/{id}/system": {
      "get": {
        "summary": "Get ToughSwitch system configuration. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/system]",
        "operationId": "getDevicesToughswitchesIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model88"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/netflow": {
      "get": {
        "summary": "Get information on device's flow-accounting status. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/netflow]",
        "operationId": "getDevicesUisprlxcsIdNetflow",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "minLength": 1,
            "name": "interfaceId",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model68"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/netflow": {
      "get": {
        "summary": "Get information on device's flow-accounting status. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/netflow]",
        "operationId": "getDevicesUisprsIdNetflow",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "minLength": 1,
            "name": "interfaceId",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model68"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uispss/{id}/system": {
      "get": {
        "summary": "Get UISP Switch system configuration. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/system]",
        "operationId": "getDevicesUispssIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model88"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/ux/{id}/refresh": {
      "get": {
        "summary": "Refresh Express data",
        "operationId": "getDevicesUxIdRefresh",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/waves/{id}/stations": {
      "get": {
        "summary": "Return Wave station list.",
        "operationId": "getDevicesWavesIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model113"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/wifi-router/{id}/configuration": {
      "get": {
        "summary": "Returns configuration of wifiRouter",
        "operationId": "getDevicesWifirouterIdConfiguration",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model118"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update configuration of wifiRouter",
        "operationId": "putDevicesWifirouterIdConfiguration",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model118"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/speed-tests/{testId}": {
      "get": {
        "summary": "Return detail about running speedtest.",
        "operationId": "getDevicesDeviceidSpeedtestsTestid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "name": "testId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Speed Test",
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model120"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Stop speed test.",
        "operationId": "deleteDevicesDeviceidSpeedtestsTestid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "number",
            "name": "testId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Speed Test",
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/backups/{backupId}": {
      "get": {
        "summary": "Return device configuration backup file.",
        "operationId": "getDevicesDeviceidBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "backupId",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "default": false,
            "name": "replaceUnmsKey",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update backup.",
        "operationId": "putDevicesDeviceidBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "backupId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeviceBackup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete backup.",
        "operationId": "deleteDevicesDeviceidBackupsBackupid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/dhcp-details/{interface}": {
      "get": {
        "summary": "Returns details of DHCP IP address - gateway and DNS servers.",
        "operationId": "getDevicesIdDhcpdetailsInterface",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interface",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model121"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/router/routes": {
      "get": {
        "summary": "Get all routes.",
        "operationId": "getDevicesIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfRouterRoutes",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/ListOfRouterRoutes"
                },
                {
                  "$ref": "#/x-alt-definitions/ListOfRouterRoutes1"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new static route.",
        "operationId": "postDevicesIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "x-alternatives": [
              {
                "$ref": "#/x-alt-definitions/RouterRouteUpsert"
              },
              {
                "$ref": "#/x-alt-definitions/RouterRouteUpsert1"
              }
            ],
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRouteUpsert"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RouterRoutes",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/RouterRoutes"
                },
                {
                  "$ref": "#/x-alt-definitions/RouterRoutes1"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Edit static route.",
        "operationId": "putDevicesIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "x-alternatives": [
              {
                "$ref": "#/x-alt-definitions/RouterRouteUpsert"
              },
              {
                "$ref": "#/x-alt-definitions/RouterRouteUpsert1"
              }
            ],
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRouteUpsert"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RouterRoutes",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/RouterRoutes"
                },
                {
                  "$ref": "#/x-alt-definitions/RouterRoutes1"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/unms": {
      "get": {
        "summary": "Device specific UISP settings.",
        "operationId": "getDevicesIdSystemUnms",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispSetting"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update device specific UISP settings.",
        "operationId": "putDevicesIdSystemUnms",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PayloadUnmsSettings"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispSetting"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/router/ospf": {
      "get": {
        "summary": "Get OSPF configuration.",
        "operationId": "getDevicesIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RouterOspf"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update OSPF configuration.",
        "operationId": "putDevicesIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterOspf"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RouterOspf"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}": {
      "get": {
        "summary": "Get interface configuration.",
        "operationId": "getDevicesDeviceidInterfacesInterfacename",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update interface configuration.",
        "operationId": "putDevicesDeviceidInterfacesInterfacename",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete interface.",
        "operationId": "deleteDevicesDeviceidInterfacesInterfacename",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/backups/{backupId}/download-token": {
      "get": {
        "summary": "Get temporary download token for this backup.",
        "operationId": "getNmsBackupsBackupidDownloadtoken",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/maintenance/backup/restore": {
      "get": {
        "summary": "Restores uploaded UISP backup file.",
        "operationId": "getNmsMaintenanceBackupRestore",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Clears uploaded UISP backup file.",
        "operationId": "deleteNmsMaintenanceBackupRestore",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/subscribers/{siteId}/statistics": {
      "get": {
        "summary": "Get a subscriber's statistics",
        "operationId": "getSitesSubscribersSiteidStatistics",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Interval",
            "enum": [
              "hour",
              "fourhours",
              "day",
              "week",
              "month",
              "quarter",
              "year",
              "range"
            ],
            "name": "interval",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "start",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "period",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model122"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/traffic/interval": {
      "get": {
        "summary": "Get site traffic for specified interval up to now.",
        "operationId": "getSitesSiteidTrafficInterval",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Interval for which to fetch traffic stats",
            "enum": [
              "hour",
              "day",
              "month"
            ],
            "name": "interval",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "description": "Granularity of the traffic stats",
            "enum": [
              "fiveMinutes",
              "oneHour"
            ],
            "name": "granularity",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites",
          "Traffic"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrafficList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/images/{imageId}": {
      "get": {
        "summary": "Return image file.",
        "operationId": "getSitesSiteidImagesImageid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete image.",
        "operationId": "deleteSitesSiteidImagesImageid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Update image.",
        "operationId": "patchSitesSiteidImagesImageid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "imageId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ImageData"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Image"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/traffic/summary": {
      "get": {
        "summary": "Get site total upload and download for specified interval up to now.",
        "operationId": "getSitesSiteidTrafficSummary",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "description": "Interval for which to fetch traffic stats",
            "enum": [
              "hour",
              "day",
              "month"
            ],
            "name": "interval",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites",
          "Traffic"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrafficSummary"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/config/network": {
      "get": {
        "summary": "Get AirCube network config. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/network' instead.",
        "operationId": "getDevicesAircubesIdConfigNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirCubeNetworkConfig"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube network config. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/network' instead.",
        "operationId": "putDevicesAircubesIdConfigNetwork",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AirCubeNetworkConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/config/wireless": {
      "get": {
        "summary": "Get AirCube wireless config. This API endpoint is DEPRECATED.\n        Please refer to '/nms/api/v2.1/devices/aircubes/{id}/wireless' instead.",
        "operationId": "getDevicesAircubesIdConfigWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirCubeWifiConfig"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube wireless config. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/wireless' instead.",
        "operationId": "putDevicesAircubesIdConfigWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AirCubeWifiConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/aircubes/{id}/config/system": {
      "get": {
        "summary": "Get AirCube system config. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/system' instead.",
        "operationId": "getDevicesAircubesIdConfigSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirCubeSystemConfig"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirCube system settings. This API endpoint is DEPRECATED.\n      Please refer to '/nms/api/v2.1/devices/aircubes/{id}/system' instead.",
        "operationId": "putDevicesAircubesIdConfigSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AirCubeSystemConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/config/wireless": {
      "get": {
        "summary": "Get AirMax wireless config.",
        "operationId": "getDevicesAirmaxesIdConfigWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AirMaxWifiConfig"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update AirMax wireless config.",
        "operationId": "putDevicesAirmaxesIdConfigWireless",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AirMaxWifiConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/epowers/{id}/configuration/power": {
      "get": {
        "summary": "Get epower configuration: [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/system/configuration/power]",
        "operationId": "getDevicesEpowersIdConfigurationPower",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "default": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          }
        },
        "deprecated": true
      }
    },
    "/devices/erouters/{id}/router/routes": {
      "get": {
        "summary": "Get all routes. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/router/routes]",
        "operationId": "getDevicesEroutersIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfEdgeRouterRoutes"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "post": {
        "summary": "Create new static route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes]",
        "operationId": "postDevicesEroutersIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRouteUpsert"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EdgeRouterRoute"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "put": {
        "summary": "Edit static route. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/router/routes]",
        "operationId": "putDevicesEroutersIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRouteUpsert"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EdgeRouterRoute"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/erouters/{id}/router/ospf": {
      "get": {
        "summary": "Get OSPF configuration. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/router/ospf]",
        "operationId": "getDevicesEroutersIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EdgeRouterOspf"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "put": {
        "summary": "Update OSPF configuration. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/router/ospf]",
        "operationId": "putDevicesEroutersIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model236"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EdgeRouterOspf"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/erouters/{id}/dhcp/servers": {
      "get": {
        "summary": "Device DHCP servers.",
        "operationId": "getDevicesEroutersIdDhcpServers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServerList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new DHCP server.",
        "operationId": "postDevicesEroutersIdDhcpServers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateDHCPServer"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServer"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/leases": {
      "get": {
        "summary": "DHCP IP address leases.",
        "operationId": "getDevicesEroutersIdDhcpLeases",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPLeaseList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create DHCP IP address lease.",
        "operationId": "postDevicesEroutersIdDhcpLeases",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DHCPLease3"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPLease"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/solarbeams/{id}/config/system": {
      "get": {
        "summary": "Get SolarBeam system configuration.",
        "operationId": "getDevicesSolarbeamsIdConfigSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model126"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update SolarBeam system settings.",
        "operationId": "putDevicesSolarbeamsIdConfigSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model126"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/settings": {
      "get": {
        "summary": "Get information on device's firewall settings.",
        "operationId": "getDevicesUisprlxcsIdFirewallSettings",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model127"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Set firewall settings on the device.",
        "operationId": "putDevicesUisprlxcsIdFirewallSettings",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model127"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/nats": {
      "get": {
        "summary": "Get information on device's firewall NATs.",
        "operationId": "getDevicesUisprlxcsIdFirewallNats",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model129"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/filters": {
      "get": {
        "summary": "Get information on device's firewall filter chains.",
        "operationId": "getDevicesUisprlxcsIdFirewallFilters",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model132"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/dhcp/leases": {
      "get": {
        "summary": "DHCP IP address leases.",
        "operationId": "getDevicesUisprlxcsIdDhcpLeases",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPLeaseList1"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create DHCP IP address lease.",
        "operationId": "postDevicesUisprlxcsIdDhcpLeases",
        "description": "\n        Request does accept payload with \"leaseId\" property, to match api,\n        but the id is ignored and it will be created from mac and ip.\n      ",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DHCPLease4"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPLease1"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/dhcp/servers": {
      "get": {
        "summary": "Device DHCP servers.",
        "operationId": "getDevicesUisprlxcsIdDhcpServers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServerList1"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new DHCP server.",
        "operationId": "postDevicesUisprlxcsIdDhcpServers",
        "description": "If no \"name\" property in payload specified, it will be create from uuid.",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateDHCPServer1"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServerList3"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/router/routes": {
      "get": {
        "summary": "Get all routes. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/router/routes]",
        "operationId": "getDevicesUisprlxcsIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfUispRLxcRoutes"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "post": {
        "summary": "Create new static route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes]",
        "operationId": "postDevicesUisprlxcsIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRouteUpsert1"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispRLxcRoute"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "put": {
        "summary": "Edit static route. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/router/routes]",
        "operationId": "putDevicesUisprlxcsIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRouteUpsert1"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispRLxcRoute"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/router/ospf": {
      "get": {
        "summary": "Get OSPF configuration. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/router/ospf]",
        "operationId": "getDevicesUisprlxcsIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispRLxcOspf"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "put": {
        "summary": "Update OSPF configuration. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/router/ospf]",
        "operationId": "putDevicesUisprlxcsIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model239"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispRLxcOspf"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/firewall/mangles": {
      "get": {
        "summary": "Get information on device's firewall mangles chains.",
        "operationId": "getDevicesUisprlxcsIdFirewallMangles",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model135"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/sets": {
      "get": {
        "summary": "Get information on device's firewall sets.",
        "operationId": "getDevicesUisprlxcsIdFirewallSets",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model137"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/sets": {
      "get": {
        "summary": "Get information on device's firewall sets.",
        "operationId": "getDevicesUisprsIdFirewallSets",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model139"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/mangles": {
      "get": {
        "summary": "Get information on device's firewall mangles chains.",
        "operationId": "getDevicesUisprsIdFirewallMangles",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model142"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/router/ospf": {
      "get": {
        "summary": "Get OSPF configuration. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/router/ospf]",
        "operationId": "getDevicesUisprsIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispROspf"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "put": {
        "summary": "Update OSPF configuration. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/router/ospf]",
        "operationId": "putDevicesUisprsIdRouterOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model240"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispROspf"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/router/routes": {
      "get": {
        "summary": "Get all routes. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/router/routes]",
        "operationId": "getDevicesUisprsIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfUispRRoutes"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "post": {
        "summary": "Create new static route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes]",
        "operationId": "postDevicesUisprsIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRouteUpsert2"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispRRoute"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "put": {
        "summary": "Edit static route. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/router/routes]",
        "operationId": "putDevicesUisprsIdRouterRoutes",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRouteUpsert2"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispRRoute"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/dhcp/servers": {
      "get": {
        "summary": "Device DHCP servers.",
        "operationId": "getDevicesUisprsIdDhcpServers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServerList2"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new DHCP server. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "postDevicesUisprsIdDhcpServers",
        "description": "If no \"name\" property in payload specified, it will be create from uuid.",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/CreateDHCPServer2"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServerList4"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/dhcp/leases": {
      "get": {
        "summary": "DHCP IP address leases. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "getDevicesUisprsIdDhcpLeases",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPLeaseList2"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "post": {
        "summary": "Create DHCP IP address lease. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "postDevicesUisprsIdDhcpLeases",
        "description": "\n        Request does accept payload with \"leaseId\" property, to match api,\n        but the id is ignored and it will be created from mac and ip.\n      ",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DHCPLease5"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPLease2"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/firewall/filters": {
      "get": {
        "summary": "Get information on device's firewall filter chains.",
        "operationId": "getDevicesUisprsIdFirewallFilters",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model145"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/nats": {
      "get": {
        "summary": "Get information on device's firewall NATs.",
        "operationId": "getDevicesUisprsIdFirewallNats",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model147"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/settings": {
      "get": {
        "summary": "Get information on device's firewall settings.",
        "operationId": "getDevicesUisprsIdFirewallSettings",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model148"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Set firewall settings on the device.",
        "operationId": "putDevicesUisprsIdFirewallSettings",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model148"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model218"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/data-link/available": {
      "get": {
        "summary": "Return list of interfaces available to create data link.",
        "operationId": "getDevicesDeviceidInterfacesDatalinkAvailable",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "dataLinkId",
            "in": "query",
            "required": false
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfAvailableInterfaces"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/configuration/power": {
      "get": {
        "summary": "Get configuration - power.",
        "operationId": "getDevicesIdSystemConfigurationPower",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SystemConfigurationPower"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Set configuration - power.",
        "operationId": "putDevicesIdSystemConfigurationPower",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SystemConfigurationPower"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SystemConfigurationPower"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/router/ospf/areas": {
      "get": {
        "summary": "All OSPF areas.",
        "operationId": "getDevicesIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Create new OSPF area.",
        "operationId": "postDevicesIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OspfArea"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model204"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/remoteuiproxy/resources/{path*}": {
      "get": {
        "summary": "Load local UI resources",
        "operationId": "getDevicesIdRemoteuiproxyResourcesPath",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "path",
            "in": "path"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Update local UI",
        "operationId": "postDevicesIdRemoteuiproxyResourcesPath",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "path",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update local UI",
        "operationId": "putDevicesIdRemoteuiproxyResourcesPath",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "path",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Update local UI",
        "operationId": "deleteDevicesIdRemoteuiproxyResourcesPath",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "path",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "patch": {
        "summary": "Update local UI",
        "operationId": "patchDevicesIdRemoteuiproxyResourcesPath",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "path",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "options": {
        "summary": "Update local UI",
        "operationId": "optionsDevicesIdRemoteuiproxyResourcesPath",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "path",
            "in": "path"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "type": "string"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/udapi/{version}/{udapiUrl*}": {
      "get": {
        "summary": "Udapi device request.",
        "operationId": "getDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Implemented"
          }
        }
      },
      "post": {
        "summary": "Udapi device request.",
        "operationId": "postDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Implemented"
          }
        }
      },
      "put": {
        "summary": "Udapi device request.",
        "operationId": "putDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Implemented"
          }
        }
      },
      "patch": {
        "summary": "Udapi device request.",
        "operationId": "patchDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Implemented"
          }
        }
      },
      "delete": {
        "summary": "Udapi device request.",
        "operationId": "deleteDevicesDeviceidUdapiVersionUdapiurl",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "version",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "udapiUrl",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "description": "Return by version and device udapi response.",
            "schema": {
              "type": "string",
              "description": "Return by version and device udapi response."
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Implemented"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/servers/{serverName}": {
      "get": {
        "summary": "Get DHCP server configuration.",
        "operationId": "getDevicesEroutersIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServerList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update DHCP server configuration.",
        "operationId": "putDevicesEroutersIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateDHCPServer"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServerList"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete DHCP server.",
        "operationId": "deleteDevicesEroutersIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/ospf/areas": {
      "get": {
        "summary": "All OSPF areas. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/router/ospf/areas]",
        "operationId": "getDevicesEroutersIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "post": {
        "summary": "Create new OSPF area. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/ospf/areas]",
        "operationId": "postDevicesEroutersIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OspfArea"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model206"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/router/ospf/interfaces": {
      "get": {
        "summary": "All OSPF Interface. [Deprecated in favor of route GET /nms/api/v2.1/devices/{deviceId}/interfaces]",
        "operationId": "getDevicesUisprlxcsIdRouterOspfInterfaces",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/router/ospf/areas": {
      "get": {
        "summary": "All OSPF areas. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/router/ospf/areas]",
        "operationId": "getDevicesUisprlxcsIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "post": {
        "summary": "Create new OSPF area. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/ospf/areas]",
        "operationId": "postDevicesUisprlxcsIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OspfArea"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model210"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/dhcp/servers/{serverName}": {
      "get": {
        "summary": "Get DHCP server configuration.",
        "operationId": "getDevicesUisprlxcsIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServer1"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Update DHCP server configuration.",
        "operationId": "putDevicesUisprlxcsIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateDHCPServer1"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServerList5"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete DHCP server.",
        "operationId": "deleteDevicesUisprlxcsIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/tools/unms-controller/backups": {
      "get": {
        "summary": "Returns list of backups on the microSD and sync status.",
        "operationId": "getDevicesUisprsIdToolsUnmscontrollerBackups",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model153",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/Model25"
                },
                {
                  "$ref": "#/x-alt-definitions/Model26"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/tools/unms-controller/backup-storage": {
      "get": {
        "summary": "Get details about the storage.",
        "operationId": "getDevicesUisprsIdToolsUnmscontrollerBackupstorage",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model154"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/dhcp/servers/{serverName}": {
      "get": {
        "summary": "Get DHCP server configuration. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "getDevicesUisprsIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServer2"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "put": {
        "summary": "Update DHCP server configuration. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "putDevicesUisprsIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateDHCPServer2"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPServerList6"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "delete": {
        "summary": "Delete DHCP server. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "deleteDevicesUisprsIdDhcpServersServername",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/router/ospf/areas": {
      "get": {
        "summary": "All OSPF areas. [Deprecated in favor of route GET /nms/api/v2.1/devices/{id}/router/ospf/areas]",
        "operationId": "getDevicesUisprsIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "post": {
        "summary": "Create new OSPF area. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/ospf/areas]",
        "operationId": "postDevicesUisprsIdRouterOspfAreas",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OspfArea"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model216"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/router/ospf/interfaces": {
      "get": {
        "summary": "All OSPF Interface. [Deprecated in favor of route GET /nms/api/v2.1/devices/{deviceId}/interfaces]",
        "operationId": "getDevicesUisprsIdRouterOspfInterfaces",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/tools/unms-controller/backup-storage/format": {
      "get": {
        "summary": "Get status of microSD card format.",
        "operationId": "getDevicesUisprsIdToolsUnmscontrollerBackupstorageFormat",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model155"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "summary": "Format the microSD card.",
        "operationId": "postDevicesUisprsIdToolsUnmscontrollerBackupstorageFormat",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/crm/clients": {
      "post": {
        "summary": "Create CRM client.",
        "operationId": "postCrmClients",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/NewClientSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRM"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Site"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Service Unavailable"
          }
        }
      }
    },
    "/devices/authorize": {
      "post": {
        "summary": "Authorize single or multiple devices.",
        "operationId": "postDevicesAuthorize",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model159"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/authorizefirst": {
      "post": {
        "summary": "Authorize first device in cloud setup.",
        "operationId": "postDevicesAuthorizefirst",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model160"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AuthorizeFirstDeviceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/backups": {
      "post": {
        "summary": "Create and download a new multi device backup.",
        "operationId": "postDevicesBackups",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DevicesBackup"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/bulkdelete": {
      "post": {
        "summary": "Delete devices.",
        "operationId": "postDevicesBulkdelete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model161"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BulkDeleteDevices"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/bulkrestart": {
      "post": {
        "summary": "Restart devices, devices action reboot.",
        "operationId": "postDevicesBulkrestart",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model162"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/endpoints-for-parallel-firmware-upgrade": {
      "post": {
        "summary": "Returns endpoint devices for parallel firmware upgrade in groups.",
        "operationId": "postDevicesEndpointsforparallelfirmwareupgrade",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PayloadEndpointsForParallelFirmwareUpgrade"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "name": "ResponseEndpointsForParallelFirmwareUpgrade",
              "properties": {
                "string": {
                  "$ref": "#/definitions/string3"
                }
              }
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/import": {
      "post": {
        "summary": "\n      Complex devices import which internally use discovery and creates blackboxes for unreachable and non-UBNT devices.\n      ",
        "operationId": "postDevicesImport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DevicesImport"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/merge": {
      "post": {
        "summary": "Merge two devices.",
        "operationId": "postDevicesMerge",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model164"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/preregistration": {
      "post": {
        "summary": "Create a preregistered device, sort of a \"placeholder\" for a device to be adopted in the future",
        "operationId": "postDevicesPreregistration",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Preregistered%20device"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/refresh": {
      "post": {
        "summary": "Reset devices specific AES keys to universal AES keys.",
        "operationId": "postDevicesRefresh",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model165"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/import": {
      "post": {
        "summary": "Import devices to discovery.",
        "operationId": "postDiscoveryImport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DiscoveryImportList"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/rescan": {
      "post": {
        "summary": "Restart scanning process.",
        "operationId": "postDiscoveryRescan",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/firmwares/delete": {
      "post": {
        "summary": "Batch firmware delete.",
        "operationId": "postFirmwaresDelete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListOfFirmwareIds"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Firmware"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfFirmwares"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/firmwares/download": {
      "post": {
        "summary": "Batch firmware download.",
        "operationId": "postFirmwaresDownload",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Firmware"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOfFirmwares"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/bulkdelete": {
      "post": {
        "summary": "Delete sites. It's possible to call only on empty sites.",
        "operationId": "postSitesBulkdelete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model167"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BulkDeleteSites"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/devicesiterelations": {
      "post": {
        "summary": "Import sites and their devices relations.",
        "operationId": "postSitesDevicesiterelations",
        "parameters": [
          {
            "type": "boolean",
            "description": "\n      If true it will create all sites and clients from payload.\n      In case of duplicate names or ucrmId it will not update them but create duplicates.",
            "default": false,
            "name": "forceCreate",
            "in": "query",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SiteImportList"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Import sites/endpoints and their devices relations.",
        "operationId": "deleteSitesDevicesiterelations",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/devicesubscriberrelations": {
      "post": {
        "summary": "Import subscribers and their devices relations.",
        "operationId": "postSitesDevicesubscriberrelations",
        "parameters": [
          {
            "type": "boolean",
            "description": "\n      If true it will create all sites and clients from payload.\n      In case of duplicate names or ucrmId it will not update them but create duplicates.",
            "default": false,
            "name": "forceCreate",
            "in": "query",
            "required": false
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ImporSubscriberSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/speed-tests/start": {
      "post": {
        "summary": "Execute speed test between two devices.",
        "operationId": "postSpeedtestsStart",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PayloadSpeedTest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Speed Test"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SpeedTestStart"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/user/check-credentials": {
      "post": {
        "summary": "Check user credentials.",
        "operationId": "postUserCheckcredentials",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserCredentials"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/check-session": {
      "post": {
        "summary": "Check that the session token and cookie are valid.",
        "operationId": "postUserChecksession",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/last-release-notes-seen": {
      "post": {
        "summary": "Updates authenticated last release notes seen version.",
        "operationId": "postUserLastreleasenotesseen",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserLastReleaseNotesSeen"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/location": {
      "post": {
        "summary": "Updates user's location.",
        "operationId": "postUserLocation",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UserLocationUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserLocation"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "summary": "Login.",
        "operationId": "postUserLogin",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Login"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserLogin",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/UserLogin"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserLogin"
                }
              ]
            },
            "headers": {
              "x-auth-token": {
                "type": "string",
                "description": "User authorization token"
              }
            },
            "description": "Successful"
          },
          "201": {
            "schema": {
              "$ref": "#/definitions/TwoFactorToken"
            },
            "description": "Created"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/logout": {
      "post": {
        "summary": "Logout.",
        "operationId": "postUserLogout",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/offline-passwords": {
      "post": {
        "summary": "Generates random offline passwords for user.",
        "operationId": "postUserOfflinepasswords",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "responses": {
          "200": {
            "description": "Generated offline passwords. Used for offline access of UISP Console Controller instance.",
            "schema": {
              "$ref": "#/definitions/Model168"
            }
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/import": {
      "post": {
        "summary": "Import users.",
        "operationId": "postUsersImport",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ImportUsersListSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ImportUsersResultListSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/invite": {
      "post": {
        "summary": "Invite new user.",
        "operationId": "postUsersInvite",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/InviteUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InviteUserResponse"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/stations": {
      "post": {
        "summary": "Returns AirMax stations for AirMax access points.",
        "operationId": "postDevicesAirmaxesStations",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PayloadStationsCount"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "object",
              "name": "ResponseStationsCount",
              "properties": {
                "f7ac9cad-ea28-4390-93c8-7add010e8ee3": {
                  "$ref": "#/definitions/f7ac9cad-ea28-4390-93c8-7add010e8ee31"
                }
              }
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/blackboxes/config": {
      "post": {
        "summary": "Create new BlackBox device config.",
        "operationId": "postDevicesBlackboxesConfig",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DeviceBlackBoxConfig"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/Model170"
            },
            "description": "Created"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/connect/other": {
      "post": {
        "summary": "Find and connect other device using IP address",
        "operationId": "postDevicesConnectOther",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ConnectOtherDevice"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/connect/ubnt": {
      "post": {
        "summary": "Find and connect UBNT device using IP and provided credentials.",
        "operationId": "postDevicesConnectUbnt",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ConnectUbntDevice"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/maintenance/disable": {
      "post": {
        "summary": "Disable maintenance mode on one or more devices.",
        "operationId": "postDevicesMaintenanceDisable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MaintenanceModeSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/maintenance/enable": {
      "post": {
        "summary": "Enable maintenance mode on one or more devices.",
        "operationId": "postDevicesMaintenanceEnable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/MaintenanceModeSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/unassign": {
      "post": {
        "summary": "Unassign device.",
        "operationId": "postDevicesIdUnassign",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/refresh": {
      "post": {
        "summary": "Reset device specific AES key to universal AES key.",
        "operationId": "postDevicesIdRefresh",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/debug": {
      "post": {
        "summary": "Enable debug logging.",
        "operationId": "postDevicesIdDebug",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model171"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/upgrade-to-latest": {
      "post": {
        "summary": "\n      Upgrade device FW to the latest FW version in UISP. It's possible to track upgrade process via /tasks API.\n      ",
        "operationId": "postDevicesIdUpgradetolatest",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/restart": {
      "post": {
        "summary": "Restart device, device action reboot.",
        "operationId": "postDevicesIdRestart",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/authorize": {
      "post": {
        "summary": "Authorize device. [Deprecated in favor of route POST /nms/api/v2.1/devices/authorize]",
        "operationId": "postDevicesIdAuthorize",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model172"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/{id}/incompatible-upgrade": {
      "post": {
        "summary": "Set incompatible device for upgrade to the latest FW version on next connection.",
        "operationId": "postDevicesIdIncompatibleupgrade",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/update": {
      "post": {
        "summary": "Set update of device to realtime profile.",
        "operationId": "postDevicesIdUpdate",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/reset-link-score": {
      "post": {
        "summary": "Reset link score.",
        "operationId": "postDevicesIdResetlinkscore",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/switch-dhcp-to-static-ip": {
      "post": {
        "summary": "Switch DHCP to static IP address - gateway (route), DNS servers (system) and interface.",
        "operationId": "postDevicesIdSwitchdhcptostaticip",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model173"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/connect/other": {
      "post": {
        "summary": "Start connect process for discovered other devices.",
        "operationId": "postDiscoveryConnectOther",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model174"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/discovery/connect/ubnt": {
      "post": {
        "summary": "Start connect process for discovered UBNT devices.",
        "operationId": "postDiscoveryConnectUbnt",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model175"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Discovery"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/backups/create": {
      "post": {
        "summary": "Create UISP backup.",
        "operationId": "postNmsBackupsCreate",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UispBackup"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/info/login": {
      "post": {
        "summary": "Authenticate client and return device access token",
        "operationId": "postNmsInfoLogin",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/AuthenticateDeviceByTokenSchema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model176"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "405": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Method Not Allowed"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/mailserver/test": {
      "post": {
        "summary": "Test mail server settings by sending email.",
        "operationId": "postNmsMailserverTest",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model177"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/setup/finish": {
      "post": {
        "summary": "Set UISP setup finished.",
        "operationId": "postNmsSetupFinish",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model178"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/setup/start": {
      "post": {
        "summary": "Set UISP setup started.",
        "operationId": "postNmsSetupStart",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model179"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/setup/survey": {
      "post": {
        "summary": "Submit setup survey.",
        "operationId": "postNmsSetupSurvey",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model180"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/bulkupdate/notifications": {
      "post": {
        "summary": "Update sites notifications.",
        "operationId": "postSitesBulkupdateNotifications",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SiteNotificationsUpdate"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/ucrm/bindings": {
      "post": {
        "summary": "Import UISP sites to UCRM services relations description.",
        "operationId": "postSitesUcrmBindings",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ListOfSiteBindings"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/unsuspend": {
      "post": {
        "summary": "Unsuspend client.",
        "operationId": "postSitesSiteidUnsuspend",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "description": "Result of unsuspend, updated site",
            "schema": {
              "$ref": "#/definitions/Site1"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{subscriberId}/preregister": {
      "post": {
        "summary": "Set subscriber to MAC/IP address pairing for auto-authorize functionality.",
        "operationId": "postSitesSubscriberidPreregister",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "subscriberId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Preregister%20Subscriber%20schema"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/suspend": {
      "post": {
        "summary": "Suspend client.",
        "operationId": "postSitesSiteidSuspend",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "description": "Result of suspend, updated site",
            "schema": {
              "$ref": "#/definitions/Site2"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/cancel-for-device/{deviceId}": {
      "post": {
        "summary": "Cancel a task for device.",
        "operationId": "postTasksCancelfordeviceDeviceid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/tasks/{batchId}/cancel": {
      "post": {
        "summary": "Cancel a task.",
        "operationId": "postTasksBatchidCancel",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "batchId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Tasks"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/token/ubiquiti/exchange": {
      "post": {
        "summary": "Exchange of SSO token to x-auth-token.",
        "operationId": "postTokenUbiquitiExchange",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model183"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "description": "Information about token.",
            "schema": {
              "$ref": "#/definitions/TokenSchema"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login/totpauth": {
      "post": {
        "summary": "Two Factor Authentication login step 2.",
        "operationId": "postUserLoginTotpauth",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Two%20Factor%20Login"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserLogin",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/UserLogin"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserLogin"
                }
              ]
            },
            "headers": {
              "x-auth-token": {
                "type": "string",
                "description": "User authorization token"
              }
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login/ubiquiti": {
      "post": {
        "summary": "Login using Ubiquiti SSO.",
        "operationId": "postUserLoginUbiquiti",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SsoRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserLogin",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/UserLogin"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserLogin"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error1"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/offline-passwords/confirm": {
      "post": {
        "summary": "Confirms request to generate random offline passwords for authenticated user.",
        "operationId": "postUserOfflinepasswordsConfirm",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/password/requestreset": {
      "post": {
        "summary": "Request password reset.",
        "operationId": "postUserPasswordRequestreset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PasswordResetRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/password/reset": {
      "post": {
        "summary": "Reset user password.",
        "operationId": "postUserPasswordReset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PasswordResetAction"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/password/strength": {
      "post": {
        "summary": "Check password strength.",
        "operationId": "postUserPasswordStrength",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PasswordStrength"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/PasswordStrengthMetadata"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/sso/verify": {
      "post": {
        "summary": "Verify SSO login result.",
        "operationId": "postUserSsoVerify",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SsoRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SsoUserSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}/reinvite": {
      "post": {
        "summary": "Reinvites user by email.",
        "operationId": "postUsersIdReinvite",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InviteUserResponse"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/credentials/regenerate": {
      "post": {
        "summary": "Generate new password for vault. Returns status.",
        "operationId": "postVaultCredentialsRegenerate",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model186"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vault"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "412": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Precondition Failed"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/credentials/unlock": {
      "post": {
        "summary": "Unlock private or cloud pgp key.",
        "operationId": "postVaultCredentialsUnlock",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VaultCredentialsUnlock"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vault"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/update": {
      "post": {
        "summary": "Set update of ONU to realtime detail.",
        "operationId": "postDevicesOnusIdUpdate",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model187"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/system/unms/hostname": {
      "post": {
        "summary": "Update devices UISP Key hostname and port.",
        "operationId": "postDevicesSystemUnmsHostname",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PayloadSystemUnmsKeyHostnamePort"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/system/unms/key": {
      "post": {
        "summary": "Update devices UISP Key.",
        "operationId": "postDevicesSystemUnmsKey",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PayloadSystemUnmsKey"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "string"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/speed-tests/start": {
      "post": {
        "summary": "Execute speed test on device [device to internet, device to device].",
        "operationId": "postDevicesDeviceidSpeedtestsStart",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model189"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Speed Test",
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model190"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/pppoe": {
      "post": {
        "summary": "Create new PPPoE interface.",
        "operationId": "postDevicesDeviceidInterfacesPppoe",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model191"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/bridge": {
      "post": {
        "summary": "Create new Bridge interface.",
        "operationId": "postDevicesDeviceidInterfacesBridge",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model194"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/reset-total-power": {
      "post": {
        "summary": "Reset total power consumption.",
        "operationId": "postDevicesIdSystemResettotalpower",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Common%20success"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/power-cycle": {
      "post": {
        "summary": "Turns off selected output for a short time.",
        "operationId": "postDevicesIdSystemPowercycle",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SystemPowerCycle"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Common%20success"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/disablelag": {
      "post": {
        "summary": "Disable link aggregation.",
        "operationId": "postDevicesDeviceidInterfacesDisablelag",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Implemented"
          }
        }
      }
    },
    "/devices/{id}/locate/stop": {
      "post": {
        "summary": "Stop locating indication on device.",
        "operationId": "postDevicesIdLocateStop",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/iplink/redirect": {
      "post": {
        "summary": "Perform device authorization before opening a devices UI.",
        "operationId": "postDevicesIdIplinkRedirect",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IpLinkRedirect"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/locate/start": {
      "post": {
        "summary": "Start locating indication on device.",
        "operationId": "postDevicesIdLocateStart",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/enablelag": {
      "post": {
        "summary": "Enable link aggregation.",
        "operationId": "postDevicesDeviceidInterfacesEnablelag",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "501": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Implemented"
          }
        }
      }
    },
    "/devices/{id}/system/reset-battery-status": {
      "post": {
        "summary": "Reset battery status.",
        "operationId": "postDevicesIdSystemResetbatterystatus",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model195"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Common%20success"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/delete-with-ip-transfer": {
      "post": {
        "summary": "Delete interface and transfer its IP configuration to another interface.",
        "operationId": "postDevicesDeviceidInterfacesDeletewithiptransfer",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model196"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/vlan": {
      "post": {
        "summary": "Create new VLAN interface.",
        "operationId": "postDevicesDeviceidInterfacesVlan",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model198"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/lag": {
      "post": {
        "summary": "Create new Lag interface.",
        "operationId": "postDevicesDeviceidInterfacesLag",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model199"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/backups/{backupId}/restore": {
      "post": {
        "summary": "Restore UISP backup.",
        "operationId": "postNmsBackupsBackupidRestore",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/questionnaires/{id}/touch": {
      "post": {
        "summary": "Mark the questionnaire as visited. It will pop up later if it is not submitted.",
        "operationId": "postNmsQuestionnairesIdTouch",
        "parameters": [
          {
            "type": "string",
            "enum": [
              "Q1"
            ],
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/questionnaires/{id}/submit": {
      "post": {
        "summary": "Submit answers to questionnaire.",
        "operationId": "postNmsQuestionnairesIdSubmit",
        "parameters": [
          {
            "type": "string",
            "enum": [
              "Q1"
            ],
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "string",
            "in": "body"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/speed/report/bulkdelete": {
      "post": {
        "summary": "Bulk delete speed reports.",
        "operationId": "postNmsSpeedReportBulkdelete",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model200"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BulkReportDeleteSchema"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/subscriber/device/{deviceId}": {
      "post": {
        "summary": "Set device information possessed by subscriber",
        "operationId": "postNmsSubscriberDeviceDeviceid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model201"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/subscriber/station/{mac}": {
      "post": {
        "summary": "Set station information possessed by subscriber",
        "operationId": "postNmsSubscriberStationMac",
        "parameters": [
          {
            "type": "string",
            "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$",
            "name": "mac",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model201"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/ucrm/unbind": {
      "post": {
        "summary": "Unbind UCRM services and UISP site.",
        "operationId": "postSitesSiteidUcrmUnbind",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/ucrm/bind": {
      "post": {
        "summary": "Bind UCRM services and UISP site.",
        "operationId": "postSitesSiteidUcrmBind",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SiteBinding"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login/invite/local": {
      "post": {
        "summary": "Finish user invitation using local password.",
        "operationId": "postUserLoginInviteLocal",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/LocalInvitationRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserLogin",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/UserLogin"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserLogin"
                }
              ]
            },
            "headers": {
              "x-auth-token": {
                "type": "string",
                "description": "User authorization token"
              }
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/login/invite/ubiquiti": {
      "post": {
        "summary": "Finish user invitation using Ubiquiti SSO.",
        "operationId": "postUserLoginInviteUbiquiti",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/SsoInvitationRequest"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "security": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UserLogin",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/UserLogin"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserLogin"
                }
              ]
            },
            "headers": {
              "x-auth-token": {
                "type": "string",
                "description": "User authorization token"
              }
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}/reinvite/link": {
      "post": {
        "summary": "Generates new invitation link.",
        "operationId": "postUsersIdReinviteLink",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InviteUserResponse"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/{deviceId}/credentials/regenerate": {
      "post": {
        "summary": "Generate and return new password for device.",
        "operationId": "postVaultDeviceidCredentialsRegenerate",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vault"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Device's credentials"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "412": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Precondition Failed"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/vault/{deviceId}/credentials/change": {
      "post": {
        "summary": "Changing vault device password for mobile app.",
        "operationId": "postVaultDeviceidCredentialsChange",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model202"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Vault"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "412": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Precondition Failed"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/cable-test": {
      "post": {
        "summary": "Cable test port.",
        "operationId": "postDevicesDeviceidInterfacesInterfacenameCabletest",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Data%20coming%20from%20cable%20test%20on%20ES%20devices"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/block": {
      "post": {
        "summary": "Block interface.",
        "operationId": "postDevicesDeviceidInterfacesInterfacenameBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/backups/{backupId}/apply": {
      "post": {
        "summary": "Restore the device configuration from a backup file (followed by a device restart if necessary).",
        "operationId": "postDevicesDeviceidBackupsBackupidApply",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "backupId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/router/routes/unblock": {
      "post": {
        "summary": "Unblock static route.",
        "operationId": "postDevicesIdRouterRoutesUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "x-alternatives": [
              {
                "$ref": "#/x-alt-definitions/Model29"
              },
              {
                "$ref": "#/x-alt-definitions/UispRRoute"
              }
            ],
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model203"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/router/routes/delete": {
      "post": {
        "summary": "Delete route.",
        "operationId": "postDevicesIdRouterRoutesDelete",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "x-alternatives": [
              {
                "$ref": "#/x-alt-definitions/Model29"
              },
              {
                "$ref": "#/x-alt-definitions/UispRRoute"
              }
            ],
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model203"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceId}/resetstats": {
      "post": {
        "summary": "Reset interface statistics.",
        "operationId": "postDevicesDeviceidInterfacesInterfaceidResetstats",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/router/routes/block": {
      "post": {
        "summary": "Block static route.",
        "operationId": "postDevicesIdRouterRoutesBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "x-alternatives": [
              {
                "$ref": "#/x-alt-definitions/Model29"
              },
              {
                "$ref": "#/x-alt-definitions/UispRRoute"
              }
            ],
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model203"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/tools/sms/send": {
      "post": {
        "summary": "Sends SMS.",
        "operationId": "postDevicesIdToolsSmsSend",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model205"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/unblock": {
      "post": {
        "summary": "Unblock interface.",
        "operationId": "postDevicesDeviceidInterfacesInterfacenameUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/reset": {
      "post": {
        "summary": "Reset port.",
        "operationId": "postDevicesDeviceidInterfacesInterfacenameReset",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Common%20success"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/images/{imageId}/reorder": {
      "post": {
        "summary": "Change image order.",
        "operationId": "postSitesSiteidImagesImageidReorder",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "imageId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/ImageOrder"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/images/{imageId}/rotateleft": {
      "post": {
        "summary": "Rotate the image 90 degrees to left.",
        "operationId": "postSitesSiteidImagesImageidRotateleft",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/sites/{siteId}/images/{imageId}/rotateright": {
      "post": {
        "summary": "Rotate the image 90 degrees to right.",
        "operationId": "postSitesSiteidImagesImageidRotateright",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "imageId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Sites"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/routes/unblock": {
      "post": {
        "summary": "Unblock static route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes/unblock]",
        "operationId": "postDevicesEroutersIdRouterRoutesUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRoute1"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/erouters/{id}/router/routes/delete": {
      "post": {
        "summary": "Delete route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes/delete]",
        "operationId": "postDevicesEroutersIdRouterRoutesDelete",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRoute1"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EdgeRouterRoute"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/erouters/{id}/router/routes/block": {
      "post": {
        "summary": "Block static route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes/block]",
        "operationId": "postDevicesEroutersIdRouterRoutesBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRoute1"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/firewall/nats/rule": {
      "post": {
        "summary": "Create firewall NAT rule.",
        "operationId": "postDevicesUisprlxcsIdFirewallNatsRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model207"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model207"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates firewall NAT rule.",
        "operationId": "putDevicesUisprlxcsIdFirewallNatsRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model207"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/router/ospf/interface": {
      "post": {
        "summary": "Create new OSPF Interface. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{deviceId}/interfaces/{interfaceName}/ospf]",
        "operationId": "postDevicesUisprlxcsIdRouterOspfInterface",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model209"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "put": {
        "summary": "Update OSPF Interface. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{deviceId}/interfaces/{interfaceName}/ospf]",
        "operationId": "putDevicesUisprlxcsIdRouterOspfInterface",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model246"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/router/routes/block": {
      "post": {
        "summary": "Block static route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes/block]",
        "operationId": "postDevicesUisprlxcsIdRouterRoutesBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRoute2"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/router/routes/delete": {
      "post": {
        "summary": "Delete route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes/delete]",
        "operationId": "postDevicesUisprlxcsIdRouterRoutesDelete",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRoute2"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/router/routes/unblock": {
      "post": {
        "summary": "Unblock static route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes/unblock]",
        "operationId": "postDevicesUisprlxcsIdRouterRoutesUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRoute2"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/firewall/sets/set": {
      "post": {
        "summary": "Create firewall set.",
        "operationId": "postDevicesUisprlxcsIdFirewallSetsSet",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model211"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates firewall set.",
        "operationId": "putDevicesUisprlxcsIdFirewallSetsSet",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model211"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Deletes firewall set.",
        "operationId": "deleteDevicesUisprlxcsIdFirewallSetsSet",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/nats/rule": {
      "post": {
        "summary": "Create firewall NAT rule.",
        "operationId": "postDevicesUisprsIdFirewallNatsRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model212"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model213"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates firewall NAT rule.",
        "operationId": "putDevicesUisprsIdFirewallNatsRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model212"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model218"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/router/ospf/interface": {
      "post": {
        "summary": "Create new OSPF Interface. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{deviceId}/interfaces/{interfaceName}/ospf]",
        "operationId": "postDevicesUisprsIdRouterOspfInterface",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model215"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "put": {
        "summary": "Update OSPF Interface. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{deviceId}/interfaces/{interfaceName}/ospf]",
        "operationId": "putDevicesUisprsIdRouterOspfInterface",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model249"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/router/routes/block": {
      "post": {
        "summary": "Block static route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes/block]",
        "operationId": "postDevicesUisprsIdRouterRoutesBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRoute3"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/router/routes/delete": {
      "post": {
        "summary": "Delete route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes/delete]",
        "operationId": "postDevicesUisprsIdRouterRoutesDelete",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRoute3"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/router/routes/unblock": {
      "post": {
        "summary": "Unblock static route. [Deprecated in favor of route POST /nms/api/v2.1/devices/{id}/router/routes/unblock]",
        "operationId": "postDevicesUisprsIdRouterRoutesUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RouterRoute3"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/firewall/sets/set": {
      "post": {
        "summary": "Create firewall set.",
        "operationId": "postDevicesUisprsIdFirewallSetsSet",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model217"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model218"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates firewall set.",
        "operationId": "putDevicesUisprsIdFirewallSetsSet",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model217"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model218"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Deletes firewall set.",
        "operationId": "deleteDevicesUisprsIdFirewallSetsSet",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "name",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "type",
            "in": "query",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model218"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/unms/key/reachable": {
      "post": {
        "summary": "Checks if the UISP Key is reachable from the device.",
        "operationId": "postDevicesIdSystemUnmsKeyReachable",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model219"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/unms/hostname/reachable": {
      "post": {
        "summary": "Checks if the hostname and port is reachable from the device.",
        "operationId": "postDevicesIdSystemUnmsHostnameReachable",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PayloadUnmsHostnameReachable"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "type": "boolean"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/servers/{serverName}/unblock": {
      "post": {
        "summary": "Unblock DHCP server.",
        "operationId": "postDevicesEroutersIdDhcpServersServernameUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/dhcp/servers/{serverName}/block": {
      "post": {
        "summary": "Block DHCP server.",
        "operationId": "postDevicesEroutersIdDhcpServersServernameBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/filters/{filterName}/rule": {
      "post": {
        "summary": "Create firewall filter rule.",
        "operationId": "postDevicesUisprlxcsIdFirewallFiltersFilternameRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "filterName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model220"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model222"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates firewall filter rule.",
        "operationId": "putDevicesUisprlxcsIdFirewallFiltersFilternameRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "filterName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model220"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/dhcp/servers/{serverName}/unblock": {
      "post": {
        "summary": "Unblock DHCP server.",
        "operationId": "postDevicesUisprlxcsIdDhcpServersServernameUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/dhcp/servers/{serverName}/block": {
      "post": {
        "summary": "Block DHCP server.",
        "operationId": "postDevicesUisprlxcsIdDhcpServersServernameBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/mangles/{mangleName}/rule": {
      "post": {
        "summary": "Create firewall mangles rule.",
        "operationId": "postDevicesUisprlxcsIdFirewallManglesManglenameRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "mangleName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model223"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model224"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates firewall mangle rule.",
        "operationId": "putDevicesUisprlxcsIdFirewallManglesManglenameRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "mangleName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model223"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/tools/unms-controller/backup-storage/detach": {
      "post": {
        "summary": "Unmount the microSD card.",
        "operationId": "postDevicesUisprsIdToolsUnmscontrollerBackupstorageDetach",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Backups"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/filters/{filterName}/rule": {
      "post": {
        "summary": "Create firewall filter rule.",
        "operationId": "postDevicesUisprsIdFirewallFiltersFilternameRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "filterName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model225"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model227"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates firewall filter rule.",
        "operationId": "putDevicesUisprsIdFirewallFiltersFilternameRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "filterName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model225"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model218"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/dhcp/servers/{serverName}/unblock": {
      "post": {
        "summary": "Unblock DHCP server. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "postDevicesUisprsIdDhcpServersServernameUnblock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/dhcp/servers/{serverName}/block": {
      "post": {
        "summary": "Block DHCP server. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "postDevicesUisprsIdDhcpServersServernameBlock",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/firewall/mangles/{mangleName}/rule": {
      "post": {
        "summary": "Create firewall mangles rule.",
        "operationId": "postDevicesUisprsIdFirewallManglesManglenameRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "mangleName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model228"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model229"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "summary": "Updates firewall mangle rule.",
        "operationId": "putDevicesUisprsIdFirewallManglesManglenameRule",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "mangleName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model228"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/refresh-certificate": {
      "put": {
        "summary": "Refresh UISP certificate.",
        "operationId": "putNmsRefreshcertificate",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/disabledtotpauth": {
      "put": {
        "summary": "Disable two factor authorization for user.",
        "operationId": "putUserDisabledtotpauth",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/VerifyPasswordAction"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/User"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserSchema"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/preferences": {
      "put": {
        "summary": "Updates authenticated user's preferences.",
        "operationId": "putUserPreferences",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EditUserPreferences"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization",
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/User"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserSchema"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "put": {
        "summary": "Update user.",
        "operationId": "putUsersId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/User"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserSchema"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete user.",
        "operationId": "deleteUsersId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "boolean",
            "name": "notifyUser",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Users"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/settings/allow-unms-beta": {
      "put": {
        "summary": "Update UISP allowUnmsBetaVersion settings.",
        "operationId": "putNmsSettingsAllowunmsbeta",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model232"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/NmsSettings1"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "412": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Precondition Failed"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/user/sso/enable": {
      "put": {
        "summary": "Enable Ubiquiti SSO for current user.",
        "operationId": "putUserSsoEnable",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/EnableSso"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/User",
              "x-alternatives": [
                {
                  "$ref": "#/x-alt-definitions/User"
                },
                {
                  "$ref": "#/x-alt-definitions/SsoUserSchema"
                }
              ]
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/access-groups/sites/{groupId}/{siteId}": {
      "put": {
        "summary": "Add or change access to single site.",
        "operationId": "putAccessgroupsSitesGroupidSiteid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/RequestSiteAccessGroupSingleSite"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Remove access to single site.",
        "operationId": "deleteAccessgroupsSitesGroupidSiteid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "groupId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "siteId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Authorization"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/onus/{id}/system": {
      "put": {
        "summary": "Update an Onu's system settings.",
        "operationId": "putDevicesOnusIdSystem",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model233"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model233"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/compose/confirm": {
      "put": {
        "summary": "Confirm compose request",
        "operationId": "putDevicesIdComposeConfirm",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "composeId",
            "in": "query",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/system/users": {
      "put": {
        "summary": "Update device system users.",
        "operationId": "putDevicesIdSystemUsers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model234"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeviceSystem"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/airmaxes/{id}/system/users": {
      "put": {
        "summary": "Update AirMax system users. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/system]",
        "operationId": "putDevicesAirmaxesIdSystemUsers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model235"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model88"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/eswitches/{id}/system/users": {
      "put": {
        "summary": "Update EdgeSwitch system users. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/system]",
        "operationId": "putDevicesEswitchesIdSystemUsers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model237"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model88"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/toughswitches/{id}/system/users": {
      "put": {
        "summary": "Update ToughSwitch system users. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/system]",
        "operationId": "putDevicesToughswitchesIdSystemUsers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model238"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model88"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uispss/{id}/system/users": {
      "put": {
        "summary": "Update UISP Switch system users. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/system]",
        "operationId": "putDevicesUispssIdSystemUsers",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model241"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model88"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/{deviceId}/interfaces/{interfaceName}/ospf": {
      "put": {
        "summary": "Set interface OSPF config.",
        "operationId": "putDevicesDeviceidInterfacesInterfacenameOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model243"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Unset interface OSPF config.",
        "operationId": "deleteDevicesDeviceidInterfacesInterfacenameOspf",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "deviceId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/nats/rules": {
      "put": {
        "summary": "Updates firewall NAT rules. Useful for changing rules order.",
        "operationId": "putDevicesUisprlxcsIdFirewallNatsRules",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model244"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/filter/chain": {
      "put": {
        "summary": "Update firewall filter chain. Useful for changing rules order.",
        "operationId": "putDevicesUisprlxcsIdFirewallFilterChain",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model131"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model131"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/filter/chain": {
      "put": {
        "summary": "Update firewall filter chain. Useful for changing rules order.",
        "operationId": "putDevicesUisprsIdFirewallFilterChain",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model144"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model247"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/nats/rules": {
      "put": {
        "summary": "Updates firewall NAT rules. Useful for changing rules order.",
        "operationId": "putDevicesUisprsIdFirewallNatsRules",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/Model250"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model251"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/router/ospf/areas/{areaId}": {
      "put": {
        "summary": "Update OSPF area.",
        "operationId": "putDevicesIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "areaId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OspfArea"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model204"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete OSPF area.",
        "operationId": "deleteDevicesIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "areaId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/erouters/{id}/router/ospf/areas/{areaId}": {
      "put": {
        "summary": "Update OSPF area. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/router/ospf/areas/{areaId}]",
        "operationId": "putDevicesEroutersIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "areaId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OspfArea"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model206"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "delete": {
        "summary": "Delete OSPF area. [Deprecated in favor of route DELETE /nms/api/v2.1/devices/{id}/router/ospf/areas/{areaId}]",
        "operationId": "deleteDevicesEroutersIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "areaId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/erouters/{id}/dhcp/leases/{serverName}/{leaseId}": {
      "put": {
        "summary": "Update DHCP IP lease.",
        "operationId": "putDevicesEroutersIdDhcpLeasesServernameLeaseid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DHCPLease3"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPLease"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Update DHCP IP lease.",
        "operationId": "deleteDevicesEroutersIdDhcpLeasesServernameLeaseid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/dhcp/leases/{serverName}/{leaseId}": {
      "put": {
        "summary": "Update DHCP IP lease.",
        "operationId": "putDevicesUisprlxcsIdDhcpLeasesServernameLeaseid",
        "description": "\n        Request does accept payload with \"leaseId\" property, to match api,\n        but the id is ignored and it will be changed when mac or ip is updated.\n      ",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DHCPLease4"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPLease1"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "summary": "Delete DHCP IP lease.",
        "operationId": "deleteDevicesUisprlxcsIdDhcpLeasesServernameLeaseid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/router/ospf/areas/{areaId}": {
      "put": {
        "summary": "Update OSPF area. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/router/ospf/areas/{areaId}]",
        "operationId": "putDevicesUisprlxcsIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "areaId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OspfArea"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model210"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "delete": {
        "summary": "Delete OSPF area. [Deprecated in favor of route DELETE /nms/api/v2.1/devices/{id}/router/ospf/areas/{areaId}]",
        "operationId": "deleteDevicesUisprlxcsIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "areaId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/router/ospf/areas/{areaId}": {
      "put": {
        "summary": "Update OSPF area. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/router/ospf/areas/{areaId}]",
        "operationId": "putDevicesUisprsIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "areaId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/OspfArea"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model216"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "delete": {
        "summary": "Delete OSPF area. [Deprecated in favor of route DELETE /nms/api/v2.1/devices/{id}/router/ospf/areas/{areaId}]",
        "operationId": "deleteDevicesUisprsIdRouterOspfAreasAreaid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "areaId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/dhcp/leases/{serverName}/{leaseId}": {
      "put": {
        "summary": "Update DHCP IP lease. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "putDevicesUisprsIdDhcpLeasesServernameLeaseid",
        "description": "\n        Request does accept payload with \"leaseId\" property, to match api,\n        but the id is ignored and it will be changed when mac or ip is updated.\n      ",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/DHCPLease5"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DHCPLease2"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      },
      "delete": {
        "summary": "Delete DHCP IP lease. [Deprecated in favor of route PUT /nms/api/v2.1/devices/{id}/configuration]",
        "operationId": "deleteDevicesUisprsIdDhcpLeasesServernameLeaseid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "serverName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "leaseId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/speed-tests/{id}": {
      "delete": {
        "summary": "Stop speed test between two devices.",
        "operationId": "deleteSpeedtestsId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Speed Test"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/unknown/{ipAddress}": {
      "delete": {
        "summary": "Delete unknown client devices (based on detected network traffic).",
        "operationId": "deleteDevicesUnknownIpaddress",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional"
              }
            },
            "name": "ipAddress",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices",
          "Traffic"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/stations": {
      "delete": {
        "summary": "Delete station from this device.",
        "operationId": "deleteDevicesIdStations",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/PayloadDeviceStation"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model252"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/{id}/vlans/{vlanId}": {
      "delete": {
        "summary": "Delete a device's VLAN.",
        "operationId": "deleteDevicesIdVlansVlanid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "integer",
            "minimum": 0,
            "maximum": 4063,
            "required": true,
            "x-alternatives": [
              {
                "type": "integer",
                "minimum": 0,
                "maximum": 4063
              },
              {
                "type": "string"
              }
            ],
            "name": "vlanId",
            "in": "path"
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/nms/speed/report/{id}": {
      "delete": {
        "summary": "Delete speed report.",
        "operationId": "deleteNmsSpeedReportId",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Server"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/nats/rule/{ruleId}": {
      "delete": {
        "summary": "Deletes firewall NAT rule.",
        "operationId": "deleteDevicesUisprlxcsIdFirewallNatsRuleRuleid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "ruleId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/router/ospf/interfaces/{interfaceName}": {
      "delete": {
        "summary": "Delete OSPF Interface. [Deprecated in favor of route DELETE /nms/api/v2.1/devices/{deviceId}/interfaces/{interfaceName}/ospf]",
        "operationId": "deleteDevicesUisprlxcsIdRouterOspfInterfacesInterfacename",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprs/{id}/firewall/nats/rule/{ruleId}": {
      "delete": {
        "summary": "Deletes firewall NAT rule.",
        "operationId": "deleteDevicesUisprsIdFirewallNatsRuleRuleid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "ruleId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model218"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/router/ospf/interfaces/{interfaceName}": {
      "delete": {
        "summary": "Delete OSPF Interface. [Deprecated in favor of route DELETE /nms/api/v2.1/devices/{deviceId}/interfaces/{interfaceName}/ospf]",
        "operationId": "deleteDevicesUisprsIdRouterOspfInterfacesInterfacename",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "interfaceName",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        },
        "deprecated": true
      }
    },
    "/devices/uisprlxcs/{id}/firewall/filters/{filterName}/rule/{ruleId}": {
      "delete": {
        "summary": "Deletes firewall filter rule.",
        "operationId": "deleteDevicesUisprlxcsIdFirewallFiltersFilternameRuleRuleid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "filterName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "ruleId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprlxcs/{id}/firewall/mangles/{mangleName}/rule/{ruleId}": {
      "delete": {
        "summary": "Deletes firewall mangle rule.",
        "operationId": "deleteDevicesUisprlxcsIdFirewallManglesManglenameRuleRuleid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "mangleName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "ruleId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/filters/{filterName}/rule/{ruleId}": {
      "delete": {
        "summary": "Deletes firewall filter rule.",
        "operationId": "deleteDevicesUisprsIdFirewallFiltersFilternameRuleRuleid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "filterName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "ruleId",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "isComposeRequest",
            "in": "query"
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Model218"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/devices/uisprs/{id}/firewall/mangles/{mangleName}/rule/{ruleId}": {
      "delete": {
        "summary": "Deletes firewall mangle rule.",
        "operationId": "deleteDevicesUisprsIdFirewallManglesManglenameRuleRuleid",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "id",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "mangleName",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "name": "ruleId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "Devices"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Bad Request"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Not Found"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/crm/service-change-requests/{requestId}/accept": {
      "patch": {
        "summary": "Accept service change request in CRM.",
        "operationId": "patchCrmServicechangerequestsRequestidAccept",
        "parameters": [
          {
            "type": "string",
            "x-format": {
              "guid": true
            },
            "name": "requestId",
            "in": "path",
            "required": true
          }
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "CRM"
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/Status"
            },
            "description": "Successful"
          },
          "401": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Unauthorized"
          },
          "403": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Forbidden"
          },
          "409": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Conflict"
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Internal Server Error"
          },
          "503": {
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "description": "Service Unavailable"
          }
        }
      }
    }
  },
  "definitions": {
    "Model1": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "required": [
        "token"
      ]
    },
    "validation": {
      "type": "object"
    },
    "Error": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number",
          "minimum": 400,
          "maximum": 599
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "validation": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        }
      },
      "required": [
        "statusCode",
        "error"
      ]
    },
    "parent": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "parent": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        }
      }
    },
    "identification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "parent": {
          "$ref": "#/definitions/parent"
        }
      }
    },
    "DataLinkSite": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification"
        }
      },
      "required": [
        "identification"
      ]
    },
    "identification1": {
      "type": "object",
      "properties": {
        "authorized": {
          "type": "boolean"
        },
        "category": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "firmwareVersion": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "ipAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "mac": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "platformId": {
          "type": "string"
        },
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "serialNumber": {
          "type": "string"
        },
        "siteId": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string"
        },
        "updated": {
          "type": "number"
        }
      },
      "required": [
        "authorized",
        "category",
        "displayName",
        "id",
        "model",
        "name",
        "role",
        "type"
      ]
    },
    "antenna": {
      "type": "object",
      "properties": {
        "gain": {
          "type": "number"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "linkScore": {
      "type": "object",
      "properties": {
        "linkScore": {
          "type": "number"
        }
      }
    },
    "overview": {
      "type": "object",
      "properties": {
        "antenna": {
          "$ref": "#/definitions/antenna"
        },
        "channelWidth": {
          "type": "number"
        },
        "stationsCount": {
          "type": "number"
        },
        "downlinkUtilization": {
          "type": "number"
        },
        "uplinkUtilization": {
          "type": "number"
        },
        "linkScore": {
          "$ref": "#/definitions/linkScore"
        },
        "downlinkCapacity": {
          "type": "number"
        },
        "uplinkCapacity": {
          "type": "number"
        },
        "signal": {
          "type": "number"
        },
        "modulation": {
          "type": "string"
        },
        "mcsIndex": {
          "type": "number"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        }
      }
    },
    "meta": {
      "type": "object"
    },
    "attributes": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string"
        }
      }
    },
    "DataLinkDevice": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "number"
        },
        "identification": {
          "$ref": "#/definitions/identification1"
        },
        "overview": {
          "$ref": "#/definitions/overview"
        },
        "meta": {
          "$ref": "#/definitions/meta"
        },
        "signal": {
          "type": "number"
        },
        "ssid": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "attributes": {
          "$ref": "#/definitions/attributes"
        }
      },
      "required": [
        "status",
        "attributes"
      ]
    },
    "interface": {
      "type": "object"
    },
    "from": {
      "type": "object",
      "properties": {
        "site": {
          "$ref": "#/definitions/DataLinkSite"
        },
        "device": {
          "$ref": "#/definitions/DataLinkDevice"
        },
        "interface": {
          "$ref": "#/definitions/interface"
        }
      }
    },
    "DataLinkSite1": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification"
        }
      }
    },
    "DataLinkDevice1": {
      "type": "object",
      "properties": {
        "frequency": {
          "type": "number"
        },
        "identification": {
          "$ref": "#/definitions/identification1"
        },
        "overview": {
          "$ref": "#/definitions/overview"
        },
        "meta": {
          "$ref": "#/definitions/meta"
        },
        "signal": {
          "type": "number"
        },
        "ssid": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "attributes": {
          "$ref": "#/definitions/attributes"
        }
      },
      "required": [
        "status"
      ]
    },
    "to": {
      "type": "object",
      "properties": {
        "site": {
          "$ref": "#/definitions/DataLinkSite1"
        },
        "device": {
          "$ref": "#/definitions/DataLinkDevice1"
        },
        "interface": {
          "$ref": "#/definitions/interface"
        }
      }
    },
    "DataLink": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "from": {
          "$ref": "#/definitions/from"
        },
        "to": {
          "$ref": "#/definitions/to"
        },
        "ssid": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ethernet",
            "pon",
            "wireless"
          ]
        },
        "state": {
          "type": "string",
          "enum": [
            "active",
            "disabled",
            "disconnected",
            "proposed"
          ]
        },
        "canDelete": {
          "type": "boolean"
        },
        "frequency": {
          "type": "number"
        },
        "signal": {
          "type": "number"
        },
        "sitesDistance": {
          "type": "number",
          "description": "Nullable property in meters."
        },
        "devicesDistance": {
          "type": "number",
          "description": "Nullable property in meters."
        },
        "origin": {
          "type": "string",
          "description": "Generated by UISP or manually added",
          "enum": [
            "unms",
            "manual"
          ]
        }
      },
      "required": [
        "id",
        "ssid",
        "canDelete",
        "frequency",
        "signal",
        "origin"
      ]
    },
    "ListOfDataLinks": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DataLink"
      }
    },
    "Model2": {
      "type": "object",
      "properties": {
        "clients": {
          "type": "number",
          "description": "Number of clients of a device",
          "example": 1,
          "minimum": 0
        },
        "model": {
          "type": "string",
          "description": "Device model",
          "example": "UX",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "name": {
          "type": "string",
          "description": "Device name",
          "example": "Garden router"
        },
        "version": {
          "type": "string",
          "description": "Firmware version of the device",
          "example": "UX1.2.3"
        },
        "wiFiExperience": {
          "type": "number",
          "description": "WiFI speed",
          "example": 1000
        }
      }
    },
    "meshing": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model2"
      }
    },
    "uplink": {
      "type": "object",
      "properties": {
        "rxBytes": {
          "type": "integer",
          "description": "Received bytes.",
          "example": 926000
        },
        "rxRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 456
        },
        "txBytes": {
          "type": "integer",
          "description": "Sent bytes.",
          "example": 926000
        },
        "txRate": {
          "type": "integer",
          "description": "Current upload speed in bps.",
          "example": 456
        }
      }
    },
    "ux": {
      "type": "object",
      "properties": {
        "meshing": {
          "$ref": "#/definitions/meshing"
        },
        "uplink": {
          "$ref": "#/definitions/uplink"
        },
        "cloudDeviceToken": {
          "type": "string",
          "description": "Device token is a string uniquely identifying a device",
          "example": "987asdfPOSD9dPXY58hxohex9Q0842sUEZgURMNZvaBCZCQROzgxjbIhJWi7fta8se"
        }
      },
      "required": [
        "cloudDeviceToken"
      ]
    },
    "prerelease": {
      "type": "array",
      "items": {
        "type": "string",
        "x-alternatives": [
          {
            "type": "string"
          },
          {
            "type": "number"
          }
        ]
      }
    },
    "current": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number"
        },
        "minor": {
          "type": "number"
        },
        "order": {
          "type": "string"
        },
        "patch": {
          "type": "number"
        },
        "prerelease": {
          "$ref": "#/definitions/prerelease"
        }
      },
      "required": [
        "major",
        "minor",
        "order",
        "patch"
      ]
    },
    "latest": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number"
        },
        "minor": {
          "type": "number"
        },
        "order": {
          "type": "string"
        },
        "patch": {
          "type": "number"
        },
        "prerelease": {
          "$ref": "#/definitions/prerelease"
        }
      },
      "required": [
        "major",
        "minor",
        "order",
        "patch"
      ]
    },
    "latestOnCurrentMajorVersion": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number"
        },
        "minor": {
          "type": "number"
        },
        "order": {
          "type": "string"
        },
        "patch": {
          "type": "number"
        },
        "prerelease": {
          "$ref": "#/definitions/prerelease"
        }
      },
      "required": [
        "major",
        "minor",
        "order",
        "patch"
      ]
    },
    "latestOver": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number"
        },
        "minor": {
          "type": "number"
        },
        "order": {
          "type": "string"
        },
        "patch": {
          "type": "number"
        },
        "prerelease": {
          "$ref": "#/definitions/prerelease"
        }
      },
      "required": [
        "major",
        "minor",
        "order",
        "patch"
      ]
    },
    "semver": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/definitions/current"
        },
        "latest": {
          "$ref": "#/definitions/latest"
        },
        "latestOnCurrentMajorVersion": {
          "$ref": "#/definitions/latestOnCurrentMajorVersion"
        },
        "latestOver": {
          "$ref": "#/definitions/latestOver"
        }
      }
    },
    "DeviceFirmware": {
      "type": "object",
      "properties": {
        "compatible": {
          "type": "boolean",
          "description": "If firmware is compatible with UISP"
        },
        "current": {
          "type": "string",
          "description": "Current firmware version"
        },
        "latest": {
          "type": "string",
          "description": "Latest known firmware version"
        },
        "latestOnCurrentMajorVersion": {
          "type": "string",
          "description": "Latest known firmware version on current major version"
        },
        "latestOver": {
          "type": "string",
          "description": "Upgrade this firmware version as first if target\n  firmware is higher than latestOver. (AirCube must be updated over 2.8.0 fw)"
        },
        "semver": {
          "$ref": "#/definitions/semver"
        },
        "upgradeRecommendedToVersion": {
          "type": "string",
          "description": "Recommended firmware version to upgrade to."
        },
        "prospective": {
          "type": "string",
          "description": "Latest firmware version, even if not supported by UISP yet"
        }
      },
      "required": [
        "current",
        "latest",
        "latestOnCurrentMajorVersion",
        "latestOver",
        "semver",
        "upgradeRecommendedToVersion",
        "prospective"
      ]
    },
    "apDevice": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string",
          "enum": [
            "AC",
            "M",
            "G60",
            "AX"
          ]
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware"
        },
        "siteId": {
          "type": "string"
        }
      },
      "required": [
        "series"
      ]
    },
    "Model3": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "frequencyBands": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/definitions/Model3"
      }
    },
    "polling": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "signalChain": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "signalRemoteChain": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "availableTxPowerRange": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "example": 0
        },
        "max": {
          "type": "integer",
          "example": 19
        }
      }
    },
    "location": {
      "type": "object",
      "description": "DeviceLocation",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.8345584421122,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.46358,
          "minimum": -180,
          "maximum": 180
        }
      }
    },
    "[DEPRECATED]DeviceAirmax - partially moved properties to interface or station.": {
      "type": "object",
      "properties": {
        "antenna": {
          "type": "string"
        },
        "apDevice": {
          "$ref": "#/definitions/apDevice"
        },
        "apMac": {
          "type": "string"
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "ccq": {
          "type": "number"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "countryCode": {
          "type": "integer",
          "minimum": 0
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "frequencyBands": {
          "$ref": "#/definitions/frequencyBands"
        },
        "frequencyCenter": {
          "type": "string"
        },
        "noiseFloor": {
          "type": "string"
        },
        "polling": {
          "$ref": "#/definitions/polling"
        },
        "receiveChains": {
          "type": "number"
        },
        "remoteSignal": {
          "type": "number"
        },
        "remoteSignal60g": {
          "type": "number"
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "series": {
          "type": "string",
          "enum": [
            "AC",
            "M",
            "G60",
            "AX"
          ]
        },
        "signalChain": {
          "$ref": "#/definitions/signalChain"
        },
        "signalRemoteChain": {
          "$ref": "#/definitions/signalRemoteChain"
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "stationName": {
          "type": "string"
        },
        "stationsCount": {
          "type": "number"
        },
        "transmitChains": {
          "type": "number"
        },
        "transmitPower": {
          "type": "number"
        },
        "wds": {
          "type": "boolean"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "tddFraming": {
          "type": "string"
        },
        "wlanRxBytes": {
          "type": "number"
        },
        "wlanTxBytes": {
          "type": "number"
        },
        "gpsSignal": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "availableTxPowerRange": {
          "$ref": "#/definitions/availableTxPowerRange"
        },
        "location": {
          "$ref": "#/definitions/location"
        },
        "cableLength": {
          "type": "number",
          "description": "Cable Length from eth0 interface in meters. When below values is null cable is long less then 20m."
        },
        "cableSnr": {
          "type": "number",
          "description": "Average signal-to-noise ratio on eth0 interface in dB"
        },
        "rxCinr": {
          "type": "number",
          "description": "Carrier to Interference-plus-Noise Ratio in dB on wireless"
        }
      },
      "required": [
        "authentication",
        "channelWidth",
        "countryCode",
        "security",
        "series"
      ]
    },
    "Model4": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "frequencyBands1": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/definitions/Model4"
      }
    },
    "apDevice1": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string",
          "enum": [
            "LTU",
            "classic",
            "G60"
          ]
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware"
        },
        "siteId": {
          "type": "string"
        }
      },
      "required": [
        "series"
      ]
    },
    "[DEPRECATED]DeviceAirFiber - partially moved properties to interface or station.": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string",
          "enum": [
            "LTU",
            "classic",
            "G60"
          ]
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "bridgeMode": {
          "type": "string",
          "enum": [
            "hw",
            "sw"
          ]
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "antenna": {
          "type": "string"
        },
        "frequencyBands": {
          "$ref": "#/definitions/frequencyBands1"
        },
        "frequencyCenter": {
          "type": "string"
        },
        "noiseFloor": {
          "type": "string"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "countryCode": {
          "type": "integer",
          "minimum": 0
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "remoteSignal": {
          "type": "string"
        },
        "transmitPower": {
          "type": "number",
          "x-alternatives": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "enum": [
                "-"
              ]
            }
          ]
        },
        "transmitEirp": {
          "type": "number"
        },
        "transmitChains": {
          "type": "number"
        },
        "receiveChains": {
          "type": "number"
        },
        "transmitDutyCycle": {
          "type": "number"
        },
        "apMac": {
          "type": "string"
        },
        "apDevice": {
          "$ref": "#/definitions/apDevice1"
        },
        "stationName": {
          "type": "string"
        },
        "signalChain": {
          "$ref": "#/definitions/signalChain"
        },
        "signalRemoteChain": {
          "$ref": "#/definitions/signalRemoteChain"
        },
        "stationsCount": {
          "type": "number"
        },
        "frameLength": {
          "type": "number"
        }
      },
      "required": [
        "ssid"
      ]
    },
    "apDevice2": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware"
        },
        "siteId": {
          "type": "string"
        }
      }
    },
    "Wifi": {
      "type": "object",
      "properties": {
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "available": {
          "type": "boolean"
        },
        "channel": {
          "type": "number"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "country": {
          "type": "string",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "enabled": {
          "type": "boolean"
        },
        "encryption": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "isChannelAuto": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "mode": {
          "type": "string",
          "enum": [
            "ap",
            "mesh"
          ]
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "stationsCount": {
          "type": "number"
        },
        "txPower": {
          "type": "number"
        }
      }
    },
    "Model5": {
      "type": "object",
      "properties": {
        "mac": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "ip": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "timeout": {
          "type": "number"
        }
      }
    },
    "dhcpLeases": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model5"
      }
    },
    "DeviceAirCube": {
      "type": "object",
      "properties": {
        "wifiMode": {
          "type": "string",
          "enum": [
            "ap",
            "mesh"
          ]
        },
        "apDevice": {
          "$ref": "#/definitions/apDevice2"
        },
        "mgmtIp": {
          "type": "string",
          "description": "Management IP address.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "wanIp": {
          "type": "string",
          "description": "WAN IP address.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "lanIp": {
          "type": "string",
          "description": "LAN IP address.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "poe": {
          "type": "boolean"
        },
        "wifi2Ghz": {
          "$ref": "#/definitions/Wifi"
        },
        "wifi5Ghz": {
          "$ref": "#/definitions/Wifi"
        },
        "dhcpLeases": {
          "$ref": "#/definitions/dhcpLeases"
        }
      }
    },
    "apDevice3": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware"
        },
        "siteId": {
          "type": "string"
        }
      }
    },
    "DeviceAttributes": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string"
        },
        "isAxCompatible": {
          "type": "boolean"
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "secondarySsid": {
          "type": "string",
          "description": "Secondary SSID"
        },
        "gatewayId": {
          "type": "string"
        },
        "hasGatewayInterfaceAvailable": {
          "type": "boolean"
        },
        "isGatewaySupported": {
          "type": "boolean",
          "example": true
        },
        "apDevice": {
          "$ref": "#/definitions/apDevice3"
        },
        "country": {
          "type": "string",
          "example": "United States",
          "enum": [
            "Unknown",
            "Licensed",
            "Licensed (5170-6200 MHz)",
            "Canada Licensed",
            "Afghanistan",
            "Åland Islands",
            "Albania",
            "Algeria",
            "American Samoa",
            "Andorra",
            "Angola",
            "Anguilla",
            "Antarctica",
            "Antigua and Barbuda",
            "Argentina",
            "Armenia",
            "Aruba",
            "Australia",
            "Austria",
            "Azerbaijan",
            "Bahamas",
            "Bahrain",
            "Bangladesh",
            "Barbados",
            "Belarus",
            "Belgium",
            "Belize",
            "Benin",
            "Bermuda",
            "Bhutan",
            "Bolivia",
            "Bonaire, Sint Eustatius and Saba",
            "Bosnia and Herzegovina",
            "Botswana",
            "Bouvet Island",
            "Brazil",
            "British Indian Ocean Territory",
            "Brunei Darussalam",
            "Bulgaria",
            "Burkina Faso",
            "Burundi",
            "Cabo Verde",
            "Cambodia",
            "Cameroon",
            "Canada",
            "Cayman Islands",
            "Central Africa Republic",
            "Chad  ",
            "Chile",
            "China",
            "Christmas Island",
            "Cocos Islands",
            "Colombia",
            "Comoros",
            "Cook Islands",
            "Costa Rica",
            "Côte d'Ivoire",
            "Croatia",
            "Curaçao",
            "Cyprus",
            "Czech Republic",
            "Democratic Republic of the Congo",
            "Denmark",
            "Djibouti",
            "Dominica",
            "Dominican Republic",
            "Ecuador",
            "Egypt",
            "El Salvador",
            "Equatorial Guinea",
            "Eritrea",
            "Estonia",
            "Eswatini",
            "Ethiopia",
            "Falkland Islands",
            "Faroe Islands",
            "Fiji",
            "Finland",
            "France",
            "French Guiana",
            "French Polynesia",
            "French Southern Territories",
            "Gabon",
            "Gambia",
            "Georgia",
            "Germany",
            "Ghana",
            "Gibraltar",
            "Greece",
            "Greenland",
            "Grenada",
            "Guadeloupe",
            "Guam",
            "Guatemala",
            "Guernsey",
            "Guinea",
            "Guinea-Bissau",
            "Guyana",
            "Haiti",
            "Heard Island and McDonald Islands",
            "Honduras",
            "Hong Kong",
            "Hungary",
            "Iceland",
            "India",
            "Indonesia",
            "Iraq",
            "Ireland",
            "Isle of Man",
            "Israel",
            "Italy",
            "Jamaica",
            "Japan",
            "Jersey",
            "Jordan",
            "Kazakhstan",
            "Kenya",
            "Kiribati",
            "Kuwait",
            "Kyrgyzstan",
            "Lao People's Democratic Republic",
            "Latvia",
            "Lebanon",
            "Lesotho",
            "Liberia",
            "Libya",
            "Liechtenstein",
            "Lithuania",
            "Luxembourg",
            "Macau Sar",
            "Macedonia, Fyro",
            "Madagascar",
            "Malawi",
            "Malaysia",
            "Maldives",
            "Mali",
            "Malta",
            "Marshall Islands",
            "Martinique",
            "Mauritania",
            "Mauritius",
            "Mayotte",
            "Mexico",
            "Micronesia",
            "Moldova",
            "Monaco",
            "Mongolia",
            "Montenegro",
            "Montserrat",
            "Morocco",
            "Mozambique",
            "Myanmar",
            "Namibia",
            "Nauru",
            "Nepal",
            "Netherlands",
            "New Caledonia",
            "New Zealand",
            "Nicaragua",
            "Niger",
            "Nigeria",
            "Niue",
            "Norfolk Island",
            "Northern Mariana Islands",
            "Norway",
            "Oman",
            "Pakistan",
            "Palau",
            "Panama",
            "Papua New Guinea",
            "Paraguay",
            "Peru",
            "Philippines",
            "Pitcairn",
            "Poland",
            "Portugal",
            "Puerto Rico (U.S. territory)",
            "Qatar",
            "Republic of Korea",
            "Republic of Serbia",
            "Republic of Seychelles",
            "Republic of the Congo",
            "Reunion",
            "Romania",
            "Russia",
            "Rwanda",
            "Saint Barthélemy",
            "Saint Helena, Ascension and Tristan da Cunh",
            "Saint Kitts and Nevis",
            "Saint Lucia",
            "Saint Martin",
            "Saint Pierre Miquelon",
            "Saint Vincent Grenadiens",
            "Samoa",
            "San Marino",
            "Sao Tome and Principe",
            "Saudi Arabia",
            "Senegal",
            "Sierra Leone",
            "Singapore",
            "Sint Maarten",
            "Slovakia",
            "Slovenia",
            "Solomon Islands",
            "Somalia",
            "South Africa",
            "South Georgia and the South Sandwich Islands",
            "South Sudan",
            "Spain",
            "Sri Lanka",
            "State of Palestine",
            "Suriname",
            "Svalbard and Jan Mayen",
            "Sweden",
            "Switzerland",
            "Taiwan",
            "Tajikistan",
            "Tanzania",
            "Thailand",
            "Timor-Leste",
            "Togo",
            "Tokelau",
            "Tonga",
            "Trinidad and Tobago",
            "Tunisia",
            "Turkey",
            "Turkmenistan",
            "Turks Caicos",
            "Tuvalu",
            "Uganda",
            "Ukraine",
            "United Arab Emirates",
            "United Kingdom",
            "United States",
            "Uruguay",
            "Uzbekistan",
            "Vanuatu",
            "Vatican City State",
            "Venezuela",
            "Vietnam",
            "Virgin Islands (British)",
            "Virgin Islands (U.S.)",
            "Wallis Futuna",
            "Western Sahara",
            "Yemen",
            "Zambia",
            "Zimbabwe"
          ]
        },
        "countryCode": {
          "type": "number",
          "example": 840,
          "minimum": 0
        },
        "dyingGasp": {
          "type": "boolean",
          "description": "Set to true if ONU is disconnected due to power outage",
          "example": true
        },
        "signalLevel": {
          "type": "number",
          "description": "Signal level from 0 (no signal) to 4 (very strong signal). Null when unknown. Applicable for UISP-LTE and UISP-P-Pro with USB LTE Dongle",
          "example": 3,
          "minimum": 0
        },
        "signalStrength": {
          "type": "number",
          "description": "Actual signal strength in dBm. Null when unknown.",
          "example": -85
        },
        "regStatus": {
          "type": "string",
          "description": "Actual registration status of mobile network",
          "enum": [
            "unknown",
            "not_registered",
            "searching",
            "registered",
            "connected",
            "denied"
          ]
        },
        "parentId": {
          "type": "string",
          "description": "Parent device id, applicable for ONU devices",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "operator": {
          "type": "string",
          "description": "Operator name",
          "example": "T-Mobile CZ"
        },
        "pinStatus": {
          "type": "string",
          "description": "SIM card PIN status",
          "example": "blocked",
          "enum": [
            "disabled",
            "required",
            "unlocked",
            "blocked",
            "unknown"
          ]
        },
        "technology": {
          "type": "string",
          "description": "SIM card technology used currently",
          "example": "lte",
          "enum": [
            "gsm",
            "umts",
            "tdscdma",
            "lte",
            "cdma"
          ]
        },
        "pinAttemptsRemaining": {
          "type": "integer",
          "description": "Number of remaining allowed attempts to set or change PIN",
          "example": 3,
          "minimum": 0
        },
        "cardStatus": {
          "type": "string",
          "description": "SIM card status",
          "example": "present",
          "enum": [
            "unknown",
            "absent",
            "present"
          ]
        },
        "imei": {
          "type": "string",
          "description": "LTE modem IMEI number",
          "example": "353634110111687"
        },
        "smsQuotaCurrent": {
          "type": "integer",
          "minimum": 0
        },
        "smsQuotaMaximal": {
          "type": "integer",
          "minimum": 0
        },
        "backupNetAddress": {
          "type": "string"
        },
        "backupNetQuotaCurrent": {
          "type": "integer",
          "minimum": 0
        },
        "backupNetQuotaMaximal": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "visibleBy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "description": "Device type",
          "example": "erouter",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "type",
        "model",
        "name"
      ]
    },
    "discovery": {
      "type": "object",
      "properties": {
        "configured": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "snmpCommunity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "isProcessing": {
          "type": "boolean"
        },
        "visibleBy": {
          "$ref": "#/definitions/visibleBy"
        }
      }
    },
    "features": {
      "type": "object",
      "properties": {
        "has60GhzRadio": {
          "type": "boolean",
          "description": "Has 60Ghz radio.",
          "example": true
        },
        "hasBackupAntenna": {
          "type": "boolean",
          "description": "Has antenna for backup.",
          "example": true
        },
        "isUdapiSpeedTestSupported": {
          "type": "boolean",
          "description": "If device supports speed test over UDAPI.",
          "example": true
        },
        "isUsingUdapiUpdaters": {
          "type": "boolean",
          "description": "Device supports UDAPI.",
          "example": true
        },
        "isSupportRouter": {
          "type": "boolean",
          "description": "The device can be configured to act as a network router.",
          "example": true
        }
      }
    },
    "vlans": {
      "type": "object",
      "properties": {
        "interface": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        },
        "vlanId": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        }
      }
    },
    "eswitch": {
      "type": "object",
      "properties": {
        "vlans": {
          "$ref": "#/definitions/vlans"
        }
      }
    },
    "uisps": {
      "type": "object",
      "properties": {
        "vlans": {
          "$ref": "#/definitions/vlans"
        }
      }
    },
    "DeviceFirmware1": {
      "type": "object",
      "properties": {
        "compatible": {
          "type": "boolean",
          "description": "If firmware is compatible with UISP"
        },
        "current": {
          "type": "string",
          "description": "Current firmware version"
        },
        "latest": {
          "type": "string",
          "description": "Latest known firmware version"
        },
        "latestOnCurrentMajorVersion": {
          "type": "string",
          "description": "Latest known firmware version on current major version"
        },
        "latestOver": {
          "type": "string",
          "description": "Upgrade this firmware version as first if target\n  firmware is higher than latestOver. (AirCube must be updated over 2.8.0 fw)"
        },
        "semver": {
          "$ref": "#/definitions/semver"
        },
        "upgradeRecommendedToVersion": {
          "type": "string",
          "description": "Recommended firmware version to upgrade to."
        },
        "prospective": {
          "type": "string",
          "description": "Latest firmware version, even if not supported by UISP yet"
        }
      },
      "required": [
        "current",
        "latest",
        "latestOnCurrentMajorVersion",
        "latestOver",
        "upgradeRecommendedToVersion",
        "prospective"
      ]
    },
    "parent1": {
      "type": "object"
    },
    "site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Site ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "description": "Site name.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": [
            "site",
            "endpoint"
          ]
        },
        "parent": {
          "$ref": "#/definitions/parent1"
        }
      },
      "required": [
        "id",
        "status",
        "type"
      ]
    },
    "DeviceIdentification": {
      "type": "object",
      "description": "Read-only identification attributes.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UISP."
        },
        "category": {
          "type": "string",
          "enum": [
            "optical",
            "wired",
            "wireless",
            "accessories"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "UISP device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "udapiVersion": {
          "type": "string",
          "description": "In string format."
        },
        "bridgeVersion": {
          "type": "string",
          "description": "In string format."
        },
        "subsystemId": {
          "type": "string",
          "description": "Device subsystem ID in string format."
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UISP Fiber OLT."
        },
        "systemName": {
          "type": "string",
          "description": "OS",
          "example": "Linux"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "vendorName": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "name": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UISP Fiber NanoG",
            "UISP Fiber Loco",
            "UISP Fiber Wifi",
            "UISP Fiber Instant",
            "UISP Fiber Wifi6",
            "UISP Fiber XG",
            "UISP Fiber XGS",
            "UISP Router LXC",
            "UISPRPro",
            "UISPConsole",
            "UISPR",
            "UISPRPlus",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UNMSS",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "UISPFiberOltXgs",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "AF60",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "lturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SunMax",
            "UX",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "serialNumber": {
          "type": "string"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "started": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom",
            "maintenance",
            "incompatible",
            "unmonitored",
            "unassigned",
            "misconfigured",
            "preregistration"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "wanInterfaceId": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "ipAddressList": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Custom IP address in IPv4 or IPv6 format.",
        "example": "192.168.1.22",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "latestBackup": {
      "type": "object",
      "description": "Latest backup info.",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Latest backup timestamp.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "id": {
          "type": "string",
          "description": "Latest backup ID."
        }
      },
      "required": [
        "timestamp",
        "id"
      ]
    },
    "DeviceMeta": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "maxLength": 30
        },
        "customIpAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "failedMessageDecryption": {
          "type": "boolean"
        },
        "failedDecryptionAt": {
          "type": "string",
          "format": "date-time"
        },
        "maintenance": {
          "type": "boolean"
        },
        "maintenanceEnabledAt": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "note": {
          "type": "string",
          "maxLength": 300
        },
        "restartTimestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "firmwareCompatibility": {
          "type": "string",
          "enum": [
            "obsolete",
            "compatible",
            "prospective",
            "upgradable"
          ]
        },
        "activeAction": {
          "type": "string",
          "enum": [
            "restarting",
            "removing",
            "updatingFirmware",
            "generatingSupportFile"
          ]
        }
      },
      "required": [
        "failedMessageDecryption",
        "maintenance",
        "restartTimestamp",
        "firmwareCompatibility"
      ]
    },
    "Model6": {
      "type": "object",
      "properties": {
        "psuType": {
          "type": "string"
        },
        "connected": {
          "type": "boolean"
        },
        "maxChargingPower": {
          "type": "number",
          "description": "Power reserved for charging in W."
        },
        "voltage": {
          "type": "number",
          "description": "Voltage in V.",
          "minimum": 0
        },
        "power": {
          "type": "number",
          "description": "Power consumption in W.",
          "minimum": 0
        },
        "batteryCapacity": {
          "type": "number",
          "description": "Battery capacity in percentage (only for battery).",
          "minimum": 0,
          "maximum": 100
        },
        "batteryTime": {
          "type": "number",
          "description": "Battery remaining time in seconds (only for battery).",
          "minimum": 0
        },
        "batteryType": {
          "type": "string",
          "description": "Battery type from UDAPI (lead-acid or li-ion)."
        },
        "batteryCapacityConfigured": {
          "type": "number",
          "description": "Configured battery capacity in mAh (only for battery).",
          "minimum": 0
        },
        "batteryCapacityEstimated": {
          "type": "number",
          "description": "Estimated battery capacity in mAh, null when the capacity is not known yet (only for battery).",
          "minimum": 0
        }
      }
    },
    "psu": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model6"
      }
    },
    "dfsLockouts": {
      "type": "array",
      "description": "DFS frequency lockouts.",
      "items": {
        "type": "number"
      }
    },
    "outputPowers": {
      "type": "array",
      "description": "Power consumption of each output port in W.",
      "items": {
        "type": "number"
      }
    },
    "linkScore1": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "scoreMax": {
          "type": "number",
          "description": "Score max 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeScore": {
          "type": "number",
          "description": "Score airTime 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "uplinkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "downlinkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScoreHint": {
          "type": "string",
          "description": "Hint for better score."
        },
        "theoreticalTotalCapacity": {
          "type": "integer"
        },
        "theoreticalDownlinkCapacity": {
          "type": "integer"
        },
        "theoreticalUplinkCapacity": {
          "type": "integer"
        }
      }
    },
    "antenna1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "gain": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "builtIn": {
          "type": "boolean"
        },
        "cableLoss": {
          "type": "number"
        }
      }
    },
    "wirelessActiveInterfaceIds": {
      "type": "array",
      "description": "Main active radios currently used to send/receive traffic.",
      "example": [
        [
          "wlan0"
        ]
      ],
      "items": {
        "type": "string"
      }
    },
    "Main lan interface speed": {
      "type": "object",
      "description": "Available speed of main lan interface",
      "properties": {
        "interfaceId": {
          "type": "string"
        },
        "availableSpeed": {
          "type": "string"
        }
      }
    },
    "DeviceOverview": {
      "type": "object",
      "description": "Read-only basic device/client overview attributes.",
      "properties": {
        "batteryCapacity": {
          "type": "number",
          "description": "Device battery (batteries) capacity in percentage.",
          "minimum": 0,
          "maximum": 100
        },
        "batteryTime": {
          "type": "number",
          "description": "Device remaining time in seconds when running on battery (batteries).",
          "minimum": 0
        },
        "psu": {
          "$ref": "#/definitions/psu"
        },
        "biasCurrent": {
          "type": "number",
          "description": "Nullable property in milliamperes."
        },
        "canUpgrade": {
          "type": "boolean",
          "description": "TRUE if device can be upgraded."
        },
        "consumption": {
          "type": "number",
          "description": "Power consumption in Wh."
        },
        "cpu": {
          "type": "number",
          "description": "Current cpu load."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "distance": {
          "type": "number",
          "description": "Nullable property in meters.Either distance between sites or distance returned from device AP."
        },
        "downlinkUtilization": {
          "type": "number"
        },
        "uplinkUtilization": {
          "type": "number"
        },
        "frequency": {
          "type": "number",
          "description": "Nullable prop; current frequency (only for airmax devices)."
        },
        "dfsLockouts": {
          "$ref": "#/definitions/dfsLockouts"
        },
        "isLocateRunning": {
          "type": "boolean",
          "description": "TRUE if device is in locate mode."
        },
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Last seen timestamp in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "powerStatus": {
          "type": "number"
        },
        "outputPower": {
          "type": "number",
          "description": "Device power consumption in W."
        },
        "outputPowers": {
          "$ref": "#/definitions/outputPowers"
        },
        "maximalPower": {
          "type": "number",
          "description": "Maximum power the device can currently provide in W."
        },
        "runningOnBattery": {
          "type": "boolean",
          "description": "TRUE if device is running on battery"
        },
        "ram": {
          "type": "number",
          "description": "Current memory usage."
        },
        "signal": {
          "type": "number",
          "description": "Nullable prop; current signal level (only for airmax devices), for example -55 dBm.",
          "example": "-55"
        },
        "signalMax": {
          "type": "number",
          "description": "Theoretical max local signal level.",
          "example": "-55"
        },
        "remoteSignalMax": {
          "type": "number",
          "description": "Theoretical max remote signal level.",
          "example": "-55"
        },
        "stationsCount": {
          "type": "number",
          "description": "Count of stations (only for airmax and aircube)."
        },
        "linkStationsCount": {
          "type": "number",
          "description": "Count of stations monitoring in this link (only for airMax, airFiber, Wave and aircube)."
        },
        "linkActiveStationsCount": {
          "type": "number",
          "description": "Count of active stations (only for airMax, airFiber, Wave and aircube)."
        },
        "status": {
          "type": "string",
          "description": "Read-only value generated by UISP."
        },
        "keyExchangeStatus": {
          "type": "string",
          "enum": [
            "pending",
            "complete"
          ]
        },
        "temperature": {
          "type": "number"
        },
        "uptime": {
          "type": "number",
          "description": "Uptime in seconds."
        },
        "serviceUptime": {
          "type": "number"
        },
        "serviceTime": {
          "type": "number"
        },
        "voltage": {
          "type": "number",
          "description": "System input voltage in V."
        },
        "linkScore": {
          "$ref": "#/definitions/linkScore1"
        },
        "outageScore": {
          "type": "number"
        },
        "linkOutageScore": {
          "type": "number"
        },
        "downlinkCapacity": {
          "type": "integer"
        },
        "uplinkCapacity": {
          "type": "integer"
        },
        "totalCapacity": {
          "type": "integer"
        },
        "theoreticalTotalCapacity": {
          "type": "integer"
        },
        "theoreticalUplinkCapacity": {
          "type": "integer"
        },
        "theoreticalDownlinkCapacity": {
          "type": "integer"
        },
        "antenna": {
          "$ref": "#/definitions/antenna1"
        },
        "channelWidth": {
          "type": "number"
        },
        "transmitPower": {
          "type": "number"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "wirelessActiveInterfaceIds": {
          "$ref": "#/definitions/wirelessActiveInterfaceIds"
        },
        "mainInterfaceSpeed": {
          "$ref": "#/definitions/Main%20lan%20interface%20speed"
        }
      }
    },
    "prerelease1": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "alpha",
        "x-alternatives": [
          {
            "type": "string",
            "example": "alpha"
          },
          {
            "type": "number",
            "example": 1
          }
        ]
      }
    },
    "firmware": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number",
          "example": 1
        },
        "minor": {
          "type": "number",
          "example": 10
        },
        "patch": {
          "type": "number",
          "example": 8
        },
        "prerelease": {
          "$ref": "#/definitions/prerelease1"
        },
        "order": {
          "type": "string",
          "example": "65546.8.0"
        },
        "upgradeRecommendedToVersion": {
          "type": "string"
        }
      },
      "required": [
        "major",
        "minor",
        "patch"
      ]
    },
    "DeviceUpgrade": {
      "type": "object",
      "properties": {
        "firmware": {
          "$ref": "#/definitions/firmware"
        },
        "firmwareVersion": {
          "type": "string"
        },
        "progress": {
          "type": "number"
        },
        "status": {
          "type": "string"
        },
        "upgradeInMaintenanceWindow": {
          "type": "boolean",
          "description": "Schedule upgrade over maintenance window."
        }
      },
      "required": [
        "firmware",
        "firmwareVersion",
        "progress",
        "status"
      ]
    },
    "DeviceLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.8345584421122,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.46358,
          "minimum": -180,
          "maximum": 180
        },
        "altitude": {
          "type": "number",
          "description": "Meters above the ground.",
          "example": 240
        },
        "elevation": {
          "type": "number",
          "description": "Meters above the sea level.",
          "example": 20
        },
        "heading": {
          "type": "number",
          "description": "\n    Value in degrees. The value is based on map, e.g. without magnetic declination.\n    Ignored on udpate when magneticHeading is present. North is 0 degrees, East is 90, South is 180, West is 270.\n  ",
          "example": 88
        },
        "magneticHeading": {
          "type": "number",
          "description": "\n    Value in degrees. Compass heading (magnetic north).\n    It’s what you’re changing when you spin the dish around on a mast.\n    North is 0 degrees, East is 90, South is 180, West is 270.\n  ",
          "example": 0
        },
        "tilt": {
          "type": "number",
          "description": "Tilt angle in degrees.",
          "example": 20,
          "minimum": -180,
          "maximum": 180
        },
        "roll": {
          "type": "number",
          "description": "Rotation angle in degrees.",
          "example": 0,
          "minimum": -180,
          "maximum": 180
        }
      },
      "required": [
        "latitude",
        "longitude",
        "altitude",
        "elevation",
        "magneticHeading",
        "tilt",
        "roll"
      ]
    },
    "DeviceUplinkDevice": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        }
      }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "example": "applied",
          "enum": [
            "applying",
            "applied"
          ]
        },
        "hash": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Model7": {
      "type": "object",
      "properties": {
        "cidr": {
          "type": "string",
          "example": "192.168.1.100/24",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "origin": {
          "type": "string",
          "example": "dhcp",
          "enum": [
            "dhcp",
            "slaac",
            "link-local",
            "static",
            "ppp"
          ]
        },
        "type": {
          "type": "string",
          "example": "dynamic",
          "enum": [
            "dynamic",
            "static",
            "pppoe",
            "dhcp",
            "dhcpv6"
          ]
        },
        "version": {
          "type": "string",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        }
      },
      "required": [
        "cidr",
        "type"
      ]
    },
    "addresses": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model7"
      }
    },
    "InterfaceIdentification": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Nullable string.",
          "example": "Uplink"
        },
        "displayName": {
          "type": "string",
          "description": "Computed display name from name and description",
          "example": "eth0"
        },
        "mac": {
          "type": "string",
          "example": "fc:ec:da:03:bb:a8",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "connectedMac": {
          "type": "string",
          "example": "fc:ec:da:03:bb:a8",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "macOverride": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Interface name.",
          "example": "eth0"
        },
        "position": {
          "type": "number",
          "description": "Physical port position.",
          "example": 0
        },
        "type": {
          "type": "string",
          "example": "eth"
        }
      }
    },
    "ports": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "stp": {
      "type": "object",
      "properties": {
        "edgePort": {
          "type": "string",
          "enum": [
            "auto",
            "enable",
            "disable"
          ]
        },
        "enabled": {
          "type": "boolean"
        },
        "pathCost": {
          "type": "number"
        },
        "state": {
          "type": "string",
          "enum": [
            "disabled",
            "discarding",
            "listening",
            "learning",
            "forwarding"
          ]
        },
        "portPriority": {
          "type": "number"
        }
      }
    },
    "lag": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "vlanNative": {
          "type": "number"
        },
        "includeVlans": {
          "type": "string"
        },
        "ports": {
          "$ref": "#/definitions/ports"
        },
        "loadBalance": {
          "type": "string"
        },
        "linkTrap": {
          "type": "boolean"
        },
        "dhcpSnooping": {
          "type": "boolean"
        },
        "static": {
          "type": "boolean"
        },
        "stp": {
          "$ref": "#/definitions/stp"
        }
      }
    },
    "Model8": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "authKeysMD5": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model8"
      }
    },
    "ospfConfig": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string"
        },
        "authKey": {
          "type": "string"
        },
        "authKeysMD5": {
          "$ref": "#/definitions/authKeysMD5"
        },
        "cost": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "InterfaceOspf": {
      "type": "object",
      "properties": {
        "ospfCapable": {
          "type": "boolean",
          "example": true
        },
        "ospfConfig": {
          "$ref": "#/definitions/ospfConfig"
        }
      },
      "required": [
        "ospfConfig"
      ]
    },
    "capacities": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          {
            "override": true
          },
          "off"
        ]
      }
    },
    "InterfacePoe": {
      "type": "object",
      "properties": {
        "capacities": {
          "$ref": "#/definitions/capacities"
        },
        "output": {
          "type": "string",
          "example": "off",
          "enum": [
            "off",
            "active",
            "24v",
            "27v",
            "48v",
            "54v",
            "24v-4pair",
            "27v-4pair",
            "54v-4pair",
            "pthru"
          ]
        }
      }
    },
    "capacities1": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          {
            "override": true
          },
          "auto"
        ]
      }
    },
    "InterfaceSpeeds": {
      "type": "object",
      "properties": {
        "capacities": {
          "$ref": "#/definitions/capacities1"
        },
        "speed": {
          "type": "string",
          "example": "auto",
          "pattern": "^autodetect|auto|\\d+-(half|full)$"
        }
      }
    },
    "loadBalanceValues": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "capabilities": {
      "type": "object",
      "properties": {
        "supportAutoEdge": {
          "type": "boolean"
        },
        "supportCableTest": {
          "type": "boolean"
        },
        "supportReset": {
          "type": "boolean"
        },
        "loadBalanceValues": {
          "$ref": "#/definitions/loadBalanceValues"
        }
      }
    },
    "InterfaceStatistics": {
      "type": "object",
      "properties": {
        "dropped": {
          "type": "number",
          "example": 0
        },
        "errors": {
          "type": "number",
          "example": 0
        },
        "rxbytes": {
          "type": "number",
          "example": 7487858302
        },
        "rxrate": {
          "type": "number",
          "example": 3440
        },
        "txbytes": {
          "type": "number",
          "example": 368737600
        },
        "txrate": {
          "type": "number",
          "example": 736
        },
        "poePower": {
          "type": "number",
          "example": 736
        },
        "rxMcs": {
          "type": "number",
          "example": 1
        },
        "txMcs": {
          "type": "number",
          "example": 1
        }
      }
    },
    "InterfaceStatus": {
      "type": "object",
      "properties": {
        "currentSpeed": {
          "type": "string",
          "example": "1000-full"
        },
        "description": {
          "type": "string",
          "example": "1 Gbps - Full Duplex"
        },
        "plugged": {
          "type": "boolean",
          "example": true
        },
        "speed": {
          "type": "string",
          "example": "auto"
        },
        "status": {
          "type": "string",
          "example": "active"
        }
      }
    },
    "vid": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Model9": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "pvid": {
          "type": "string"
        },
        "vid": {
          "$ref": "#/definitions/vid"
        },
        "displayName": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "hasAddress": {
          "type": "boolean"
        },
        "hasSubInterface": {
          "type": "boolean"
        },
        "isBridged": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "enabled",
        "hasAddress",
        "hasSubInterface",
        "isBridged"
      ]
    },
    "ports1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model9"
      }
    },
    "switch": {
      "type": "object",
      "properties": {
        "ports": {
          "$ref": "#/definitions/ports1"
        },
        "vlanCapable": {
          "type": "boolean"
        },
        "vlanEnabled": {
          "type": "boolean"
        }
      },
      "required": [
        "ports",
        "vlanCapable",
        "vlanEnabled"
      ]
    },
    "switchedPorts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model9"
      }
    },
    "vlan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "egressQoSMapExternal": {
          "type": "integer",
          "minimum": 0,
          "maximum": 7
        },
        "parent": {
          "type": "string"
        }
      }
    },
    "pingWatchdog": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "failureCount": {
          "type": "number"
        },
        "interval": {
          "type": "number"
        },
        "offDelay": {
          "type": "number"
        },
        "startDelay": {
          "type": "number"
        }
      }
    },
    "speedLimit": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "rx": {
          "type": "number",
          "minimum": 0,
          "maximum": 1000000
        },
        "tx": {
          "type": "number",
          "minimum": 0,
          "maximum": 1000000
        }
      }
    },
    "port": {
      "type": "object",
      "description": "Properties specific for ports on ES and TS devices.",
      "properties": {
        "dhcpSnooping": {
          "type": "boolean"
        },
        "flowControl": {
          "type": "boolean"
        },
        "isolated": {
          "type": "boolean"
        },
        "pingWatchdog": {
          "$ref": "#/definitions/pingWatchdog"
        },
        "speedLimit": {
          "$ref": "#/definitions/speedLimit"
        },
        "routed": {
          "type": "boolean"
        },
        "stp": {
          "$ref": "#/definitions/stp"
        }
      }
    },
    "dfsLockouts1": {
      "type": "array",
      "description": "DFS lockout frequencies",
      "example": [
        [5440, 5460]
      ],
      "items": {
        "type": "number"
      }
    },
    "antenna2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "gain": {
          "type": "number"
        },
        "cableLoss": {
          "type": "number"
        }
      }
    },
    "wireless": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string",
          "description": "SSID",
          "example": "ubnt.com"
        },
        "frequency": {
          "type": "number",
          "description": "Frequency in MHz, on which radio is listening.",
          "example": 5400,
          "minimum": 0
        },
        "frequencyBand": {
          "type": "string",
          "enum": [
            "2.4GHz",
            "3GHz",
            "4GHz",
            "5GHz",
            "11GHz",
            "24GHz",
            "60GHz"
          ]
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width in MHz radio is operating on.",
          "example": 40,
          "minimum": 0
        },
        "dfsTimeRemaining": {
          "type": "number",
          "description": "DFS wait time remaining.",
          "example": 0
        },
        "dfsTimeTotal": {
          "type": "number",
          "description": "DFS expected total wait time.",
          "example": 0
        },
        "dfsLockouts": {
          "$ref": "#/definitions/dfsLockouts1"
        },
        "key": {
          "type": "string",
          "description": "Pre shared key"
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "transmitPower": {
          "type": "number"
        },
        "transmitEirp": {
          "type": "number"
        },
        "frameLength": {
          "type": "number",
          "minimum": 0
        },
        "dlRatio": {
          "type": "integer",
          "description": "Downlink ratio in percentage. To calculate Uplink percentage substract DlRatio out of a hundered.",
          "example": 67
        },
        "noiseFloor": {
          "type": "integer",
          "description": "Wireless noise level in dBm",
          "example": -84
        },
        "minTxPower": {
          "type": "number"
        },
        "maxTxPower": {
          "type": "number"
        },
        "waveAiEnabled": {
          "type": "boolean",
          "example": true
        },
        "serviceUptime": {
          "type": "number"
        },
        "antenna": {
          "$ref": "#/definitions/antenna2"
        }
      },
      "required": [
        "ssid",
        "frequency",
        "channelWidth",
        "dfsTimeRemaining",
        "dfsTimeTotal",
        "dfsLockouts",
        "key",
        "security",
        "frameLength",
        "dlRatio",
        "noiseFloor"
      ]
    },
    "DeviceIdentification1": {
      "type": "object",
      "description": "Read-only identification attributes.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UISP."
        },
        "category": {
          "type": "string",
          "enum": [
            "optical",
            "wired",
            "wireless",
            "accessories"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "UISP device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "udapiVersion": {
          "type": "string",
          "description": "In string format."
        },
        "bridgeVersion": {
          "type": "string",
          "description": "In string format."
        },
        "subsystemId": {
          "type": "string",
          "description": "Device subsystem ID in string format."
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UISP Fiber OLT."
        },
        "systemName": {
          "type": "string",
          "description": "OS",
          "example": "Linux"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "vendorName": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "name": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UISP Fiber NanoG",
            "UISP Fiber Loco",
            "UISP Fiber Wifi",
            "UISP Fiber Instant",
            "UISP Fiber Wifi6",
            "UISP Fiber XG",
            "UISP Fiber XGS",
            "UISP Router LXC",
            "UISPRPro",
            "UISPConsole",
            "UISPR",
            "UISPRPlus",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UNMSS",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "UISPFiberOltXgs",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "AF60",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "lturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SunMax",
            "UX",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "serialNumber": {
          "type": "string"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "started": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom",
            "maintenance",
            "incompatible",
            "unmonitored",
            "unassigned",
            "misconfigured",
            "preregistration"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "wanInterfaceId": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "rxChain": {
      "type": "array",
      "description": "Wireless signal level in dBm for each antenna chain.",
      "example": [
        [30, 40]
      ],
      "items": {
        "type": "integer"
      }
    },
    "rxChainIdeal": {
      "type": "array",
      "description": "Wireless ideal signal level in dBm for each antenna chain.",
      "example": [
        [30, 40]
      ],
      "items": {
        "type": "integer"
      }
    },
    "txChain": {
      "type": "array",
      "description": "Wireless signal level in dBm for each antenna chain.",
      "example": [
        [30, 40]
      ],
      "items": {
        "type": "integer"
      }
    },
    "txChainIdeal": {
      "type": "array",
      "description": "Wireless ideal signal level in dBm for each antenna chain.",
      "example": [
        [30, 40]
      ],
      "items": {
        "type": "integer"
      }
    },
    "statistics": {
      "type": "object",
      "properties": {
        "linkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "score": {
          "type": "number",
          "description": "Score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "scoreMax": {
          "type": "number",
          "description": "Score max 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeScore": {
          "type": "number",
          "description": "Score airTime 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "uplinkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "downlinkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScoreHint": {
          "type": "string",
          "description": "Hint for better score."
        },
        "theoreticalTotalCapacity": {
          "type": "integer",
          "description": "Theoretical total capacity."
        },
        "theoreticalDownlinkCapacity": {
          "type": "integer",
          "description": "Theoretical downlink capacity."
        },
        "theoreticalUplinkCapacity": {
          "type": "integer",
          "description": "Theoretical uplink capacity."
        }
      }
    },
    "DeviceFirmware2": {
      "type": "object",
      "properties": {
        "compatible": {
          "type": "boolean",
          "description": "If firmware is compatible with UISP"
        },
        "current": {
          "type": "string",
          "description": "Current firmware version"
        },
        "latest": {
          "type": "string",
          "description": "Latest known firmware version"
        },
        "latestOnCurrentMajorVersion": {
          "type": "string",
          "description": "Latest known firmware version on current major version"
        },
        "latestOver": {
          "type": "string",
          "description": "Upgrade this firmware version as first if target\n  firmware is higher than latestOver. (AirCube must be updated over 2.8.0 fw)"
        },
        "semver": {
          "$ref": "#/definitions/semver"
        },
        "upgradeRecommendedToVersion": {
          "type": "string",
          "description": "Recommended firmware version to upgrade to."
        },
        "prospective": {
          "type": "string",
          "description": "Latest firmware version, even if not supported by UISP yet"
        }
      },
      "required": [
        "current",
        "latest",
        "latestOnCurrentMajorVersion",
        "latestOver",
        "upgradeRecommendedToVersion",
        "prospective"
      ]
    },
    "Station": {
      "type": "object",
      "properties": {
        "connected": {
          "type": "boolean"
        },
        "connectionTime": {
          "type": "integer"
        },
        "deviceIdentification": {
          "$ref": "#/definitions/DeviceIdentification1"
        },
        "distance": {
          "type": "integer",
          "description": "Distance in meters.",
          "example": 100
        },
        "downlinkCapacity": {
          "type": "integer"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "latency": {
          "type": "integer",
          "description": "Latency in milliseconds.",
          "example": 10
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "interfaceId": {
          "type": "string",
          "description": "Interface name, where the station is connected.",
          "example": "wlan0"
        },
        "name": {
          "type": "string",
          "example": "lab-ISM5-1"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Custom model name",
          "example": "Thinkpad E15"
        },
        "systemName": {
          "type": "string",
          "description": "Custom OS name",
          "example": "Linux"
        },
        "radio": {
          "type": "string",
          "enum": [
            "2.4GHz",
            "3GHz",
            "4GHz",
            "5GHz",
            "11GHz",
            "24GHz",
            "60GHz"
          ]
        },
        "rxBytes": {
          "type": "integer",
          "description": "Received bytes.",
          "example": 926000
        },
        "rxMcs": {
          "type": "string",
          "description": "Local current MCS.",
          "example": 8
        },
        "rxMcsIndex": {
          "type": "string",
          "description": "Local MCS index.",
          "example": 8
        },
        "rxMcsIdeal": {
          "type": "string",
          "description": "Local ideal MCS.",
          "example": 8
        },
        "rxMcsIndexIdeal": {
          "type": "string",
          "description": "Local ideal MCS index.",
          "example": 8
        },
        "rxModulation": {
          "type": "string",
          "description": "Local Rx data rate.",
          "example": 8
        },
        "rxRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 456
        },
        "rxSignal": {
          "type": "integer",
          "description": "Local Signal in dBm.",
          "example": -44
        },
        "rxSignalIdeal": {
          "type": "integer",
          "description": "Local Expected Signal in dBm.",
          "example": -39
        },
        "rxChain": {
          "$ref": "#/definitions/rxChain"
        },
        "rxChainIdeal": {
          "$ref": "#/definitions/rxChainIdeal"
        },
        "rxChainMask": {
          "type": "integer",
          "example": 2
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "txBytes": {
          "type": "integer",
          "description": "Transmitted/Sent bytes.",
          "example": 436000
        },
        "txMcs": {
          "type": "string",
          "description": "Remote current MCS.",
          "example": 8
        },
        "txMcsIndex": {
          "type": "string",
          "description": "Remote MCS index.",
          "example": 8
        },
        "txMcsIdeal": {
          "type": "string",
          "description": "Remote ideal MCS.",
          "example": 8
        },
        "txMcsIndexIdeal": {
          "type": "string",
          "description": "Remote ideal MCS index.",
          "example": 8
        },
        "txModulation": {
          "type": "string",
          "description": "Remote Rx data rate.",
          "example": 8
        },
        "txRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 325
        },
        "txSignal": {
          "type": "integer",
          "description": "Remote Signal in dBm.",
          "example": -39
        },
        "txSignalIdeal": {
          "type": "integer",
          "description": "Remote Expected Signal in dBm.",
          "example": -39
        },
        "txChain": {
          "$ref": "#/definitions/txChain"
        },
        "txChainIdeal": {
          "$ref": "#/definitions/txChainIdeal"
        },
        "txChainMask": {
          "type": "integer",
          "example": 2
        },
        "noiseFloor": {
          "type": "integer",
          "description": "Wireless noise level in dBm",
          "example": -84
        },
        "uplinkCapacity": {
          "type": "integer"
        },
        "uptime": {
          "type": "integer"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "vendorName": {
          "type": "string",
          "description": "Custom vendor name",
          "example": "Ubiquiti Networks"
        },
        "statistics": {
          "$ref": "#/definitions/statistics"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware2"
        },
        "downlinkAirTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "uplinkAirTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      },
      "required": [
        "rxChain",
        "rxChainMask",
        "txChain",
        "txChainMask",
        "noiseFloor"
      ]
    },
    "stations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Station"
      }
    },
    "DeviceInterfaceSchema": {
      "type": "object",
      "properties": {
        "addresses": {
          "$ref": "#/definitions/addresses"
        },
        "bridge": {
          "type": "string"
        },
        "canDisplayStatistics": {
          "type": "boolean",
          "example": true
        },
        "enabled": {
          "type": "boolean",
          "example": true
        },
        "identification": {
          "$ref": "#/definitions/InterfaceIdentification"
        },
        "isSwitchedPort": {
          "type": "boolean"
        },
        "isBridgedPort": {
          "type": "boolean"
        },
        "lag": {
          "$ref": "#/definitions/lag"
        },
        "mtu": {
          "type": "string"
        },
        "mssClamping": {
          "type": "boolean",
          "description": "Set to true to enable MSS clamping",
          "example": true
        },
        "ospf": {
          "$ref": "#/definitions/InterfaceOspf"
        },
        "poe": {
          "$ref": "#/definitions/InterfacePoe"
        },
        "speeds": {
          "$ref": "#/definitions/InterfaceSpeeds"
        },
        "pppoe": {
          "type": "string"
        },
        "proxyARP": {
          "type": "string"
        },
        "sfp": {
          "type": "string"
        },
        "speed": {
          "type": "string",
          "example": "auto",
          "pattern": "^autodetect|auto|\\d+-(half|full)$"
        },
        "capabilities": {
          "$ref": "#/definitions/capabilities"
        },
        "statistics": {
          "$ref": "#/definitions/InterfaceStatistics"
        },
        "status": {
          "$ref": "#/definitions/InterfaceStatus"
        },
        "switch": {
          "$ref": "#/definitions/switch"
        },
        "switchedPorts": {
          "$ref": "#/definitions/switchedPorts"
        },
        "visible": {
          "type": "boolean",
          "example": true
        },
        "vlan": {
          "$ref": "#/definitions/vlan"
        },
        "port": {
          "$ref": "#/definitions/port"
        },
        "dhcp6PDRequestSize": {
          "type": "number",
          "description": "Enables requesting of DHCPv6 Prefix Delegation.",
          "minimum": 48,
          "maximum": 64
        },
        "dhcp6PDUseFromInterface": {
          "type": "string",
          "description": "Assign IPv6 subnet to this interface."
        },
        "dhcp6PDUseSize": {
          "type": "number",
          "description": "Length of the subnet of the prefix assigned.",
          "minimum": 48,
          "maximum": 64
        },
        "wireless": {
          "$ref": "#/definitions/wireless"
        },
        "stations": {
          "$ref": "#/definitions/stations"
        }
      },
      "required": [
        "identification"
      ]
    },
    "DeviceInterfaceListSchema": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeviceInterfaceSchema"
      }
    },
    "DeviceStatusOverview": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "ListOfDevices": {
      "type": "array",
      "description": "Read-only overview for device list.",
      "items": {
        "$ref": "#/definitions/DeviceStatusOverview"
      }
    },
    "models": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "UF-Nano",
          "UF-Loco",
          "UF-Wifi",
          "UF-Instant",
          "UF-Wifi6",
          "UISP-FIBER-XG",
          "UISP-FIBER-XGS",
          "UF-OLT",
          "UF-OLT4",
          "UISP-FIBER-OLT-XGS",
          "UISP-R-LXC-24",
          "UISP-R-Pro",
          "UISP-Console",
          "UISP-R-Lite",
          "UISP-R",
          "UISP-R-Plus",
          "UNMS-S-Lite",
          "UISP-S-Lite",
          "UISP-S-Pro",
          "UISP-S",
          "UISP-S-Plus",
          "UISP-LTE",
          "UISP-LTE-EU",
          "UISP-LTE-US",
          "ER-X",
          "ER-X-SFP",
          "ERLite-3",
          "ERPoe-5",
          "ERPro-8",
          "ER-8",
          "ER-8-XG",
          "ER-4",
          "ER-6P",
          "ER-12",
          "ER-12P",
          "ER-10X",
          "EP-R8",
          "EP-R6",
          "EP-S16",
          "ES-12F",
          "ES-16-150W",
          "ES-24-250W",
          "ES-24-500W",
          "ES-24-Lite",
          "ES-48-500W",
          "ES-48-750W",
          "ES-48-Lite",
          "ES-8-150W",
          "ES-16-XG",
          "ES-10XP",
          "ES-10X",
          "ES-18X",
          "ES-26X",
          "EP-54V-150W",
          "EP-24V-72W",
          "EP-54V-72W",
          "UISP-P",
          "UISP-P-Pro",
          "TSW-PoE",
          "TSW-PoE PRO",
          "ACB-AC",
          "ACB-ISP",
          "ACB-LOCO",
          "AF11FX",
          "AF24",
          "AF24HD",
          "AF2X",
          "AF3X",
          "AF4X",
          "AF5",
          "AF5U",
          "AF5X",
          "AF-5XHD",
          "AF-LTU",
          "LTU-Lite",
          "AF-LTU5",
          "LTU-Rocket",
          "LTU-LR",
          "LTU-XR",
          "LTU-Instant",
          "AF60",
          "AF60-LR",
          "AF60XG",
          "AF60HD",
          "AF60-XR",
          "Wave-AP",
          "WaveAP",
          "Wave-LR",
          "Wave-Nano",
          "Wave-AP-Micro",
          "Wave-Pro",
          "Wave-Pico",
          "GBE-LR",
          "GBE",
          "GBE-Plus",
          "GBE-AP",
          "R2N",
          "R2T",
          "R5N",
          "R6N",
          "R36-GPS",
          "RM3-GPS",
          "R2N-GPS",
          "R5N-GPS",
          "R9N-GPS",
          "R5T-GPS",
          "RM3",
          "R36",
          "R9N",
          "N2N",
          "N5N",
          "N6N",
          "NS3",
          "N36",
          "N9N",
          "N9S",
          "LM2",
          "LM5",
          "B2N",
          "B2T",
          "B5N",
          "B5T",
          "BAC",
          "AG2",
          "AG2-HP",
          "AG5",
          "AG5-HP",
          "p2N",
          "p5N",
          "M25",
          "P2B-400",
          "P5B-300",
          "P5B-300-ISO",
          "P5B-400",
          "P5B-400-ISO",
          "P5B-620",
          "LB5-120",
          "LB5",
          "N5B",
          "N5B-16",
          "N5B-19",
          "N5B-300",
          "N5B-400",
          "N5B-Client",
          "N2B",
          "N2B-13",
          "N2B-400",
          "PAP",
          "LAP-HP",
          "LAP",
          "AGW",
          "AGW-LR",
          "AGW-Pro",
          "AGW-Installer",
          "PB5",
          "PB3",
          "P36",
          "PBM10",
          "NB5",
          "NB2",
          "NB3",
          "B36",
          "NB9",
          "SM5",
          "WM5",
          "IS-M5",
          "Loco5AC",
          "NS-5AC",
          "R5AC-PTMP",
          "R5AC-PTP",
          "R5AC-Lite",
          "R5AC-PRISM",
          "R2AC-Prism",
          "R2AC-Gen2",
          "RP-5AC-Gen2",
          "NBE-2AC-13",
          "NBE-5AC-16",
          "NBE-5AC-19",
          "NBE-5AC-Gen2",
          "PBE-5AC-300",
          "PBE-5AC-300-ISO",
          "PBE-5AC-400",
          "PBE-5AC-400-ISO",
          "PBE-5AC-500",
          "PBE-5AC-500-ISO",
          "PBE-5AC-620",
          "PBE-5AC-620-ISO",
          "PBE-2AC-400",
          "PBE-2AC-400-ISO",
          "PBE-5AC-X-Gen2",
          "PBE-5AC-Gen2",
          "PBE-5AC-ISO-Gen2",
          "PBE-5AC-400-ISO-Gen2",
          "LBE-5AC-16-120",
          "LAP-120",
          "LBE-5AC-23",
          "LBE-5AC-Gen2",
          "LBE-5AC-LR",
          "LBE-5AC-XR",
          "LBE-AX",
          "LAP-GPS",
          "IS-5AC",
          "PS-5AC",
          "PRI-AX",
          "PAX-OM",
          "SolarSwitch",
          "SolarPoint",
          "BulletAC-IP67",
          "B-DB-AC",
          "AFi-ALN-R",
          "UX",
          "UNKNOWN"
        ]
      }
    },
    "FirmwareIdentification": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "lite": {
          "type": "boolean"
        },
        "models": {
          "$ref": "#/definitions/models"
        },
        "origin": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "enum": [
            "UF_NANOG",
            "UF_LOCO",
            "UF_WIFI",
            "UF_INSTANT",
            "UF_WIFI6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UISP-R-LXC",
            "alpinev2r",
            "alpinev2",
            "mt7621",
            "cn91xxr",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UNMSS",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "UISPFIBEROLTXGS",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "eswh",
            "esgh",
            "ES",
            "esx",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "AF60",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "aflturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SB",
            "UX",
            "UNKNOWN"
          ]
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UISP Fiber NanoG",
            "UISP Fiber Loco",
            "UISP Fiber Wifi",
            "UISP Fiber Instant",
            "UISP Fiber Wifi6",
            "UISP Fiber XG",
            "UISP Fiber XGS",
            "UISP Router LXC",
            "UISPRPro",
            "UISPConsole",
            "UISPR",
            "UISPRPlus",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UNMSS",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "UISPFiberOltXgs",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "AF60",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "lturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SunMax",
            "UX",
            "UNKNOWN"
          ]
        },
        "stable": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "firmwareCompatibility": {
          "type": "string",
          "enum": [
            "obsolete",
            "compatible",
            "prospective",
            "upgradable"
          ]
        }
      }
    },
    "prerelease2": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "alpha",
        "x-alternatives": [
          {
            "type": "string",
            "example": "alpha"
          },
          {
            "type": "number",
            "example": 1
          }
        ]
      }
    },
    "FirmwareSemVer": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number",
          "example": 1
        },
        "minor": {
          "type": "number",
          "example": 10
        },
        "patch": {
          "type": "number",
          "example": 8
        },
        "prerelease": {
          "$ref": "#/definitions/prerelease2"
        },
        "order": {
          "type": "string",
          "example": "65546.8.0"
        },
        "upgradeRecommendedToVersion": {
          "type": "string"
        }
      },
      "required": [
        "major",
        "minor",
        "patch"
      ]
    },
    "FirmwareSupport": {
      "type": "object",
      "properties": {
        "airMaxCustomScripts": {
          "type": "boolean"
        },
        "airMaxAxFirmware": {
          "type": "boolean"
        },
        "UNMS": {
          "type": "boolean"
        }
      }
    },
    "Firmware": {
      "type": "object",
      "properties": {
        "date": {
          "type": "integer",
          "minimum": 0
        },
        "identification": {
          "$ref": "#/definitions/FirmwareIdentification"
        },
        "semver": {
          "$ref": "#/definitions/FirmwareSemVer"
        },
        "size": {
          "type": "number"
        },
        "supports": {
          "$ref": "#/definitions/FirmwareSupport"
        },
        "url": {
          "type": "string"
        }
      }
    },
    "ListOfFirmwares": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Firmware"
      }
    },
    "suspendAllowedIps": {
      "type": "array",
      "description": "Array of IP addresses in IPv4 format that are allowed for suspended clients.",
      "example": [
        [
          "192.168.1.2"
        ]
      ],
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "forbidden"
          }
        }
      }
    },
    "connectivityIpQueue": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "type": "string",
          "description": "Interface name, for example eth0 which handles connectivity to WAN network. If null, speed limits are applied on all interfaces.",
          "example": "eth0"
        },
        "interfaceCurrentSpeed": {
          "type": "string",
          "description": "Gateway's WAN interface current speed",
          "example": "auto",
          "pattern": "^autodetect|auto|\\d+-(half|full)$"
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Max speed given in kbps. If 0 value is configured then ingress traffic for this tariff is blocked. If null, no maximum speed is assumed.",
          "example": 1000,
          "minimum": 0
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Max speed given in kbps. If 0 value is configured then egress traffic for this tariff is blocked. If null, no maximum speed is assumed.",
          "example": 1000,
          "minimum": 0
        },
        "clientsUploadSpeedSum": {
          "type": "integer",
          "description": "Sum of all client sites traffic shaping upload values in kbps.",
          "example": 1000,
          "minimum": 0
        },
        "clientsDownloadSpeedSum": {
          "type": "integer",
          "description": "Sum of all client sites traffic shaping download values in kbps.",
          "example": 1000,
          "minimum": 0
        }
      },
      "required": [
        "interfaceId",
        "downloadSpeed",
        "uploadSpeed"
      ]
    },
    "defaultIpQueue": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable configuration for QoS queue for IPs without any specific queue. The main purpose of this configuration is to block new devices without any active queue. If null, traffic not belonging to any queue is not limited.",
          "example": true,
          "default": false
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Max speed given in kbps. If 0 value is configured then ingress traffic for this tariff is blocked.",
          "example": 1000,
          "minimum": 0
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Max speed given in kbps. If 0 value is configured then egress traffic for this tariff is blocked.",
          "example": 1000,
          "minimum": 0
        }
      }
    },
    "lastSpeedtestServer": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string",
          "description": "Test server url",
          "example": "http://192.168.1.1"
        },
        "city": {
          "type": "string",
          "description": "Test server city",
          "example": "Prague"
        },
        "country": {
          "type": "string",
          "description": "Test server country",
          "example": "Czechia"
        },
        "provider": {
          "type": "string",
          "description": "Test server name",
          "example": "CzechiaProvider.net"
        },
        "latitude": {
          "type": "number",
          "description": "Test server latitude",
          "example": 49.8345584421122,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "description": "Test server longitude",
          "example": 13.46358,
          "minimum": -180,
          "maximum": 180
        },
        "speedMbps": {
          "type": "number",
          "description": "Test server speed in Mbps",
          "example": 1000,
          "minimum": 0
        },
        "countryCode": {
          "type": "string",
          "description": "Test server country code",
          "example": "CZ"
        },
        "providerUrl": {
          "type": "string",
          "description": "Test server provider url",
          "example": "http://www.czechiaprovider.net"
        }
      }
    },
    "statistics1": {
      "type": "object",
      "properties": {
        "outageScore": {
          "type": "number",
          "description": "Outage score",
          "example": 0.5,
          "minimum": 0
        },
        "latency": {
          "type": "number",
          "description": "Gateway latency in ms",
          "example": 5,
          "minimum": 0
        },
        "lastSpeedtestTimestamp": {
          "type": "string",
          "format": "date",
          "description": "Date and time of last speed test",
          "example": "2019-08-22T09:49:24.675Z"
        },
        "lastSpeedtestUpload": {
          "type": "integer",
          "description": "Upload speed in bps",
          "example": 1000,
          "minimum": 0
        },
        "lastSpeedtestDownload": {
          "type": "integer",
          "description": "Download speed in bps",
          "example": 1000,
          "minimum": 0
        },
        "lastSpeedtestLatency": {
          "type": "integer",
          "description": "Latency in ms",
          "example": 10,
          "minimum": 0
        },
        "lastSpeedtestServer": {
          "$ref": "#/definitions/lastSpeedtestServer"
        }
      }
    },
    "device": {
      "type": "object",
      "properties": {
        "features": {
          "$ref": "#/definitions/features"
        },
        "id": {
          "type": "string",
          "description": "Id of gateway device",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "description": "Device name",
          "example": "Main gateway"
        },
        "status": {
          "type": "string",
          "description": "Device status",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom",
            "maintenance",
            "incompatible",
            "unmonitored",
            "unassigned",
            "misconfigured",
            "preregistration"
          ]
        },
        "ipAddress": {
          "type": "string",
          "description": "Device IP address in CIDR format",
          "example": "192.168.1.2/24",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "mac": {
          "type": "string",
          "description": "Device MAC address",
          "example": "78:8a:20:f9:4e:78",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "Device firmware version",
          "example": "2.0.7"
        },
        "platformId": {
          "type": "string",
          "description": "Device platform id",
          "example": "e50"
        },
        "model": {
          "type": "string",
          "description": "Device model",
          "example": "ER-X"
        },
        "type": {
          "type": "string",
          "description": "Device type",
          "example": "erouter"
        },
        "category": {
          "type": "string",
          "description": "Device category",
          "example": "wired",
          "enum": [
            "optical",
            "wired",
            "wireless",
            "accessories"
          ]
        }
      },
      "required": [
        "id",
        "status",
        "mac"
      ]
    },
    "Model10": {
      "type": "object",
      "properties": {
        "netflowEnabled": {
          "type": "boolean",
          "description": "Set to true to enable NetFlow.",
          "example": true
        },
        "netflowAlerts": {
          "type": "boolean",
          "description": "Set to true to enable alerts.",
          "example": true
        },
        "qosEnabled": {
          "type": "boolean",
          "description": "Set to true to enable traffic shaping.",
          "example": true
        },
        "suspend": {
          "type": "boolean",
          "description": "Set to true to enable suspend.",
          "example": true
        },
        "connectivityProvider": {
          "type": "string",
          "description": "Connectivity provider",
          "example": "T-Mobile"
        },
        "connectivityUplinkCapacity": {
          "type": "number",
          "description": "Connectivity uplink capacity in Mbps",
          "example": "500",
          "minimum": 0
        },
        "connectivityDownlinkCapacity": {
          "type": "number",
          "description": "Connectivity downlink capacity in Mbps",
          "example": "500",
          "minimum": 0
        },
        "suspendAllowedIps": {
          "$ref": "#/definitions/suspendAllowedIps"
        },
        "connectivityIpQueue": {
          "$ref": "#/definitions/connectivityIpQueue"
        },
        "defaultIpQueue": {
          "$ref": "#/definitions/defaultIpQueue"
        },
        "forceOverwrite": {
          "type": "boolean",
          "description": "Set to true to force write new NetFlow settings to device over current device's settings.",
          "example": false
        },
        "statistics": {
          "$ref": "#/definitions/statistics1"
        },
        "id": {
          "type": "string",
          "description": "Gateway id",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "lastTrafficSeen": {
          "type": "string",
          "format": "date",
          "description": "Date and time of last traffic in ISO format",
          "example": "2019-08-22T09:49:24.675Z"
        },
        "netflowStatus": {
          "type": "string",
          "description": "Netflow status",
          "example": "inactive",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom",
            "maintenance",
            "incompatible",
            "unmonitored",
            "unassigned",
            "misconfigured",
            "preregistration"
          ]
        },
        "device": {
          "$ref": "#/definitions/device"
        }
      },
      "required": [
        "netflowEnabled",
        "netflowAlerts",
        "qosEnabled",
        "suspend",
        "id",
        "lastTrafficSeen",
        "device"
      ]
    },
    "ListOfGateways": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model10"
      }
    },
    "tags": {
      "type": "array",
      "description": "Log tags.",
      "example": [
        [
          "device",
          "device-state"
        ]
      ],
      "minItems": 0,
      "items": {
        "type": "string",
        "enum": [
          "login",
          "device",
          "email-dispatch",
          "nms-backup",
          "nms-update",
          "nms-error",
          "device-alert-message",
          "device-state",
          "device-backup",
          "device-upgrade",
          "device-restart",
          "device-interface",
          "site",
          "uisp-general",
          "pevice-preregistration"
        ]
      }
    },
    "DeviceIdentification2": {
      "type": "object",
      "description": "Log respective device identification object.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UISP."
        },
        "category": {
          "type": "string",
          "enum": [
            "optical",
            "wired",
            "wireless",
            "accessories"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "UISP device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "udapiVersion": {
          "type": "string",
          "description": "In string format."
        },
        "bridgeVersion": {
          "type": "string",
          "description": "In string format."
        },
        "subsystemId": {
          "type": "string",
          "description": "Device subsystem ID in string format."
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UISP Fiber OLT."
        },
        "systemName": {
          "type": "string",
          "description": "OS",
          "example": "Linux"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "vendorName": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "name": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UISP Fiber NanoG",
            "UISP Fiber Loco",
            "UISP Fiber Wifi",
            "UISP Fiber Instant",
            "UISP Fiber Wifi6",
            "UISP Fiber XG",
            "UISP Fiber XGS",
            "UISP Router LXC",
            "UISPRPro",
            "UISPConsole",
            "UISPR",
            "UISPRPlus",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UNMSS",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "UISPFiberOltXgs",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "AF60",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "lturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SunMax",
            "UX",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "serialNumber": {
          "type": "string"
        },
        "site": {
          "$ref": "#/definitions/site"
        },
        "started": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom",
            "maintenance",
            "incompatible",
            "unmonitored",
            "unassigned",
            "misconfigured",
            "preregistration"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "wanInterfaceId": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "deviceMetadata": {
      "type": "object",
      "description": "Log respective device meta data object.",
      "properties": {
        "alias": {
          "type": "string"
        }
      }
    },
    "site1": {
      "type": "object",
      "description": "Log respective site.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Log respective site id",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "description": "Log respective site name",
          "example": "Site name"
        },
        "parent": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        },
        "status": {
          "type": "string",
          "description": "Site current status",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of site.",
          "example": "client",
          "enum": [
            "site",
            "endpoint",
            "client",
            "subscriber"
          ]
        }
      },
      "required": [
        "id",
        "name",
        "parent"
      ]
    },
    "Model11": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Log item id.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "timestamp": {
          "type": "string",
          "format": "date",
          "description": "Date and time of the log creation.",
          "example": "2020-05-12T10:19:10.056Z"
        },
        "message": {
          "type": "string",
          "description": "Log message",
          "example": "lab-AF5XHD-1 MAC: 78:8a:20:5f:2a:ff, IP: 10.43.21.41 has been removed."
        },
        "level": {
          "type": "string",
          "description": "Log severity level",
          "example": "info",
          "enum": [
            "info",
            "warning",
            "error"
          ]
        },
        "tags": {
          "$ref": "#/definitions/tags"
        },
        "device": {
          "$ref": "#/definitions/DeviceIdentification2"
        },
        "deviceMetadata": {
          "$ref": "#/definitions/deviceMetadata"
        },
        "site": {
          "$ref": "#/definitions/site1"
        }
      },
      "required": [
        "id",
        "timestamp",
        "message",
        "level",
        "tags"
      ]
    },
    "items": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model11"
      }
    },
    "aggregation": {
      "type": "object",
      "properties": {
        "allCount": {
          "type": "integer",
          "minimum": 0
        },
        "infoCount": {
          "type": "integer",
          "minimum": 0
        },
        "warningCount": {
          "type": "integer",
          "minimum": 0
        },
        "errorCount": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "allCount",
        "infoCount",
        "warningCount",
        "errorCount"
      ]
    },
    "pagination": {
      "type": "object",
      "properties": {
        "total": {
          "type": "integer",
          "minimum": 0
        },
        "count": {
          "type": "integer",
          "minimum": 0
        },
        "page": {
          "type": "integer",
          "minimum": 0
        },
        "pages": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "total",
        "count",
        "page",
        "pages"
      ]
    },
    "Model12": {
      "type": "object",
      "properties": {
        "items": {
          "$ref": "#/definitions/items"
        },
        "aggregation": {
          "$ref": "#/definitions/aggregation"
        },
        "pagination": {
          "$ref": "#/definitions/pagination"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "count": {
          "type": "number",
          "description": "Number of items per page"
        },
        "total": {
          "type": "number",
          "description": "Total number of items"
        },
        "page": {
          "type": "number",
          "description": "Ordinal number of page"
        },
        "pages": {
          "type": "number",
          "description": "Total number of pages"
        }
      },
      "required": [
        "count",
        "total",
        "page",
        "pages"
      ]
    },
    "aggregation1": {
      "type": "object",
      "properties": {
        "allCount": {
          "type": "number"
        },
        "outageCount": {
          "type": "number"
        },
        "unreachableCount": {
          "type": "number"
        }
      }
    },
    "parent2": {
      "type": "object"
    },
    "SiteIdentification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "site",
            "endpoint",
            "client",
            "subscriber"
          ]
        },
        "parent": {
          "$ref": "#/definitions/parent2"
        }
      },
      "required": [
        "id",
        "status",
        "name",
        "type"
      ]
    },
    "parent3": {
      "type": "object"
    },
    "site2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "site",
            "endpoint",
            "client",
            "subscriber"
          ]
        },
        "parent": {
          "$ref": "#/definitions/parent3"
        }
      },
      "required": [
        "id",
        "status",
        "name",
        "type"
      ]
    },
    "DeviceOutage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Technical ID only for UISP"
        },
        "firmwareVersion": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "modelName": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string"
        },
        "mac": {
          "type": "string",
          "description": "Available only for clients (ONU)"
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "category": {
          "type": "string",
          "enum": [
            "optical",
            "wired",
            "wireless",
            "accessories"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "site": {
          "$ref": "#/definitions/site2"
        },
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UISP"
        },
        "serialNumber": {
          "type": "string"
        },
        "platformId": {
          "type": "string"
        },
        "platformName": {
          "type": "string"
        },
        "ip": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "id",
        "firmwareVersion",
        "model",
        "modelName",
        "name",
        "displayName",
        "mac",
        "type",
        "category",
        "role",
        "authorized",
        "serialNumber",
        "platformId",
        "platformName",
        "ip"
      ]
    },
    "OutageDeviceMetadata": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string"
        }
      },
      "required": [
        "alias"
      ]
    },
    "children": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Outage": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "startTimestamp": {
          "type": "string"
        },
        "endTimestamp": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "outage",
            "unreachable"
          ]
        },
        "aggregatedTime": {
          "type": "number",
          "minimum": 1
        },
        "inProgress": {
          "type": "boolean"
        },
        "site": {
          "$ref": "#/definitions/SiteIdentification"
        },
        "device": {
          "$ref": "#/definitions/DeviceOutage"
        },
        "deviceMetadata": {
          "$ref": "#/definitions/OutageDeviceMetadata"
        },
        "affectedDevices": {
          "type": "number"
        },
        "children": {
          "$ref": "#/definitions/children"
        }
      },
      "required": [
        "id",
        "startTimestamp",
        "endTimestamp",
        "aggregatedTime",
        "inProgress"
      ]
    },
    "items1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Outage"
      }
    },
    "Outages": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "aggregation": {
          "$ref": "#/definitions/aggregation1"
        },
        "items": {
          "$ref": "#/definitions/items1"
        }
      }
    },
    "parent4": {
      "type": "object"
    },
    "SiteIdentificationDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": [
            "site",
            "endpoint"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        },
        "parent": {
          "$ref": "#/definitions/parent4"
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status"
      ]
    },
    "SiteDescriptionContact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the contact person.",
          "example": "John Smith"
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the contact person."
        },
        "email": {
          "type": "string",
          "description": "Email of the contact person.",
          "example": "email@example.com"
        }
      }
    },
    "SiteDescriptionLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "Site latitude.",
          "example": 86.922623,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Site longitude.",
          "example": 27.986065,
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": [
        "longitude",
        "latitude"
      ]
    },
    "SiteEndpointIdentification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": [
            "site",
            "endpoint"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        },
        "parentId": {
          "type": "string",
          "description": "Parent siteId.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status",
        "parentId"
      ]
    },
    "SiteEndpointsList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SiteEndpointIdentification"
      }
    },
    "ipAddresses": {
      "type": "array",
      "description": "Devices IPs assigned to a site/client site.",
      "items": {
        "type": "string",
        "example": "192.168.10.12",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "SiteDescription": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Nepal"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description."
        },
        "contact": {
          "$ref": "#/definitions/SiteDescriptionContact"
        },
        "location": {
          "$ref": "#/definitions/SiteDescriptionLocation"
        },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 8848
        },
        "endpoints": {
          "$ref": "#/definitions/SiteEndpointsList"
        },
        "deviceCount": {
          "type": "number",
          "description": "Number of devices in this site.",
          "example": 1
        },
        "deviceOutageCount": {
          "type": "number",
          "description": "Number of devices in this site in outage.",
          "example": 1
        },
        "deviceListStatus": {
          "type": "string",
          "description": "Deprecated. Use site.identification.status instead.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM client bound with this site. Null if no UCRM client is bound to this site.",
          "example": "135"
        },
        "ipAddresses": {
          "$ref": "#/definitions/ipAddresses"
        },
        "sla": {
          "type": "number",
          "example": 0.4
        }
      }
    },
    "SiteSpeedReport": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ispName": {
          "type": "string",
          "example": "Czechia ISP - Ostrava"
        },
        "publicIp": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            }
          ]
        },
        "downloadRateBytes": {
          "type": "number",
          "example": 44834803561
        },
        "uploadRateBytes": {
          "type": "number",
          "example": 8385
        },
        "endpoint": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "One of [INTERNET, LOCAL_DEVICE]",
          "example": "INTERNET"
        },
        "serverName": {
          "type": "string",
          "example": "uisp.com"
        },
        "downloadSpeedBytes": {
          "type": "number",
          "example": 125000000
        },
        "uploadSpeedBytes": {
          "type": "number",
          "example": 625000000
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "platform": {
          "type": "string",
          "example": "Web"
        },
        "model": {
          "type": "string",
          "example": "iPhone X"
        },
        "system": {
          "type": "string",
          "example": "iOS"
        },
        "vendor": {
          "type": "string",
          "example": "Apple"
        }
      }
    },
    "Model13": {
      "type": "object",
      "description": "Users who will receive notifications. Notification type must be set to custom.",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "x-format": {
            "email": true
          }
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "users": {
      "type": "array",
      "minItems": 0,
      "items": {
        "$ref": "#/definitions/Model13"
      }
    },
    "SiteNotifications": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "What notification system is used by this site.",
          "example": "system",
          "enum": [
            "system",
            "custom",
            "none"
          ]
        },
        "users": {
          "$ref": "#/definitions/users"
        }
      },
      "required": [
        "type",
        "users"
      ]
    },
    "SiteTrafficShaping": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE if optional Traffic Shaping queue are activated.",
          "example": true
        },
        "propagation": {
          "type": "string",
          "description": "\n      Whether or not set Traffic Shaping on Client devices like, CPEs and ONUs.\n      Enabling this will lower your traffic in local network.\n    ",
          "enum": [
            "all",
            "gateway"
          ]
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Download speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "downloadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at downloadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Upload speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "uploadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at uploadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "aggregation": {
          "type": "integer",
          "description": "\n      Number indicating how many times the guaranteed rate is less than the maximum allowed bandwidth.\n      Null for auto calculation by UISP.\n    ",
          "example": 2,
          "minimum": 1,
          "maximum": 10000
        }
      },
      "required": [
        "enabled",
        "downloadSpeed",
        "downloadBurstSize",
        "uploadSpeed",
        "uploadBurstSize",
        "aggregation"
      ]
    },
    "client": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "123"
        },
        "name": {
          "type": "string",
          "description": "CRM client's name.",
          "example": "John Smith"
        },
        "isLead": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "discount": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "description": "Discount value.",
          "example": 299
        },
        "type": {
          "type": "string",
          "description": "Type of discount value.",
          "example": "Percent discount"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      },
      "required": [
        "value",
        "type"
      ]
    },
    "Model14": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "invoiceLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priceMonth1": {
          "type": "number"
        },
        "priceMonth2": {
          "type": "number"
        },
        "priceMonth3": {
          "type": "number"
        },
        "priceMonth6": {
          "type": "number"
        },
        "priceMonth12": {
          "type": "number"
        },
        "priceMonth24": {
          "type": "number"
        },
        "pricePerDay": {
          "type": "number"
        },
        "taxId": {
          "type": "number"
        },
        "taxable": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name",
        "taxable"
      ]
    },
    "surcharges": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model14"
      }
    },
    "service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "123"
        },
        "name": {
          "type": "string",
          "description": "Service name.",
          "example": "Building B"
        },
        "status": {
          "type": "number",
          "description": "Service status.",
          "example": 7,
          "enum": [0, 1, 2, 3, 4, 5, 6, 7]
        },
        "activeFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the service was activated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "tariffId": {
          "type": "string",
          "description": "ID of the tariff (service plan) used for this service.",
          "example": "1"
        },
        "trafficShapingOverrideEnabled": {
          "type": "boolean",
          "description": "Whether traffic shaping is overridden for this client.",
          "example": false
        },
        "totalPrice": {
          "type": "number",
          "description": "Service total price.",
          "example": 133
        },
        "currencyCode": {
          "type": "string",
          "example": "USD"
        },
        "servicePlanPeriod": {
          "type": "number",
          "description": "Pricing period in months.",
          "example": 1
        },
        "discount": {
          "$ref": "#/definitions/discount"
        },
        "surcharges": {
          "$ref": "#/definitions/surcharges"
        }
      },
      "required": [
        "id",
        "name",
        "status",
        "activeFrom",
        "tariffId",
        "trafficShapingOverrideEnabled"
      ]
    },
    "SiteUcrmChangeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "123"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the change request was created.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "serviceId": {
          "type": "number",
          "description": "ID of the service.",
          "example": 1
        },
        "targetServicePlanPeriodId": {
          "type": "number",
          "description": "ID of the target service plan.",
          "example": 1
        }
      },
      "required": [
        "id",
        "createdDate",
        "serviceId",
        "targetServicePlanPeriodId"
      ]
    },
    "periods": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/validation",
        "x-alternatives": [
          {
            "$ref": "#/x-alt-definitions/parent"
          },
          {
            "$ref": "#/x-alt-definitions/addressComponents"
          }
        ]
      }
    },
    "prepaidConfiguration": {
      "type": "object",
      "properties": {
        "pricePerDay": {
          "type": "number"
        }
      }
    },
    "Model15": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "servicePlanGroups": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model15"
      }
    },
    "SiteUcrmTargetService": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "CRM target service ID.",
          "example": 9
        },
        "servicePlanType": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "CRM target service name.",
          "example": "New target service"
        },
        "invoiceLabel": {
          "type": "string",
          "description": "Label for invoice.",
          "example": "Label l.t.d."
        },
        "downloadBurst": {
          "type": "number"
        },
        "uploadBurst": {
          "type": "number"
        },
        "downloadSpeed": {
          "type": "number",
          "description": "Service plan download speed.",
          "example": 299
        },
        "uploadSpeed": {
          "type": "number",
          "description": "Service plan upload speed.",
          "example": 299
        },
        "aggregation": {
          "type": "number"
        },
        "dataUsageLimit": {
          "type": "number"
        },
        "organizationId": {
          "type": "number",
          "description": "ID of organization.",
          "example": 9
        },
        "taxable": {
          "type": "boolean"
        },
        "taxId": {
          "type": "number"
        },
        "amountExemptFromTaxation": {
          "type": "number"
        },
        "setupFee": {
          "type": "number"
        },
        "earlyTerminationFee": {
          "type": "number"
        },
        "minimumContractLengthMonths": {
          "type": "number"
        },
        "periods": {
          "$ref": "#/definitions/periods"
        },
        "public": {
          "type": "boolean"
        },
        "prepaid": {
          "type": "boolean"
        },
        "prepaidConfiguration": {
          "$ref": "#/definitions/prepaidConfiguration"
        },
        "servicePlanGroups": {
          "$ref": "#/definitions/servicePlanGroups"
        },
        "defaultServicePlanGroupId": {
          "type": "string"
        },
        "uploadSpeedLimited": {
          "type": "number"
        },
        "downloadSpeedLimited": {
          "type": "number"
        },
        "currencyCode": {
          "type": "string"
        },
        "archived": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "servicePlanType",
        "name",
        "downloadSpeed",
        "uploadSpeed",
        "organizationId",
        "taxable",
        "public",
        "prepaid",
        "currencyCode"
      ]
    },
    "SiteUcrmDescription": {
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/definitions/client"
        },
        "service": {
          "$ref": "#/definitions/service"
        },
        "changeRequest": {
          "$ref": "#/definitions/SiteUcrmChangeRequest"
        },
        "targetService": {
          "$ref": "#/definitions/SiteUcrmTargetService"
        }
      }
    },
    "Site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "identification": {
          "$ref": "#/definitions/SiteIdentificationDetail"
        },
        "description": {
          "$ref": "#/definitions/SiteDescription"
        },
        "lastSpeedReport": {
          "$ref": "#/definitions/SiteSpeedReport"
        },
        "notifications": {
          "$ref": "#/definitions/SiteNotifications"
        },
        "qos": {
          "$ref": "#/definitions/SiteTrafficShaping"
        },
        "ucrm": {
          "$ref": "#/definitions/SiteUcrmDescription"
        },
        "isMisconfigured": {
          "type": "boolean",
          "description": "Set to true if site is misconfigured",
          "example": true
        }
      },
      "required": [
        "identification",
        "description",
        "notifications",
        "qos"
      ]
    },
    "SitesList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Site"
      }
    },
    "SpeedTestObject": {
      "type": "object",
      "properties": {
        "direction": {
          "type": "string",
          "enum": [
            "uplink",
            "downlink",
            "bidirectional"
          ]
        },
        "resultIndex": {
          "type": "number"
        },
        "speed": {
          "type": "number"
        },
        "speedTestId": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "timestamp": {
          "type": "number"
        }
      },
      "required": [
        "direction",
        "resultIndex",
        "speed",
        "speedTestId",
        "timestamp"
      ]
    },
    "data": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SpeedTestObject"
      }
    },
    "SpeedTest": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/data"
        },
        "masterId": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "slaveId": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "speedTestId": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "timeLimit": {
          "type": "number"
        },
        "timestamp": {
          "type": "number"
        }
      },
      "required": [
        "masterId",
        "slaveId",
        "speedTestId",
        "timestamp"
      ]
    },
    "ListOfSpeedTests": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SpeedTest"
      }
    },
    "TaskAggregation": {
      "type": "object",
      "properties": {
        "queued": {
          "type": "integer",
          "minimum": 0
        },
        "in-progress": {
          "type": "integer",
          "minimum": 0
        },
        "success": {
          "type": "integer",
          "minimum": 0
        },
        "failed": {
          "type": "integer",
          "minimum": 0
        },
        "canceled": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "identification2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "tasks": {
      "type": "object",
      "properties": {
        "canceled": {
          "type": "integer",
          "minimum": 0
        },
        "failed": {
          "type": "integer",
          "minimum": 0
        },
        "inProgress": {
          "type": "integer",
          "minimum": 0
        },
        "queued": {
          "type": "integer",
          "minimum": 0
        },
        "successful": {
          "type": "integer",
          "minimum": 0
        },
        "total": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "TaskItem": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification2"
        },
        "startTimestamp": {
          "type": "integer",
          "minimum": 0
        },
        "endTimestamp": {
          "type": "integer",
          "minimum": 0
        },
        "progress": {
          "type": "number",
          "minimum": 0
        },
        "status": {
          "type": "string",
          "example": "success"
        },
        "tasks": {
          "$ref": "#/definitions/tasks"
        }
      }
    },
    "ListOfTaskItems": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/TaskItem"
      }
    },
    "Task": {
      "type": "object",
      "properties": {
        "pagination": {
          "$ref": "#/definitions/Pagination"
        },
        "aggregation": {
          "$ref": "#/definitions/TaskAggregation"
        },
        "items": {
          "$ref": "#/definitions/ListOfTaskItems"
        }
      }
    },
    "scope": {
      "type": "array",
      "description": "Authorization scope of this token.",
      "example": [
        [
          "admin"
        ]
      ],
      "items": {
        "type": "string"
      }
    },
    "user": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "Id of the user this token represents.",
          "example": "261aa95a-0270-4416-894a-616a0cecedbb"
        },
        "username": {
          "type": "string",
          "description": "User name of the user this token represents.",
          "example": "JohnDoe"
        }
      },
      "required": [
        "userId"
      ]
    },
    "Model16": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "description": "IP address that used this token.",
          "example": "127.0.0.1",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "firstSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was first used from this IP.",
          "example": "2011-10-03T14:48:00.000Z"
        },
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was last used from this IP.",
          "example": "2011-10-03T14:48:00.000Z"
        }
      },
      "required": [
        "ip",
        "firstSeen",
        "lastSeen"
      ]
    },
    "ips": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model16"
      }
    },
    "TokenSchema": {
      "type": "object",
      "description": "Information about token.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Token ID, not the token itself.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "description": "Human readable token name.",
          "example": "Mobile App"
        },
        "lastIp": {
          "type": "string",
          "description": "IP address that last used this token.",
          "example": "127.0.0.1",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was created.",
          "example": "2011-10-03T14:48:00.000Z"
        },
        "lastUsed": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was last used. If null then it has not been used yet.",
          "example": "2011-10-04T14:48:00.000Z"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token will expire unless it is renewed. If null than it will never expire.",
          "example": "2011-10-05T14:48:00.000Z"
        },
        "maxExpiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Latest time when the token will expire. If null then it will never expire.",
          "example": "2011-11-05T14:48:00.000Z"
        },
        "scope": {
          "$ref": "#/definitions/scope"
        },
        "userId": {
          "type": "string",
          "description": "Id of the user this token represents. Null if the token is not bound to any user.",
          "example": "261aa95a-0270-4416-894a-616a0cecedbb"
        },
        "user": {
          "$ref": "#/definitions/user"
        },
        "transient": {
          "type": "boolean",
          "description": "If true then the token will be deleted when server restarts.",
          "example": false
        },
        "currentSession": {
          "type": "boolean",
          "description": "If true than this token was used in this request.",
          "example": false
        },
        "meta": {
          "type": "string",
          "description": "Token metadata.",
          "example": ""
        },
        "allIpsCount": {
          "type": "number",
          "description": "Total number of different IP addresses this token has been used from.",
          "example": 3
        },
        "ips": {
          "$ref": "#/definitions/ips"
        }
      },
      "required": [
        "id",
        "name",
        "lastIp",
        "createdAt",
        "lastUsed",
        "expiresAt",
        "maxExpiresAt",
        "scope",
        "transient",
        "currentSession",
        "allIpsCount"
      ]
    },
    "TokenListSchema": {
      "type": "array",
      "description": "List of tokens.",
      "items": {
        "$ref": "#/definitions/TokenSchema"
      }
    },
    "outage": {
      "type": "object",
      "properties": {
        "email": {
          "type": "boolean"
        },
        "push": {
          "type": "boolean"
        }
      }
    },
    "User push notifications settings object.": {
      "type": "object",
      "properties": {
        "outage": {
          "$ref": "#/definitions/outage"
        },
        "power-source-error": {
          "$ref": "#/definitions/outage"
        },
        "gateway-netflow-error": {
          "$ref": "#/definitions/outage"
        },
        "dfs-channel-change": {
          "$ref": "#/definitions/outage"
        }
      }
    },
    "tableConfig": {
      "type": "object"
    },
    "mapConfig": {
      "type": "object",
      "properties": {
        "showClientSites": {
          "type": "boolean"
        }
      }
    },
    "preferences": {
      "type": "object"
    },
    "UserLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.8345584421122,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.46358,
          "minimum": -180,
          "maximum": 180
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the location was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "latitude",
        "longitude",
        "updated"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "example": "admin"
        },
        "email": {
          "type": "string",
          "example": "email@example.com",
          "x-format": {
            "email": true
          }
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "imageUrl": {
          "type": "string"
        },
        "alerts": {
          "type": "boolean"
        },
        "notification": {
          "$ref": "#/definitions/User%20push%20notifications%20settings%20object."
        },
        "totpAuthEnabled": {
          "type": "boolean"
        },
        "isSsoLoginEnabled": {
          "type": "boolean"
        },
        "isLocalLoginEnabled": {
          "type": "boolean"
        },
        "isOfflinePasswordsGenerated": {
          "type": "boolean"
        },
        "role": {
          "type": "string",
          "description": "Role of this user in UISP. 'anonymous' if user is only allowed to access CRM.",
          "example": "admin",
          "enum": [
            "superadmin",
            "admin",
            "guest",
            "anonymous",
            "installer"
          ]
        },
        "presentationMode": {
          "type": "boolean",
          "description": "Obsolete.",
          "example": false
        },
        "forceChangePassword": {
          "type": "boolean"
        },
        "tableConfig": {
          "$ref": "#/definitions/tableConfig"
        },
        "mapConfig": {
          "$ref": "#/definitions/mapConfig"
        },
        "preferences": {
          "$ref": "#/definitions/preferences"
        },
        "lastLogItemId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/UserLocation"
        },
        "sessionTimeout": {
          "type": "integer",
          "description": "Session expiration in milliseconds, max 30 days.",
          "example": 3600000,
          "minimum": 1
        },
        "keepMeSignedIn": {
          "type": "boolean",
          "description": "Whether session should be cleared when browser window is closed.",
          "example": true
        },
        "lastNewsSeenDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last news check time in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "lastReleaseNotesSeen": {
          "type": "string",
          "description": "Last seen version of release notes.",
          "example": "1.0.0-alpha"
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM user that is bound with this user.",
          "example": "123"
        },
        "ucrmRole": {
          "type": "string",
          "description": "Role of this user in UCRM. 'null' if user is not allowed to access UCRM.",
          "example": "1"
        },
        "homeScreen": {
          "type": "string",
          "description": "Where should the user be redirected after login.",
          "example": "/nms",
          "enum": [
            "/nms",
            "/crm"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the user can log in or not.",
          "example": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the user was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "alerts",
        "notification",
        "isSsoLoginEnabled",
        "isLocalLoginEnabled",
        "isOfflinePasswordsGenerated",
        "forceChangePassword",
        "location",
        "keepMeSignedIn",
        "lastNewsSeenDate",
        "lastReleaseNotesSeen",
        "ucrmId",
        "ucrmRole",
        "homeScreen",
        "enabled",
        "updated"
      ]
    },
    "UserList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/User",
        "x-alternatives": [
          {
            "$ref": "#/x-alt-definitions/User"
          },
          {
            "$ref": "#/x-alt-definitions/SsoUserSchema"
          }
        ]
      }
    },
    "SiteAccessGroupSingleSite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "isReadOnly": {
          "type": "boolean",
          "description": "If true, access to site is read-only. If false, access to site is read-write.",
          "example": true
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Building B"
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "endpoint",
          "enum": [
            "site",
            "endpoint",
            "client",
            "subscriber"
          ]
        }
      },
      "required": [
        "id",
        "isReadOnly",
        "name",
        "type"
      ]
    },
    "whitelist": {
      "type": "array",
      "description": "List of accessible sites.",
      "items": {
        "$ref": "#/definitions/SiteAccessGroupSingleSite"
      }
    },
    "site3": {
      "type": "object",
      "properties": {
        "all": {
          "type": "number",
          "description": "Number of sites with read access.",
          "example": 4
        },
        "readOnly": {
          "type": "number",
          "description": "Number of sites with read-only access.",
          "example": 1
        },
        "readWrite": {
          "type": "number",
          "description": "Number of sites with read-write access.",
          "example": 3
        }
      },
      "required": [
        "all",
        "readOnly",
        "readWrite"
      ]
    },
    "endpoint": {
      "type": "object",
      "properties": {
        "all": {
          "type": "number",
          "description": "Number of client sites with read access.",
          "example": 3
        },
        "readOnly": {
          "type": "number",
          "description": "Number of client sites with read-only access.",
          "example": 1
        },
        "readWrite": {
          "type": "number",
          "description": "Number of client sites with read-write access.",
          "example": 2
        }
      },
      "required": [
        "all",
        "readOnly",
        "readWrite"
      ]
    },
    "user1": {
      "type": "object",
      "properties": {
        "all": {
          "type": "number",
          "description": "Number of users using this access group.",
          "example": 1
        }
      },
      "required": [
        "all"
      ]
    },
    "counts": {
      "type": "object",
      "properties": {
        "site": {
          "$ref": "#/definitions/site3"
        },
        "endpoint": {
          "$ref": "#/definitions/endpoint"
        },
        "user": {
          "$ref": "#/definitions/user1"
        }
      }
    },
    "SiteAccessGroup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Access group id.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "example": "Section 1",
          "maxLength": 100
        },
        "isAuto": {
          "type": "boolean",
          "description": "If true the access group is automatically generated and cannot be edited.",
          "example": false
        },
        "isInternal": {
          "type": "boolean",
          "description": "If true the access group is internal. User should not be able to select it",
          "example": false
        },
        "whitelist": {
          "$ref": "#/definitions/whitelist"
        },
        "counts": {
          "$ref": "#/definitions/counts"
        }
      },
      "required": [
        "name",
        "isAuto",
        "isInternal"
      ]
    },
    "SiteAccessGroupList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SiteAccessGroup"
      }
    },
    "CrmRoleSchema": {
      "type": "object",
      "description": "CRM user role.",
      "properties": {
        "id": {
          "type": "string",
          "description": "CRM user role id.",
          "example": "1"
        },
        "name": {
          "type": "string",
          "description": "Role name.",
          "example": "Admin Group"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "CrmRoleListSchema": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CrmRoleSchema"
      }
    },
    "CrmServicePlanSchema": {
      "type": "object",
      "description": "CRM service plan.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of the service plan.",
          "example": "1"
        },
        "name": {
          "type": "string",
          "description": "Name of the service plan.",
          "example": "Default"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "CrmServicePlanListSchema": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/CrmServicePlanSchema"
      }
    },
    "ignoredModels": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "paths": {
      "type": "object",
      "properties": {
        "s": {
          "type": "string"
        },
        "s-2x": {
          "type": "string"
        },
        "m": {
          "type": "string"
        },
        "m-2x": {
          "type": "string"
        },
        "l": {
          "type": "string"
        },
        "l-2x": {
          "type": "string"
        }
      }
    },
    "Model17": {
      "type": "object",
      "properties": {
        "model": {
          "type": "string"
        },
        "paths": {
          "$ref": "#/definitions/paths"
        }
      }
    },
    "models1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model17"
      }
    },
    "size": {
      "type": "object",
      "properties": {
        "width": {
          "type": "number"
        },
        "height": {
          "type": "number"
        }
      }
    },
    "Model18": {
      "type": "object",
      "properties": {
        "filename": {
          "type": "string"
        },
        "format": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "size": {
          "$ref": "#/definitions/size"
        }
      }
    },
    "sizes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model18"
      }
    },
    "DeviceImageInfo": {
      "type": "object",
      "properties": {
        "ignoredModels": {
          "$ref": "#/definitions/ignoredModels"
        },
        "models": {
          "$ref": "#/definitions/models1"
        },
        "sizes": {
          "$ref": "#/definitions/sizes"
        }
      }
    },
    "Model19": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ticket": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "Model20": {
      "type": "object",
      "properties": {
        "isSecure": {
          "type": "boolean",
          "description": "True if IP address exists on a device."
        },
        "ticket": {
          "$ref": "#/definitions/ticket"
        }
      }
    },
    "Model21": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "DeviceOnu": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 8
        },
        "wanAddress": {
          "type": "string"
        },
        "rxRate": {
          "type": "number"
        },
        "txRate": {
          "type": "number"
        },
        "transmitPower": {
          "type": "number"
        },
        "receivePower": {
          "type": "number"
        },
        "connectionTime": {
          "type": "number"
        },
        "experience": {
          "type": "number"
        },
        "mode": {
          "type": "string"
        }
      }
    },
    "Onu": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        },
        "onu": {
          "$ref": "#/definitions/DeviceOnu"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "ListOfOnuDevices": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Onu"
      }
    },
    "DeviceSsid": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "mac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "key": {
          "type": "string",
          "description": "Pre shared key"
        },
        "deviceId": {
          "type": "string",
          "description": "Device id",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "ssid",
        "mac",
        "key",
        "deviceId"
      ]
    },
    "DeviceSsidList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeviceSsid"
      }
    },
    "UnknownDevice": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "IP address of the unknown device.",
          "example": "192.168.23.12",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "firstSeen": {
          "type": "string",
          "format": "date-time",
          "description": "First time this IP address was seen as a ISO 8601.",
          "example": "2011-10-05T14:48:00.000Z"
        },
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Last time this IP address was seen as a ISO 8601.",
          "example": "2012-10-05T14:48:00.000Z"
        },
        "upload": {
          "type": "number",
          "description": "Total number of bytes uploaded by this IP address.",
          "example": 1006051
        },
        "download": {
          "type": "number",
          "description": "Total number of bytes downloaded by this IP address.",
          "example": 986305
        }
      },
      "required": [
        "address",
        "firstSeen",
        "lastSeen",
        "upload",
        "download"
      ]
    },
    "UnknownDevicesList": {
      "type": "array",
      "description": "List of unknown devices.",
      "items": {
        "$ref": "#/definitions/UnknownDevice"
      }
    },
    "DeviceSchema": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "upload": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "description": "current upload speeds of a gateway or sum of all gateways' current upload speeds in bps",
          "example": 1000,
          "minimum": 0
        },
        "peak": {
          "type": "integer",
          "description": "maximum upload speed during last 24-hour of a gateway or of all all gateways in bps",
          "example": 1000,
          "minimum": 0
        }
      },
      "required": [
        "current",
        "peak"
      ]
    },
    "download": {
      "type": "object",
      "properties": {
        "current": {
          "type": "integer",
          "description": "current download speeds of a gateway or sum of all gateways' current download speeds in bps",
          "example": 1000,
          "minimum": 0
        },
        "peak": {
          "type": "integer",
          "description": "maximum download speed during last 24-hour of a gateway or of all all gateways in bps",
          "example": 1000,
          "minimum": 0
        }
      },
      "required": [
        "current",
        "peak"
      ]
    },
    "Model22": {
      "type": "object",
      "description": "gatewaySpeedSchema",
      "properties": {
        "upload": {
          "$ref": "#/definitions/upload"
        },
        "download": {
          "$ref": "#/definitions/download"
        }
      }
    },
    "prerelease3": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "alpha",
        "x-alternatives": [
          {
            "type": "string",
            "example": "alpha"
          },
          {
            "type": "number",
            "example": 1
          }
        ]
      }
    },
    "unmsVersion": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number",
          "example": 1
        },
        "minor": {
          "type": "number",
          "example": 10
        },
        "patch": {
          "type": "number",
          "example": 8
        },
        "prerelease": {
          "$ref": "#/definitions/prerelease3"
        },
        "order": {
          "type": "string",
          "example": "65546.8.0"
        },
        "upgradeRecommendedToVersion": {
          "type": "string"
        }
      },
      "required": [
        "major",
        "minor",
        "patch"
      ]
    },
    "UispBackup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "state": {
          "type": "string",
          "enum": [
            "success",
            "in-progress",
            "failed"
          ]
        },
        "unmsVersion": {
          "$ref": "#/definitions/unmsVersion"
        },
        "compatible": {
          "type": "boolean",
          "description": "Flag if the backup is compatible with current UISP version."
        },
        "size": {
          "type": "integer",
          "description": "Size in bytes.",
          "x-constraint": {
            "sign": "positive"
          }
        },
        "origin": {
          "type": "string",
          "enum": [
            "auto",
            "manual"
          ]
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "microSdStatus": {
          "type": "string",
          "description": "Micro SD backup sync status. Applicable to UISP Console."
        }
      },
      "required": [
        "id",
        "state",
        "unmsVersion",
        "compatible",
        "size",
        "origin",
        "createdAt"
      ]
    },
    "UispBackupList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UispBackup"
      }
    },
    "discoveryBlacklist": {
      "type": "array",
      "description": "IP addresses or subnets blacklisted in Discovery.",
      "example": [
        [
          "10.8.9.0/24"
        ]
      ],
      "minItems": 0,
      "x-constraint": {
        "unique": true
      },
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "deviceTransmissionFrequencies": {
      "type": "object",
      "properties": {
        "router": {
          "type": "string",
          "enum": [
            "minimal",
            "low",
            "medium",
            "high",
            "realtime"
          ]
        },
        "switch": {
          "type": "string",
          "enum": [
            "minimal",
            "low",
            "medium",
            "high",
            "realtime"
          ]
        },
        "gpon": {
          "type": "string",
          "enum": [
            "minimal",
            "low",
            "medium",
            "high",
            "realtime"
          ]
        },
        "ap": {
          "type": "string",
          "enum": [
            "minimal",
            "low",
            "medium",
            "high",
            "realtime"
          ]
        },
        "station": {
          "type": "string",
          "enum": [
            "minimal",
            "low",
            "medium",
            "high",
            "realtime"
          ]
        },
        "other": {
          "type": "string",
          "enum": [
            "minimal",
            "low",
            "medium",
            "high",
            "realtime"
          ]
        },
        "ups": {
          "type": "string",
          "enum": [
            "minimal",
            "low",
            "medium",
            "high",
            "realtime"
          ]
        }
      },
      "required": [
        "router",
        "switch",
        "gpon",
        "ap",
        "station",
        "other",
        "ups"
      ]
    },
    "autoUpdatePlatforms": {
      "type": "object"
    },
    "NmsSettings": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "example": "Europe/Prague",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Ciudad_Juarez",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Nuuk",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Qatar",
            "Asia/Qostanay",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Kyiv",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kanton",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "homePage": {
          "type": "string",
          "example": "unms",
          "enum": [
            "unms",
            "ucrm"
          ]
        },
        "hostname": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "autoBackups": {
          "type": "boolean",
          "example": true
        },
        "deviceAutoBackups": {
          "type": "boolean",
          "example": true
        },
        "discoveryAutoConfiguration": {
          "type": "boolean",
          "example": true
        },
        "discoveryAllowUnsecuredChannels": {
          "type": "boolean",
          "example": false
        },
        "discoveryAllowLocalScan": {
          "type": "boolean",
          "example": false
        },
        "discoveryAllowRemoteScan": {
          "type": "boolean",
          "example": false
        },
        "discoverySnmpCommunity": {
          "type": "string",
          "example": "public"
        },
        "discoveryHideBlackBox": {
          "type": "boolean",
          "example": false
        },
        "discoveryNotification": {
          "type": "boolean",
          "example": true
        },
        "discoveryBlacklist": {
          "$ref": "#/definitions/discoveryBlacklist"
        },
        "mapsProvider": {
          "type": "string",
          "example": "OpenStreetMap",
          "enum": [
            "GoogleMaps",
            "OpenStreetMap"
          ]
        },
        "googleMapsApiKey": {
          "type": "string"
        },
        "devicePingAddressMode": {
          "type": "string",
          "enum": [
            "auto",
            "custom"
          ]
        },
        "devicePingAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional"
                }
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 30000,
          "minimum": 10000,
          "maximum": 300000
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 5000,
          "minimum": 2000,
          "maximum": 300000
        },
        "useLetsEncrypt": {
          "type": "boolean",
          "example": true
        },
        "allowLoggingToSentry": {
          "type": "boolean",
          "example": true
        },
        "allowLoggingToLogentries": {
          "type": "boolean",
          "example": true
        },
        "deviceTransmissionProfile": {
          "type": "string",
          "example": "auto",
          "enum": [
            "auto",
            "custom"
          ]
        },
        "deviceTransmissionFrequencies": {
          "$ref": "#/definitions/deviceTransmissionFrequencies"
        },
        "defaultGracePeriod": {
          "type": "integer",
          "example": 30000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "restartGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "upgradeGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "outageMailablePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 0,
          "maximum": 86400000
        },
        "dateFormat": {
          "type": "string",
          "example": "D MMM YYYY",
          "enum": [
            "D MMM YYYY",
            "Do MMM YYYY",
            "DD MMM YYYY",
            "MMM D, YYYY",
            "MMM Do, YYYY",
            "MMM DD, YYYY",
            "YYYY-MM-DD",
            "DD-MM-YYYY",
            "D.M.YYYY",
            "DD.MM.YYYY",
            "D/M/YYYY",
            "DD/MM/YYYY",
            "M/D/YYYY",
            "MM/DD/YYYY"
          ]
        },
        "timeFormat": {
          "type": "string",
          "example": "h:mm a",
          "enum": [
            "H:mm",
            "h:mm a"
          ]
        },
        "allowAutoUpdateUbntFirmwares": {
          "type": "boolean",
          "example": true
        },
        "allowBetaFirmwares": {
          "type": "boolean",
          "example": false
        },
        "deviceUpdateNotification": {
          "type": "boolean",
          "example": false
        },
        "ucrmEnabled": {
          "type": "boolean",
          "example": false
        },
        "isIsp": {
          "type": "boolean",
          "example": true
        },
        "country": {
          "type": "string",
          "example": "CZ",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "deviceNumberOfBackups": {
          "type": "integer",
          "example": 30,
          "minimum": 1,
          "maximum": 100
        },
        "tableDensity": {
          "type": "string"
        },
        "trafficShapingAdjustment": {
          "type": "integer",
          "example": 5,
          "minimum": 1,
          "maximum": 100
        },
        "defaultQosPropagation": {
          "type": "string",
          "enum": [
            "all",
            "gateway"
          ]
        },
        "migrationModeEnabled": {
          "type": "boolean",
          "description": "When true all new device connections and connected devices will change UISP Key.",
          "example": false
        },
        "migrationForceModeEnabled": {
          "type": "boolean",
          "description": "When true reachability check will be skipped.",
          "example": false
        },
        "migrationWithBackupEnabled": {
          "type": "boolean",
          "description": "When false UISP Key must be present.",
          "example": false
        },
        "migrationUispKey": {
          "type": "string",
          "description": "UISP Key.",
          "example": "example.com"
        },
        "migrationHostname": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "migrationPort": {
          "type": "integer",
          "description": "UISP port to migrate to.",
          "minimum": 1,
          "maximum": 65535
        },
        "maintenanceWindowFromTime": {
          "type": "integer",
          "description": "Hour when maintenance window start.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowToTime": {
          "type": "integer",
          "description": "Hour when maintenance window end.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowFriday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowMonday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSaturday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSunday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowThursday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowTuesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowWednesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "parallelUpgradeLimit": {
          "type": "integer",
          "description": "Maximum number of devices that can be upgraded in parallel",
          "minimum": 1,
          "maximum": 100
        },
        "wifiManIsEnabled": {
          "type": "boolean"
        },
        "wifiManUrlAddressForSpeedTest": {
          "type": "string",
          "example": "https://my-uisp.com",
          "x-format": {
            "uri": {
              "scheme": [
                "https",
                "http"
              ]
            }
          }
        },
        "allowNewDashboard": {
          "type": "boolean",
          "example": false
        },
        "allowNewDevices": {
          "type": "boolean",
          "description": "Set to true to show alpha version of devices screen",
          "example": false
        },
        "allowNewFirmware": {
          "type": "boolean",
          "description": "Set to true to show alpha version of firmware upgrade screen",
          "example": false
        },
        "allowNewStatistics": {
          "type": "boolean",
          "description": "Set to true to show alpha version of statistics overview screen",
          "example": false
        },
        "autoUpdatePlatforms": {
          "$ref": "#/definitions/autoUpdatePlatforms"
        },
        "instanceId": {
          "type": "string",
          "example": "19d4d42a-fac8-4076-b47e-fc0540fdc715",
          "x-format": {
            "guid": true
          }
        },
        "letsEncryptError": {
          "type": "string"
        },
        "letsEncryptTimestamp": {
          "type": "number",
          "example": 1542206387
        },
        "isSetupSurveyAnswered": {
          "type": "boolean",
          "example": true
        },
        "serverMac": {
          "type": "string",
          "example": "60:a0:de:1b:7e:5c"
        },
        "allowUnmsBetaVersion": {
          "type": "boolean",
          "description": "When true UISP will look for latest UISP version among beta releases.",
          "example": false
        },
        "setupStartedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the setup started.",
          "example": "2019-02-07T10:18:01.000Z"
        },
        "setupFinishedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the setup finished.",
          "example": "2019-02-07T10:18:01.000Z"
        }
      },
      "required": [
        "timezone",
        "homePage",
        "hostname",
        "autoBackups",
        "deviceAutoBackups",
        "discoveryAutoConfiguration",
        "discoveryAllowUnsecuredChannels",
        "discoveryAllowLocalScan",
        "discoveryAllowRemoteScan",
        "discoverySnmpCommunity",
        "discoveryHideBlackBox",
        "discoveryNotification",
        "mapsProvider",
        "googleMapsApiKey",
        "devicePingAddressMode",
        "devicePingAddress",
        "devicePingIntervalNormal",
        "devicePingIntervalOutage",
        "useLetsEncrypt",
        "allowLoggingToSentry",
        "allowLoggingToLogentries",
        "deviceTransmissionProfile",
        "deviceTransmissionFrequencies",
        "defaultGracePeriod",
        "restartGracePeriod",
        "upgradeGracePeriod",
        "outageMailablePeriod",
        "dateFormat",
        "timeFormat",
        "allowAutoUpdateUbntFirmwares",
        "allowBetaFirmwares",
        "ucrmEnabled",
        "isIsp",
        "country",
        "defaultQosPropagation",
        "migrationModeEnabled",
        "migrationForceModeEnabled",
        "migrationWithBackupEnabled",
        "migrationUispKey",
        "migrationHostname",
        "migrationPort",
        "instanceId",
        "letsEncryptError",
        "letsEncryptTimestamp",
        "isSetupSurveyAnswered",
        "serverMac",
        "setupStartedAt"
      ]
    },
    "DeletedSite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Site ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM client bound with this site. Null if no UCRM client is bound to this site.",
          "example": "135"
        },
        "deletedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was deleted in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "id",
        "ucrmId",
        "deletedAt"
      ]
    },
    "DeletedSitesList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeletedSite"
      }
    },
    "ChangedItems": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Server address, null if hostname cannot be resolved.",
          "example": "192.168.1.100",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "settings": {
          "$ref": "#/definitions/NmsSettings"
        },
        "sites": {
          "$ref": "#/definitions/SitesList"
        },
        "deletedSites": {
          "$ref": "#/definitions/DeletedSitesList"
        },
        "users": {
          "$ref": "#/definitions/UserList"
        }
      }
    },
    "Status": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        }
      },
      "required": [
        "result",
        "message"
      ]
    },
    "Model23": {
      "type": "object",
      "properties": {
        "networkName": {
          "type": "string",
          "description": "ISP network name."
        },
        "logo": {
          "type": "string",
          "description": "URL for ISP logo."
        },
        "supportPhone": {
          "type": "string",
          "description": "Contact phone."
        },
        "supportEmail": {
          "type": "string",
          "description": "Contact email."
        },
        "web": {
          "type": "string",
          "description": "ISP website."
        },
        "UNMSHostname": {
          "type": "string",
          "description": "UISP URL address."
        },
        "speedTestServer": {
          "type": "string",
          "description": "Speed server URL address."
        }
      },
      "required": [
        "networkName",
        "logo",
        "supportPhone",
        "supportEmail",
        "web",
        "UNMSHostname",
        "speedTestServer"
      ]
    },
    "Model24": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        },
        "result": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        }
      },
      "required": [
        "message",
        "result",
        "version"
      ]
    },
    "ServerLogVerbosityResponseSchema": {
      "type": "object",
      "properties": {
        "verbosity": {
          "type": "string",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ]
        },
        "expiresAt": {
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "verbosity",
        "expiresAt"
      ]
    },
    "MailServer": {
      "type": "object",
      "properties": {
        "customSmtpAuthEnabled": {
          "type": "boolean"
        },
        "customSmtpHostname": {
          "type": "string"
        },
        "customSmtpPassword": {
          "type": "string"
        },
        "customSmtpPort": {
          "type": "integer"
        },
        "customSmtpSecurityMode": {
          "type": "string"
        },
        "customSmtpSender": {
          "type": "string"
        },
        "customSmtpUsername": {
          "type": "string"
        },
        "gmailPassword": {
          "type": "string"
        },
        "gmailUsername": {
          "type": "string"
        },
        "tlsAllowUnauthorized": {
          "type": "boolean"
        },
        "type": {
          "type": "string",
          "enum": [
            "nosmtp",
            "cloud",
            "gmail",
            "smtp"
          ]
        }
      }
    },
    "NewsSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the news.",
          "example": "1377eac0-2e21-4a56-b1c1-682c16f39cb9"
        },
        "date": {
          "type": "number",
          "description": "Timestamp in milliseconds when the news was published.",
          "example": 1557222409000
        },
        "link": {
          "type": "string",
          "description": "URL with with more details.",
          "example": "https://community.ubnt.com/"
        },
        "text": {
          "type": "string",
          "description": "News description.",
          "example": "Check the community."
        },
        "type": {
          "type": "string",
          "description": "News severity.",
          "example": "info"
        },
        "who": {
          "type": "string",
          "description": "Who issued the news.",
          "example": "UBNT"
        }
      },
      "required": [
        "id",
        "date",
        "link",
        "text",
        "type",
        "who"
      ]
    },
    "NewsSchemaList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/NewsSchema"
      }
    },
    "DeviceStatusOverview1": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "SearchResultMatch": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Identification of the matched string.",
          "example": "interfaces.addresses.cidr"
        },
        "field": {
          "type": "string",
          "description": "Where in the \"data\" is the matched string.",
          "example": "interfaces.2.addresses.7.cidr"
        },
        "value": {
          "type": "string",
          "description": "String that contains the match.",
          "example": "667 Acboa road, Pimprehills"
        },
        "position": {
          "type": "number",
          "description": "Position in the \"value\" where the match starts.",
          "example": 4
        },
        "length": {
          "type": "number",
          "description": "Length of the matched string.",
          "example": 3
        }
      }
    },
    "SearchResultMatches": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SearchResultMatch"
      }
    },
    "Model25": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "device",
          "enum": [
            "device"
          ]
        },
        "data": {
          "$ref": "#/definitions/DeviceStatusOverview1"
        },
        "matches": {
          "$ref": "#/definitions/SearchResultMatches"
        }
      },
      "required": [
        "type",
        "data",
        "matches"
      ]
    },
    "SearchResultSchema": {
      "type": "array",
      "minItems": 0,
      "items": {
        "$ref": "#/definitions/Model25",
        "x-alternatives": [
          {
            "$ref": "#/x-alt-definitions/Model9"
          },
          {
            "$ref": "#/x-alt-definitions/Model13"
          }
        ]
      }
    },
    "features1": {
      "type": "object",
      "properties": {
        "wifiMan": {
          "type": "boolean",
          "description": "Experimental flag for wifiMan.",
          "example": false
        },
        "linkScore": {
          "type": "boolean",
          "description": "Experimental flag for linkScore.",
          "example": false
        },
        "newUserRoles": {
          "type": "boolean",
          "description": "Experimental flag for new user roles.",
          "example": false
        },
        "cloudVault": {
          "type": "boolean",
          "description": "Experimental flag for cloud-managed vault key.",
          "example": false
        },
        "cloudSmtp": {
          "type": "boolean",
          "description": "Experimental flag for cloud-managed SMTP.",
          "example": false
        },
        "pushNotifications": {
          "type": "boolean",
          "description": "Flag for cloud push notifications.",
          "example": false
        }
      },
      "required": [
        "wifiMan",
        "linkScore",
        "newUserRoles",
        "cloudVault",
        "cloudSmtp",
        "pushNotifications"
      ]
    },
    "devices": {
      "type": "array",
      "description": "List of subsystemIds of devices supported by the controller",
      "example": [
        "a674"
      ],
      "items": {
        "type": "string"
      }
    },
    "ServerConfigPermissions": {
      "type": "object",
      "properties": {
        "canConfigureSmtp": {
          "type": "boolean",
          "description": "Whether SMTP can be configured or not.",
          "example": false
        },
        "canConfigureMaps": {
          "type": "boolean",
          "description": "Whether map engine is configurable or not.",
          "example": true
        },
        "canDownloadSupportInfo": {
          "type": "boolean",
          "description": "Whether support info can be downloaded or not.",
          "example": true
        },
        "canConfigureCertificate": {
          "type": "boolean",
          "description": "Whether SSL certificate can be configured or not.",
          "example": true
        },
        "canConfigureNetflow": {
          "type": "boolean",
          "description": "Whether netflow can be configured or not.",
          "example": true
        },
        "canConfigureHostname": {
          "type": "boolean",
          "description": "Whether hostname can be configured or not.",
          "example": true
        },
        "canConfigureUcrm": {
          "type": "boolean",
          "description": "Whether CRM can be configured from UISP UI or not.",
          "example": true
        },
        "canUpdateUnms": {
          "type": "boolean",
          "description": "Whether UISP can be updated from UISP UI or not.",
          "example": true
        },
        "canConfigureDeviceProfiles": {
          "type": "boolean",
          "description": "Whether device profiles can be configured or not.",
          "example": true
        },
        "canSetupWithoutAuthentication": {
          "type": "boolean",
          "description": "Whether UISP setup wizard can be completed without authentication.",
          "example": true
        },
        "canConfigureFirstDeviceInSetup": {
          "type": "boolean",
          "description": "Whether UISP setup wizard can show the First device screen.",
          "example": false
        },
        "canSkipPrivacyPolicyAgreement": {
          "type": "boolean",
          "description": "Whether UISP setup can skip privacy policy agreement screen.",
          "example": false
        },
        "canSkipSetupSurvey": {
          "type": "boolean",
          "description": "Whether UISP can skip setup survey after setup.",
          "example": false
        },
        "canRunLocalDiscovery": {
          "type": "boolean",
          "description": "Whether UISP can discover devices in local network.",
          "example": true
        },
        "canUseCloudSmtp": {
          "type": "boolean",
          "description": "Whether cloud SMTP can be used or not.",
          "example": true
        },
        "canUseCloudVault": {
          "type": "boolean",
          "description": "Whether vault key can be managed by cloud.",
          "example": true
        },
        "canUseSsoLogin": {
          "type": "boolean",
          "description": "Whether users can login using Ubiquiti SSO.",
          "example": true
        },
        "canUseLocalLogin": {
          "type": "boolean",
          "description": "Whether users can login using local account (= instance has at least one account with password).",
          "example": true
        },
        "canUseTwoFactor": {
          "type": "boolean",
          "description": "Whether users can use two factor authorization.",
          "example": false
        },
        "canUseUnattendedSetup": {
          "type": "boolean",
          "description": "Whether UISP setup wizard on cloud goes directly to add device screen.",
          "example": false
        }
      },
      "required": [
        "canConfigureSmtp",
        "canConfigureMaps",
        "canDownloadSupportInfo",
        "canConfigureCertificate",
        "canConfigureNetflow",
        "canConfigureHostname",
        "canConfigureUcrm",
        "canUpdateUnms",
        "canConfigureDeviceProfiles",
        "canSetupWithoutAuthentication",
        "canConfigureFirstDeviceInSetup",
        "canSkipPrivacyPolicyAgreement",
        "canSkipSetupSurvey",
        "canRunLocalDiscovery",
        "canUseCloudSmtp",
        "canUseCloudVault",
        "canUseSsoLogin",
        "canUseLocalLogin",
        "canUseTwoFactor",
        "canUseUnattendedSetup"
      ]
    },
    "ServerConfig": {
      "type": "object",
      "properties": {
        "features": {
          "$ref": "#/definitions/features1"
        },
        "devices": {
          "$ref": "#/definitions/devices"
        },
        "permissions": {
          "$ref": "#/definitions/ServerConfigPermissions"
        },
        "isCloudSmtpAvailable": {
          "type": "boolean",
          "description": "Whether cloud SMTP is available or not.",
          "example": false
        },
        "isSsoLoginEnabled": {
          "type": "boolean",
          "description": "Whether users can login using SSO account.",
          "example": false
        },
        "latestVersionUrl": {
          "type": "string",
          "description": "URL to check for new version of UISP.",
          "example": "https://api.github.com/repos/Ubiquiti-App/UNMS/contents/latest-version?ref=master"
        },
        "useCustomSslCert": {
          "type": "boolean",
          "description": "Whether the server is using custom SSL cert or not.",
          "example": false
        },
        "netflowPort": {
          "type": "number",
          "description": "Port where server is listening for netflow packets.",
          "example": 2055
        },
        "isProduction": {
          "type": "boolean",
          "description": "If deployed version is production build.",
          "example": true
        },
        "isUispConsole": {
          "type": "boolean",
          "description": "If the controller runs on UISP Console.",
          "example": true
        },
        "serverType": {
          "type": "string",
          "description": "Type of server, where controller is hosted.",
          "example": "local",
          "enum": [
            "local",
            "cloud",
            "uisp-console"
          ]
        },
        "serverMac": {
          "type": "string",
          "example": "60:a0:de:1b:7e:5c"
        }
      },
      "required": [
        "permissions",
        "isCloudSmtpAvailable",
        "latestVersionUrl",
        "useCustomSslCert",
        "netflowPort",
        "isProduction",
        "isUispConsole",
        "serverType",
        "serverMac"
      ]
    },
    "NmsSettings1": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "example": "Europe/Prague",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Ciudad_Juarez",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Nuuk",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Qatar",
            "Asia/Qostanay",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Kyiv",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kanton",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "homePage": {
          "type": "string",
          "example": "unms",
          "enum": [
            "unms",
            "ucrm"
          ]
        },
        "hostname": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "autoBackups": {
          "type": "boolean",
          "example": true
        },
        "deviceAutoBackups": {
          "type": "boolean",
          "example": true
        },
        "discoveryAutoConfiguration": {
          "type": "boolean",
          "example": true
        },
        "discoveryAllowUnsecuredChannels": {
          "type": "boolean",
          "example": false
        },
        "discoveryAllowLocalScan": {
          "type": "boolean",
          "example": false
        },
        "discoveryAllowRemoteScan": {
          "type": "boolean",
          "example": false
        },
        "discoverySnmpCommunity": {
          "type": "string",
          "example": "public"
        },
        "discoveryHideBlackBox": {
          "type": "boolean",
          "example": false
        },
        "discoveryNotification": {
          "type": "boolean",
          "example": true
        },
        "discoveryBlacklist": {
          "$ref": "#/definitions/discoveryBlacklist"
        },
        "mapsProvider": {
          "type": "string",
          "example": "OpenStreetMap",
          "enum": [
            "GoogleMaps",
            "OpenStreetMap"
          ]
        },
        "googleMapsApiKey": {
          "type": "string"
        },
        "devicePingAddressMode": {
          "type": "string",
          "enum": [
            "auto",
            "custom"
          ]
        },
        "devicePingAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional"
                }
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 30000,
          "minimum": 10000,
          "maximum": 300000
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 5000,
          "minimum": 2000,
          "maximum": 300000
        },
        "useLetsEncrypt": {
          "type": "boolean",
          "example": true
        },
        "allowLoggingToSentry": {
          "type": "boolean",
          "example": true
        },
        "allowLoggingToLogentries": {
          "type": "boolean",
          "example": true
        },
        "deviceTransmissionProfile": {
          "type": "string",
          "example": "auto",
          "enum": [
            "auto",
            "custom"
          ]
        },
        "deviceTransmissionFrequencies": {
          "$ref": "#/definitions/deviceTransmissionFrequencies"
        },
        "defaultGracePeriod": {
          "type": "integer",
          "example": 30000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "restartGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "upgradeGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "outageMailablePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 0,
          "maximum": 86400000
        },
        "dateFormat": {
          "type": "string",
          "example": "D MMM YYYY",
          "enum": [
            "D MMM YYYY",
            "Do MMM YYYY",
            "DD MMM YYYY",
            "MMM D, YYYY",
            "MMM Do, YYYY",
            "MMM DD, YYYY",
            "YYYY-MM-DD",
            "DD-MM-YYYY",
            "D.M.YYYY",
            "DD.MM.YYYY",
            "D/M/YYYY",
            "DD/MM/YYYY",
            "M/D/YYYY",
            "MM/DD/YYYY"
          ]
        },
        "timeFormat": {
          "type": "string",
          "example": "h:mm a",
          "enum": [
            "H:mm",
            "h:mm a"
          ]
        },
        "allowAutoUpdateUbntFirmwares": {
          "type": "boolean",
          "example": true
        },
        "allowBetaFirmwares": {
          "type": "boolean",
          "example": false
        },
        "deviceUpdateNotification": {
          "type": "boolean",
          "example": false
        },
        "ucrmEnabled": {
          "type": "boolean",
          "example": false
        },
        "isIsp": {
          "type": "boolean",
          "example": true
        },
        "country": {
          "type": "string",
          "example": "CZ",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "deviceNumberOfBackups": {
          "type": "integer",
          "example": 30,
          "minimum": 1,
          "maximum": 100
        },
        "tableDensity": {
          "type": "string"
        },
        "trafficShapingAdjustment": {
          "type": "integer",
          "example": 5,
          "minimum": 1,
          "maximum": 100
        },
        "defaultQosPropagation": {
          "type": "string",
          "enum": [
            "all",
            "gateway"
          ]
        },
        "migrationModeEnabled": {
          "type": "boolean",
          "description": "When true all new device connections and connected devices will change UISP Key.",
          "example": false
        },
        "migrationForceModeEnabled": {
          "type": "boolean",
          "description": "When true reachability check will be skipped.",
          "example": false
        },
        "migrationWithBackupEnabled": {
          "type": "boolean",
          "description": "When false UISP Key must be present.",
          "example": false
        },
        "migrationUispKey": {
          "type": "string",
          "description": "UISP Key.",
          "example": "example.com"
        },
        "migrationHostname": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "migrationPort": {
          "type": "integer",
          "description": "UISP port to migrate to.",
          "minimum": 1,
          "maximum": 65535
        },
        "maintenanceWindowFromTime": {
          "type": "integer",
          "description": "Hour when maintenance window start.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowToTime": {
          "type": "integer",
          "description": "Hour when maintenance window end.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowFriday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowMonday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSaturday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSunday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowThursday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowTuesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowWednesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "parallelUpgradeLimit": {
          "type": "integer",
          "description": "Maximum number of devices that can be upgraded in parallel",
          "minimum": 1,
          "maximum": 100
        },
        "wifiManIsEnabled": {
          "type": "boolean"
        },
        "wifiManUrlAddressForSpeedTest": {
          "type": "string",
          "example": "https://my-uisp.com",
          "x-format": {
            "uri": {
              "scheme": [
                "https",
                "http"
              ]
            }
          }
        },
        "allowNewDashboard": {
          "type": "boolean",
          "example": false
        },
        "allowNewDevices": {
          "type": "boolean",
          "description": "Set to true to show alpha version of devices screen",
          "example": false
        },
        "allowNewFirmware": {
          "type": "boolean",
          "description": "Set to true to show alpha version of firmware upgrade screen",
          "example": false
        },
        "allowNewStatistics": {
          "type": "boolean",
          "description": "Set to true to show alpha version of statistics overview screen",
          "example": false
        },
        "autoUpdatePlatforms": {
          "$ref": "#/definitions/autoUpdatePlatforms"
        },
        "instanceId": {
          "type": "string",
          "example": "19d4d42a-fac8-4076-b47e-fc0540fdc715",
          "x-format": {
            "guid": true
          }
        },
        "letsEncryptError": {
          "type": "string"
        },
        "letsEncryptTimestamp": {
          "type": "number",
          "example": 1542206387
        },
        "isSetupSurveyAnswered": {
          "type": "boolean",
          "example": true
        },
        "serverMac": {
          "type": "string",
          "example": "60:a0:de:1b:7e:5c"
        },
        "allowUnmsBetaVersion": {
          "type": "boolean",
          "description": "When true UISP will look for latest UISP version among beta releases.",
          "example": false
        },
        "setupStartedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the setup started.",
          "example": "2019-02-07T10:18:01.000Z"
        },
        "setupFinishedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the setup finished.",
          "example": "2019-02-07T10:18:01.000Z"
        }
      },
      "required": [
        "timezone",
        "homePage",
        "hostname",
        "autoBackups",
        "deviceAutoBackups",
        "discoveryAutoConfiguration",
        "discoveryAllowUnsecuredChannels",
        "discoveryAllowLocalScan",
        "discoveryAllowRemoteScan",
        "discoverySnmpCommunity",
        "discoveryHideBlackBox",
        "discoveryNotification",
        "mapsProvider",
        "googleMapsApiKey",
        "devicePingAddressMode",
        "devicePingAddress",
        "devicePingIntervalNormal",
        "devicePingIntervalOutage",
        "useLetsEncrypt",
        "allowLoggingToSentry",
        "allowLoggingToLogentries",
        "deviceTransmissionProfile",
        "defaultGracePeriod",
        "restartGracePeriod",
        "upgradeGracePeriod",
        "outageMailablePeriod",
        "dateFormat",
        "timeFormat",
        "allowAutoUpdateUbntFirmwares",
        "allowBetaFirmwares",
        "ucrmEnabled",
        "isIsp",
        "country",
        "defaultQosPropagation",
        "migrationModeEnabled",
        "migrationForceModeEnabled",
        "migrationWithBackupEnabled",
        "migrationUispKey",
        "migrationHostname",
        "migrationPort",
        "instanceId",
        "letsEncryptError",
        "letsEncryptTimestamp",
        "isSetupSurveyAnswered",
        "serverMac",
        "setupStartedAt"
      ]
    },
    "ServerStatusUnmsSetup": {
      "type": "object",
      "properties": {
        "isConfigured": {
          "type": "boolean"
        },
        "isFirstDeviceConfigured": {
          "type": "boolean"
        },
        "isSubnetConfigured": {
          "type": "boolean"
        }
      }
    },
    "Coordinates": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        }
      }
    },
    "allClients": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "allSites": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "NetworkStatisticInterval": {
      "type": "object",
      "properties": {
        "start": {
          "type": "string"
        },
        "end": {
          "type": "string"
        }
      }
    },
    "liveClients": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "liveSites": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "alerts": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "HighOutage",
          "MediumOutage",
          "OutdatedFirmwareNetwork",
          "OutdatedFirmwareDevice",
          "HighUtilization",
          "CriticalUtilization",
          "SignalLow",
          "SignalMedium"
        ]
      }
    },
    "Model26": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "alerts": {
          "$ref": "#/definitions/alerts"
        }
      }
    },
    "networkDesignScore": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model26"
      }
    },
    "dataLinksUtilizationScore": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "firmwareUpToDateness": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "networkHealth": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "signalScore": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "linkScore2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "outages": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "uplinkUtilizationMean": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "downlinkUtilizationMean": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "utilizationMean": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "string": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "ispScore": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Coordinates"
      }
    },
    "NetworkStatistics": {
      "type": "object",
      "properties": {
        "allClients": {
          "$ref": "#/definitions/allClients"
        },
        "allSites": {
          "$ref": "#/definitions/allSites"
        },
        "interval": {
          "$ref": "#/definitions/NetworkStatisticInterval"
        },
        "liveClients": {
          "$ref": "#/definitions/liveClients"
        },
        "liveSites": {
          "$ref": "#/definitions/liveSites"
        },
        "networkDesignScore": {
          "$ref": "#/definitions/networkDesignScore"
        },
        "dataLinksUtilizationScore": {
          "$ref": "#/definitions/dataLinksUtilizationScore"
        },
        "firmwareUpToDateness": {
          "$ref": "#/definitions/firmwareUpToDateness"
        },
        "networkHealth": {
          "$ref": "#/definitions/networkHealth"
        },
        "signalScore": {
          "$ref": "#/definitions/signalScore"
        },
        "linkScore": {
          "$ref": "#/definitions/linkScore2"
        },
        "outages": {
          "$ref": "#/definitions/outages"
        },
        "uplinkUtilizationMean": {
          "$ref": "#/definitions/uplinkUtilizationMean"
        },
        "downlinkUtilizationMean": {
          "$ref": "#/definitions/downlinkUtilizationMean"
        },
        "utilizationMean": {
          "$ref": "#/definitions/utilizationMean"
        },
        "period": {
          "type": "integer"
        },
        "gateways": {
          "type": "object",
          "name": "gateways",
          "properties": {
            "f7ac9cad-ea28-4390-93c8-7add010e8ee3": {
              "type": "object",
              "name": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
              "properties": {
                "string": {
                  "$ref": "#/definitions/string"
                }
              }
            }
          }
        },
        "ispScore": {
          "$ref": "#/definitions/ispScore"
        }
      }
    },
    "SiteTrafficShaping1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE if optional Traffic Shaping queue are activated.",
          "example": true
        },
        "propagation": {
          "type": "string",
          "description": "\n      Whether or not set Traffic Shaping on Client devices like, CPEs and ONUs.\n      Enabling this will lower your traffic in local network.\n    ",
          "enum": [
            "all",
            "gateway"
          ]
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Download speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "downloadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at downloadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Upload speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "uploadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at uploadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "aggregation": {
          "type": "integer",
          "description": "\n      Number indicating how many times the guaranteed rate is less than the maximum allowed bandwidth.\n      Null for auto calculation by UISP.\n    ",
          "example": 2,
          "minimum": 1,
          "maximum": 10000
        }
      },
      "required": [
        "enabled",
        "downloadSpeed",
        "downloadBurstSize",
        "uploadSpeed",
        "uploadBurstSize",
        "aggregation"
      ]
    },
    "DeviceIdentification3": {
      "type": "object",
      "description": "Read-only identification attributes.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UISP."
        },
        "category": {
          "type": "string",
          "enum": [
            "optical",
            "wired",
            "wireless",
            "accessories"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "UISP device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "udapiVersion": {
          "type": "string",
          "description": "In string format."
        },
        "bridgeVersion": {
          "type": "string",
          "description": "In string format."
        },
        "subsystemId": {
          "type": "string",
          "description": "Device subsystem ID in string format."
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UISP Fiber OLT."
        },
        "systemName": {
          "type": "string",
          "description": "OS",
          "example": "Linux"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "vendorName": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "name": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UISP Fiber NanoG",
            "UISP Fiber Loco",
            "UISP Fiber Wifi",
            "UISP Fiber Instant",
            "UISP Fiber Wifi6",
            "UISP Fiber XG",
            "UISP Fiber XGS",
            "UISP Router LXC",
            "UISPRPro",
            "UISPConsole",
            "UISPR",
            "UISPRPlus",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UNMSS",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "UISPFiberOltXgs",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "AF60",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "lturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SunMax",
            "UX",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "serialNumber": {
          "type": "string"
        },
        "started": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom",
            "maintenance",
            "incompatible",
            "unmonitored",
            "unassigned",
            "misconfigured",
            "preregistration"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "wanInterfaceId": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "site": {
          "$ref": "#/definitions/site"
        }
      },
      "required": [
        "id"
      ]
    },
    "uplinkDevice": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/DeviceIdentification3"
        }
      }
    },
    "Station1": {
      "type": "object",
      "properties": {
        "connected": {
          "type": "boolean"
        },
        "connectionTime": {
          "type": "integer"
        },
        "deviceIdentification": {
          "$ref": "#/definitions/DeviceIdentification1"
        },
        "distance": {
          "type": "integer",
          "description": "Distance in meters.",
          "example": 100
        },
        "downlinkCapacity": {
          "type": "integer"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "latency": {
          "type": "integer",
          "description": "Latency in milliseconds.",
          "example": 10
        },
        "interfaceId": {
          "type": "string",
          "description": "Interface name, where the station is connected.",
          "example": "wlan0"
        },
        "name": {
          "type": "string",
          "example": "lab-ISM5-1"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Custom model name",
          "example": "Thinkpad E15"
        },
        "systemName": {
          "type": "string",
          "description": "Custom OS name",
          "example": "Linux"
        },
        "radio": {
          "type": "string",
          "enum": [
            "2.4GHz",
            "3GHz",
            "4GHz",
            "5GHz",
            "11GHz",
            "24GHz",
            "60GHz"
          ]
        },
        "rxBytes": {
          "type": "integer",
          "description": "Received bytes.",
          "example": 926000
        },
        "rxMcs": {
          "type": "string",
          "description": "Local current MCS.",
          "example": 8
        },
        "rxMcsIndex": {
          "type": "string",
          "description": "Local MCS index.",
          "example": 8
        },
        "rxMcsIdeal": {
          "type": "string",
          "description": "Local ideal MCS.",
          "example": 8
        },
        "rxMcsIndexIdeal": {
          "type": "string",
          "description": "Local ideal MCS index.",
          "example": 8
        },
        "rxModulation": {
          "type": "string",
          "description": "Local Rx data rate.",
          "example": 8
        },
        "rxRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 456
        },
        "rxSignal": {
          "type": "integer",
          "description": "Local Signal in dBm.",
          "example": -44
        },
        "rxSignalIdeal": {
          "type": "integer",
          "description": "Local Expected Signal in dBm.",
          "example": -39
        },
        "rxChain": {
          "$ref": "#/definitions/rxChain"
        },
        "rxChainIdeal": {
          "$ref": "#/definitions/rxChainIdeal"
        },
        "rxChainMask": {
          "type": "integer",
          "example": 2
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "txBytes": {
          "type": "integer",
          "description": "Transmitted/Sent bytes.",
          "example": 436000
        },
        "txMcs": {
          "type": "string",
          "description": "Remote current MCS.",
          "example": 8
        },
        "txMcsIndex": {
          "type": "string",
          "description": "Remote MCS index.",
          "example": 8
        },
        "txMcsIdeal": {
          "type": "string",
          "description": "Remote ideal MCS.",
          "example": 8
        },
        "txMcsIndexIdeal": {
          "type": "string",
          "description": "Remote ideal MCS index.",
          "example": 8
        },
        "txModulation": {
          "type": "string",
          "description": "Remote Rx data rate.",
          "example": 8
        },
        "txRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 325
        },
        "txSignal": {
          "type": "integer",
          "description": "Remote Signal in dBm.",
          "example": -39
        },
        "txSignalIdeal": {
          "type": "integer",
          "description": "Remote Expected Signal in dBm.",
          "example": -39
        },
        "txChain": {
          "$ref": "#/definitions/txChain"
        },
        "txChainIdeal": {
          "$ref": "#/definitions/txChainIdeal"
        },
        "txChainMask": {
          "type": "integer",
          "example": 2
        },
        "noiseFloor": {
          "type": "integer",
          "description": "Wireless noise level in dBm",
          "example": -84
        },
        "uplinkCapacity": {
          "type": "integer"
        },
        "uptime": {
          "type": "integer"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "vendorName": {
          "type": "string",
          "description": "Custom vendor name",
          "example": "Ubiquiti Networks"
        },
        "statistics": {
          "$ref": "#/definitions/statistics"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware2"
        },
        "downlinkAirTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "uplinkAirTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "mac": {
          "type": "string"
        }
      },
      "required": [
        "rxChain",
        "rxChainMask",
        "txChain",
        "txChainMask",
        "noiseFloor"
      ]
    },
    "stations1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Station1"
      }
    },
    "wireless1": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "number",
          "description": "Channel number"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        }
      }
    },
    "Model27": {
      "type": "object",
      "properties": {
        "stations": {
          "$ref": "#/definitions/stations1"
        },
        "identification": {
          "$ref": "#/definitions/InterfaceIdentification"
        },
        "statistics": {
          "$ref": "#/definitions/InterfaceStatistics"
        },
        "wireless": {
          "$ref": "#/definitions/wireless1"
        }
      }
    },
    "interfaces": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model27"
      }
    },
    "DeviceSchemaWithInterfacesFiltered": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/uplinkDevice"
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces"
        }
      },
      "required": [
        "ipAddress"
      ]
    },
    "devices1": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/DeviceSchemaWithInterfacesFiltered"
      }
    },
    "SubscriberSuccessSchema": {
      "type": "object",
      "properties": {
        "qos": {
          "$ref": "#/definitions/SiteTrafficShaping1"
        },
        "subscriber": {
          "$ref": "#/definitions/DeviceSchemaWithInterfacesFiltered"
        },
        "devices": {
          "$ref": "#/definitions/devices1"
        }
      },
      "required": [
        "qos",
        "subscriber",
        "devices"
      ]
    },
    "ServerSummary": {
      "type": "object",
      "properties": {
        "activeClientsCount": {
          "type": "integer"
        },
        "activeSitesCount": {
          "type": "integer"
        },
        "allClientsCount": {
          "type": "integer"
        },
        "allSitesCount": {
          "type": "integer"
        },
        "authorizedUbntDevices": {
          "type": "integer"
        },
        "blackBoxesLimit": {
          "type": "integer"
        },
        "devicesDiscoveredCount": {
          "type": "integer"
        },
        "devicesLimit": {
          "type": "integer"
        },
        "devicesUnauthorizedCount": {
          "type": "integer"
        },
        "firmwaresUnreadCount": {
          "type": "integer"
        },
        "ispScore": {
          "type": "number"
        },
        "logsUnreadCount": {
          "type": "integer"
        },
        "minimumRequiredDevices": {
          "type": "integer"
        },
        "firmwareUpToDateness": {
          "type": "number"
        },
        "firmwareUpToDatenessTotal": {
          "type": "integer"
        },
        "firmwareUpToDatenessLatest": {
          "type": "integer"
        },
        "networkDesignScore": {
          "type": "number"
        },
        "networkHealth": {
          "type": "number",
          "description": "Network Health score, number between 0 and 1",
          "example": 0.99,
          "minimum": 0,
          "maximum": 1
        },
        "outagesActiveCount": {
          "type": "integer"
        },
        "outagesUnreadCount": {
          "type": "integer"
        },
        "recentlyActiveDevices": {
          "type": "integer"
        },
        "activeDevices": {
          "type": "integer"
        },
        "superadminCount": {
          "type": "integer"
        },
        "ucrmClientsCount": {
          "type": "integer"
        },
        "timestamp": {
          "type": "string",
          "format": "date",
          "example": "2021-09-23T06:05:36.291Z"
        },
        "isOverloaded": {
          "type": "boolean"
        },
        "version": {
          "type": "string"
        },
        "isCloudInstanceOwner": {
          "type": "boolean"
        },
        "isRecoveryEmailFilled": {
          "type": "boolean"
        }
      },
      "required": [
        "timestamp",
        "isOverloaded",
        "version"
      ]
    },
    "sources": {
      "type": "array",
      "description": "List of IP addresses that are sending netflow data",
      "items": {
        "type": "string",
        "example": "192.168.14.1",
        "x-format": {
          "ip": {
            "cidr": "forbidden"
          }
        }
      }
    },
    "TrafficStatus": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "sources": {
          "$ref": "#/definitions/sources"
        }
      },
      "required": [
        "isActive",
        "sources"
      ]
    },
    "NmsUpdateError": {
      "type": "object",
      "description": "Error that caused the update to fail. Null if update succeeded or is still running.",
      "properties": {
        "error": {
          "type": "string",
          "description": "Type of update error.",
          "example": "DiskSpace",
          "enum": [
            "DiskSpace",
            "InstallationPackage",
            "DockerStop",
            "OldDocker",
            "OldDockerCompose",
            "OldUnms",
            "Timeout",
            "PullImages",
            "Unknown"
          ]
        },
        "message": {
          "type": "string",
          "description": "Brief description of the update error.",
          "example": "Not enough disk space."
        },
        "time": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the error occurred.",
          "example": "2019-02-07T10:18:01.000Z"
        },
        "metadata": {
          "type": "string"
        }
      },
      "required": [
        "error",
        "message",
        "time",
        "metadata"
      ]
    },
    "NmsUpdateStatus": {
      "type": "object",
      "properties": {
        "canNmsUpdate": {
          "type": "boolean",
          "example": true
        },
        "nmsUpdateStatus": {
          "type": "string",
          "enum": [
            "ready",
            "requested",
            "updating"
          ]
        },
        "nmsUpdateError": {
          "$ref": "#/definitions/NmsUpdateError"
        }
      },
      "required": [
        "canNmsUpdate",
        "nmsUpdateStatus",
        "nmsUpdateError"
      ]
    },
    "Version": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version of UISP.",
          "example": "2.4.93"
        },
        "deployment": {
          "type": "string",
          "description": "How was the UISP deployed. Content of UISP_DEPLOYMENT env variable.",
          "example": "jenkins-unms-test-deploy-1234"
        },
        "build": {
          "type": "string",
          "description": "Build identification.",
          "example": "release.860d2c9.20181218093614"
        },
        "time": {
          "type": "string",
          "description": "Time of the build.",
          "example": "2018-11-20T11:01:32+01:00"
        }
      },
      "required": [
        "version",
        "deployment",
        "build",
        "time"
      ]
    },
    "Traffic": {
      "type": "object",
      "properties": {
        "time": {
          "type": "number",
          "description": "Start of the aggregated time interval as a timestamp in milliseconds.",
          "example": 1524751200000
        },
        "upload": {
          "type": "number",
          "description": "Total number of bytes uploaded during interval.",
          "example": 1006051
        },
        "download": {
          "type": "number",
          "description": "Total number of bytes downloaded during interval.",
          "example": 986305
        },
        "siteId": {
          "type": "string",
          "description": "ID of the site that generated this traffic.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "time",
        "upload",
        "download",
        "siteId"
      ]
    },
    "SiteTrafficList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Traffic"
      }
    },
    "string1": {
      "type": "object",
      "properties": {
        "upToDate": {
          "type": "integer",
          "minimum": 0
        },
        "outdated": {
          "type": "integer",
          "minimum": 0
        },
        "inProgress": {
          "type": "integer",
          "minimum": 0
        },
        "queued": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "InProgress": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "identification3": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "batchId": {
          "type": "string"
        }
      }
    },
    "device1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "platformId": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "prerelease4": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "from1": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number"
        },
        "minor": {
          "type": "number"
        },
        "order": {
          "type": "string"
        },
        "patch": {
          "type": "number"
        },
        "prerelease": {
          "$ref": "#/definitions/prerelease4"
        }
      }
    },
    "overview1": {
      "type": "object",
      "properties": {
        "device": {
          "$ref": "#/definitions/device1"
        },
        "from": {
          "$ref": "#/definitions/from1"
        },
        "to": {
          "$ref": "#/definitions/from1"
        }
      }
    },
    "SubTaskItem": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification3"
        },
        "startTimestamp": {
          "type": "integer",
          "minimum": 0
        },
        "endTimestamp": {
          "type": "integer",
          "minimum": 0
        },
        "progress": {
          "type": "number",
          "minimum": 0
        },
        "status": {
          "type": "string",
          "example": "success"
        },
        "error": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/overview1"
        }
      }
    },
    "ListOfTaskItems1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SubTaskItem"
      }
    },
    "TwoFactorSecret": {
      "type": "object",
      "properties": {
        "base32": {
          "type": "string"
        },
        "otpauth_url": {
          "type": "string"
        }
      }
    },
    "Vault": {
      "type": "object",
      "properties": {
        "isVaultEnabled": {
          "type": "boolean"
        },
        "isVaultGenerated": {
          "type": "boolean"
        },
        "isPassphraseMissing": {
          "type": "boolean"
        },
        "isCloudVaultEnabled": {
          "type": "boolean"
        },
        "isCloudVaultGenerated": {
          "type": "boolean"
        },
        "isCloudVaultFromAnotherInstance": {
          "type": "boolean"
        },
        "passphrase": {
          "type": "string",
          "description": "Newly generated vault key."
        }
      },
      "required": [
        "isVaultEnabled",
        "isVaultGenerated",
        "isPassphraseMissing",
        "isCloudVaultEnabled",
        "isCloudVaultGenerated",
        "isCloudVaultFromAnotherInstance"
      ]
    },
    "location1": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "number",
          "example": 49.7345584421122
        },
        "lng": {
          "type": "number",
          "example": 13.36358
        }
      },
      "required": [
        "lat",
        "lng"
      ]
    },
    "ElevationPoint": {
      "type": "object",
      "properties": {
        "location": {
          "$ref": "#/definitions/location1"
        },
        "elevation": {
          "type": "number",
          "example": 351.217861996892
        }
      },
      "required": [
        "elevation"
      ]
    },
    "startOuterElevations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ElevationPoint"
      }
    },
    "elevations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ElevationPoint"
      }
    },
    "endOuterElevations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ElevationPoint"
      }
    },
    "elevations1": {
      "type": "object",
      "properties": {
        "startOuterElevations": {
          "$ref": "#/definitions/startOuterElevations"
        },
        "elevations": {
          "$ref": "#/definitions/elevations"
        },
        "endOuterElevations": {
          "$ref": "#/definitions/endOuterElevations"
        }
      },
      "required": [
        "startOuterElevations",
        "elevations",
        "endOuterElevations"
      ]
    },
    "AirLinkBeSchema": {
      "type": "object",
      "properties": {
        "elevations": {
          "$ref": "#/definitions/elevations1"
        },
        "distance": {
          "type": "number"
        }
      },
      "required": [
        "elevations",
        "distance"
      ]
    },
    "Model28": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "enum": [
            "New",
            "Open",
            "Pending",
            "Solved"
          ]
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        }
      },
      "required": [
        "id",
        "status",
        "description",
        "createdAt"
      ]
    },
    "CRM tickets": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model28"
      }
    },
    "AirCube": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "Model29": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "frequencyBands2": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/definitions/Model29"
      }
    },
    "[DEPRECATED]DeviceAirFiber - partially moved properties to interface or station.1": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string",
          "enum": [
            "LTU",
            "classic",
            "G60"
          ]
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "bridgeMode": {
          "type": "string",
          "enum": [
            "hw",
            "sw"
          ]
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "antenna": {
          "type": "string"
        },
        "frequencyBands": {
          "$ref": "#/definitions/frequencyBands2"
        },
        "frequencyCenter": {
          "type": "string"
        },
        "noiseFloor": {
          "type": "string"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "countryCode": {
          "type": "integer",
          "minimum": 0
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "remoteSignal": {
          "type": "string"
        },
        "transmitPower": {
          "type": "number",
          "x-alternatives": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "enum": [
                "-"
              ]
            }
          ]
        },
        "transmitEirp": {
          "type": "number"
        },
        "transmitChains": {
          "type": "number"
        },
        "receiveChains": {
          "type": "number"
        },
        "transmitDutyCycle": {
          "type": "number"
        },
        "apMac": {
          "type": "string"
        },
        "apDevice": {
          "$ref": "#/definitions/apDevice1"
        },
        "stationName": {
          "type": "string"
        },
        "signalChain": {
          "$ref": "#/definitions/signalChain"
        },
        "signalRemoteChain": {
          "$ref": "#/definitions/signalRemoteChain"
        },
        "stationsCount": {
          "type": "number"
        },
        "frameLength": {
          "type": "number"
        }
      },
      "required": [
        "ssid"
      ]
    },
    "AirFiber": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station.1"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "Model30": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "frequencyBands3": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/definitions/Model30"
      }
    },
    "[DEPRECATED]DeviceAirmax - partially moved properties to interface or station.1": {
      "type": "object",
      "properties": {
        "antenna": {
          "type": "string"
        },
        "apDevice": {
          "$ref": "#/definitions/apDevice"
        },
        "apMac": {
          "type": "string"
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "ccq": {
          "type": "number"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "countryCode": {
          "type": "integer",
          "minimum": 0
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "frequencyBands": {
          "$ref": "#/definitions/frequencyBands3"
        },
        "frequencyCenter": {
          "type": "string"
        },
        "noiseFloor": {
          "type": "string"
        },
        "polling": {
          "$ref": "#/definitions/polling"
        },
        "receiveChains": {
          "type": "number"
        },
        "remoteSignal": {
          "type": "number"
        },
        "remoteSignal60g": {
          "type": "number"
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "series": {
          "type": "string",
          "enum": [
            "AC",
            "M",
            "G60",
            "AX"
          ]
        },
        "signalChain": {
          "$ref": "#/definitions/signalChain"
        },
        "signalRemoteChain": {
          "$ref": "#/definitions/signalRemoteChain"
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "stationName": {
          "type": "string"
        },
        "stationsCount": {
          "type": "number"
        },
        "transmitChains": {
          "type": "number"
        },
        "transmitPower": {
          "type": "number"
        },
        "wds": {
          "type": "boolean"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "tddFraming": {
          "type": "string"
        },
        "wlanRxBytes": {
          "type": "number"
        },
        "wlanTxBytes": {
          "type": "number"
        },
        "gpsSignal": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "availableTxPowerRange": {
          "$ref": "#/definitions/availableTxPowerRange"
        },
        "location": {
          "$ref": "#/definitions/location"
        },
        "cableLength": {
          "type": "number",
          "description": "Cable Length from eth0 interface in meters. When below values is null cable is long less then 20m."
        },
        "cableSnr": {
          "type": "number",
          "description": "Average signal-to-noise ratio on eth0 interface in dB"
        },
        "rxCinr": {
          "type": "number",
          "description": "Carrier to Interference-plus-Noise Ratio in dB on wireless"
        }
      },
      "required": [
        "authentication",
        "channelWidth",
        "countryCode",
        "security",
        "series"
      ]
    },
    "DeviceAirmaxSchema": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station.1"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "DeviceSite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "status": {
          "type": "string",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "site",
            "endpoint",
            "client",
            "subscriber"
          ]
        },
        "parent": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "status",
        "name",
        "type"
      ]
    },
    "Device": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Technical ID only for UISP"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UISP Fiber OLT."
        },
        "name": {
          "type": "string"
        },
        "displayName": {
          "type": "string",
          "description": "UISP device alias or real name."
        },
        "mac": {
          "type": "string",
          "description": "Available only for clients (ONU)"
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "category": {
          "type": "string",
          "enum": [
            "optical",
            "wired",
            "wireless",
            "accessories"
          ]
        },
        "site": {
          "$ref": "#/definitions/DeviceSite"
        },
        "siteId": {
          "type": "string"
        },
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UISP"
        },
        "serialNumber": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UISP Fiber NanoG",
            "UISP Fiber Loco",
            "UISP Fiber Wifi",
            "UISP Fiber Instant",
            "UISP Fiber Wifi6",
            "UISP Fiber XG",
            "UISP Fiber XGS",
            "UISP Router LXC",
            "UISPRPro",
            "UISPConsole",
            "UISPR",
            "UISPRPlus",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UNMSS",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "UISPFiberOltXgs",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "AF60",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "lturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SunMax",
            "UX",
            "UNKNOWN"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        },
        "ipAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "id",
        "firmwareVersion",
        "name",
        "mac",
        "type",
        "category",
        "authorized",
        "serialNumber",
        "platformId",
        "updated",
        "ipAddress"
      ]
    },
    "backupRadio": {
      "type": "object",
      "description": "Backup radio basic info",
      "properties": {
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        }
      },
      "required": [
        "frequency"
      ]
    },
    "DevicesAPSProfile": {
      "type": "object",
      "properties": {
        "airfiber": {
          "type": "string"
        },
        "airmax": {
          "type": "string"
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "countryCode": {
          "type": "integer",
          "minimum": 0
        },
        "device": {
          "$ref": "#/definitions/Device"
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "key": {
          "type": "string",
          "description": "Pre shared key"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "mac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "isAxCompatible": {
          "type": "boolean"
        },
        "frameLength": {
          "type": "number",
          "minimum": 0
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "backupRadio": {
          "$ref": "#/definitions/backupRadio"
        }
      },
      "required": [
        "authentication",
        "channelWidth",
        "countryCode",
        "frequency",
        "key",
        "mac",
        "security",
        "ssid"
      ]
    },
    "DeviceApsProfileListSchema": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DevicesAPSProfile"
      }
    },
    "Model31": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "frequencyBands4": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/definitions/Model31"
      }
    },
    "[DEPRECATED]DeviceAirFiber - partially moved properties to interface or station.2": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string",
          "enum": [
            "LTU",
            "classic",
            "G60"
          ]
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "bridgeMode": {
          "type": "string",
          "enum": [
            "hw",
            "sw"
          ]
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "antenna": {
          "type": "string"
        },
        "frequencyBands": {
          "$ref": "#/definitions/frequencyBands4"
        },
        "frequencyCenter": {
          "type": "string"
        },
        "noiseFloor": {
          "type": "string"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "countryCode": {
          "type": "integer",
          "minimum": 0
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "remoteSignal": {
          "type": "string"
        },
        "transmitPower": {
          "type": "number",
          "x-alternatives": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "enum": [
                "-"
              ]
            }
          ]
        },
        "transmitEirp": {
          "type": "number"
        },
        "transmitChains": {
          "type": "number"
        },
        "receiveChains": {
          "type": "number"
        },
        "transmitDutyCycle": {
          "type": "number"
        },
        "apMac": {
          "type": "string"
        },
        "apDevice": {
          "$ref": "#/definitions/apDevice1"
        },
        "stationName": {
          "type": "string"
        },
        "signalChain": {
          "$ref": "#/definitions/signalChain"
        },
        "signalRemoteChain": {
          "$ref": "#/definitions/signalRemoteChain"
        },
        "stationsCount": {
          "type": "number"
        },
        "frameLength": {
          "type": "number"
        }
      },
      "required": [
        "ssid"
      ]
    },
    "Model32": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "frequencyBands5": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/definitions/Model32"
      }
    },
    "[DEPRECATED]DeviceAirmax - partially moved properties to interface or station.2": {
      "type": "object",
      "properties": {
        "antenna": {
          "type": "string"
        },
        "apDevice": {
          "$ref": "#/definitions/apDevice"
        },
        "apMac": {
          "type": "string"
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "ccq": {
          "type": "number"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "countryCode": {
          "type": "integer",
          "minimum": 0
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "frequencyBands": {
          "$ref": "#/definitions/frequencyBands5"
        },
        "frequencyCenter": {
          "type": "string"
        },
        "noiseFloor": {
          "type": "string"
        },
        "polling": {
          "$ref": "#/definitions/polling"
        },
        "receiveChains": {
          "type": "number"
        },
        "remoteSignal": {
          "type": "number"
        },
        "remoteSignal60g": {
          "type": "number"
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "series": {
          "type": "string",
          "enum": [
            "AC",
            "M",
            "G60",
            "AX"
          ]
        },
        "signalChain": {
          "$ref": "#/definitions/signalChain"
        },
        "signalRemoteChain": {
          "$ref": "#/definitions/signalRemoteChain"
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "stationName": {
          "type": "string"
        },
        "stationsCount": {
          "type": "number"
        },
        "transmitChains": {
          "type": "number"
        },
        "transmitPower": {
          "type": "number"
        },
        "wds": {
          "type": "boolean"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "tddFraming": {
          "type": "string"
        },
        "wlanRxBytes": {
          "type": "number"
        },
        "wlanTxBytes": {
          "type": "number"
        },
        "gpsSignal": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "availableTxPowerRange": {
          "$ref": "#/definitions/availableTxPowerRange"
        },
        "location": {
          "$ref": "#/definitions/location"
        },
        "cableLength": {
          "type": "number",
          "description": "Cable Length from eth0 interface in meters. When below values is null cable is long less then 20m."
        },
        "cableSnr": {
          "type": "number",
          "description": "Average signal-to-noise ratio on eth0 interface in dB"
        },
        "rxCinr": {
          "type": "number",
          "description": "Carrier to Interference-plus-Noise Ratio in dB on wireless"
        }
      },
      "required": [
        "authentication",
        "channelWidth",
        "countryCode",
        "security",
        "series"
      ]
    },
    "lag1": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "interfaces1": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "number": {
      "type": "object",
      "properties": {
        "interfaces": {
          "$ref": "#/definitions/interfaces1"
        }
      }
    },
    "sfp+1": {
      "type": "object",
      "properties": {
        "vlanNative": {
          "type": "number"
        }
      }
    },
    "sfp+2": {
      "type": "object",
      "properties": {
        "vlanNative": {
          "type": "number"
        }
      }
    },
    "sfp1": {
      "type": "object",
      "properties": {
        "vlanNative": {
          "type": "number"
        }
      }
    },
    "sfp2": {
      "type": "object",
      "properties": {
        "vlanNative": {
          "type": "number"
        }
      }
    },
    "sfp3": {
      "type": "object",
      "properties": {
        "vlanNative": {
          "type": "number"
        }
      }
    },
    "sfp4": {
      "type": "object",
      "properties": {
        "vlanNative": {
          "type": "number"
        }
      }
    },
    "lag11": {
      "type": "object",
      "properties": {
        "vlanNative": {
          "type": "number"
        }
      }
    },
    "lag2": {
      "type": "object",
      "properties": {
        "vlanNative": {
          "type": "number"
        }
      }
    },
    "interface1": {
      "type": "object",
      "properties": {
        "sfp+1": {
          "$ref": "#/definitions/sfp%2B1"
        },
        "sfp+2": {
          "$ref": "#/definitions/sfp%2B2"
        },
        "sfp1": {
          "$ref": "#/definitions/sfp1"
        },
        "sfp2": {
          "$ref": "#/definitions/sfp2"
        },
        "sfp3": {
          "$ref": "#/definitions/sfp3"
        },
        "sfp4": {
          "$ref": "#/definitions/sfp4"
        },
        "lag1": {
          "$ref": "#/definitions/lag11"
        },
        "lag2": {
          "$ref": "#/definitions/lag2"
        }
      }
    },
    "vlans1": {
      "type": "object",
      "properties": {
        "vlanId": {
          "type": "object",
          "name": "vlanId",
          "properties": {
            "number": {
              "$ref": "#/definitions/number"
            }
          }
        },
        "interface": {
          "$ref": "#/definitions/interface1"
        }
      }
    },
    "layer2": {
      "type": "object",
      "properties": {
        "lag": {
          "$ref": "#/definitions/lag1"
        },
        "vlans": {
          "$ref": "#/definitions/vlans1"
        }
      }
    },
    "number1": {
      "type": "array",
      "items": {
        "type": "string",
        "x-constraint": {
          "length": 2
        }
      }
    },
    "olt": {
      "type": "object",
      "properties": {
        "hasUnsupportedOnu": {
          "type": "boolean"
        },
        "layer2": {
          "$ref": "#/definitions/layer2"
        },
        "onuWifiCountries": {
          "type": "object",
          "name": "onuWifiCountries",
          "properties": {
            "number": {
              "$ref": "#/definitions/number1"
            }
          }
        }
      }
    },
    "Olt": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        },
        "olt": {
          "$ref": "#/definitions/olt"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "BlackBox": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station.2"
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "onu": {
          "$ref": "#/definitions/DeviceOnu"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station.2"
        },
        "olt": {
          "$ref": "#/definitions/Olt"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "DeviceStatusOverview2": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "Model33": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "running",
            "complete",
            "error",
            "none"
          ]
        }
      },
      "required": [
        "error"
      ]
    },
    "Model34": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "description": "Device type",
          "example": "erouter",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "series": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "type",
        "series"
      ]
    },
    "Wave": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "Model35": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of operator in shape of \u003CMCC\u003E-\u003CMNC\u003E",
          "example": "230-1"
        },
        "name": {
          "type": "string",
          "description": "Operator's name",
          "example": "T-Mobile"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "operators": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model35"
      }
    },
    "Model36": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Scanning status",
          "example": "scanning",
          "enum": [
            "scanning",
            "error",
            "done"
          ]
        },
        "operators": {
          "$ref": "#/definitions/operators"
        }
      },
      "required": [
        "status"
      ]
    },
    "poeValues": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "off",
          "active",
          "24v",
          "27v",
          "48v",
          "54v",
          "24v-4pair",
          "27v-4pair",
          "54v-4pair",
          "pthru"
        ]
      }
    },
    "speedValues": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "auto",
          "autodetect",
          "10-half",
          "10-full",
          "100-half",
          "100-full",
          "300-full",
          "1000-half",
          "1000-full",
          "2500-full",
          "5000-full",
          "10000-full",
          "25000-full"
        ]
      }
    },
    "Model37": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "ethernet",
            "switch",
            "port",
            "pon",
            "bridge",
            "pppoe",
            "vlan",
            "wireless",
            "lag",
            "loopback",
            "tunnel"
          ]
        },
        "supportVLAN": {
          "type": "boolean"
        },
        "supportPPPoE": {
          "type": "boolean"
        },
        "supportBlock": {
          "type": "boolean"
        },
        "supportDelete": {
          "type": "boolean"
        },
        "supportPOE": {
          "type": "boolean"
        },
        "supportReset": {
          "type": "boolean"
        },
        "supportCableTest": {
          "type": "boolean"
        },
        "poeValues": {
          "$ref": "#/definitions/poeValues"
        },
        "supportPOEIn": {
          "type": "boolean"
        },
        "supportFlowControl": {
          "type": "boolean"
        },
        "speedValues": {
          "$ref": "#/definitions/speedValues"
        },
        "media": {
          "type": "string"
        },
        "maxMTU": {
          "type": "integer"
        },
        "configurable": {
          "type": "boolean"
        }
      }
    },
    "interfaces2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model37"
      }
    },
    "services": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "supportedUdapiVersion": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "ptmp": {
      "type": "object",
      "properties": {
        "ap": {
          "type": "boolean",
          "description": "Traffic shaping is supported when device is access point.",
          "example": true
        },
        "sta": {
          "type": "boolean",
          "description": "Traffic shaping is supported when device is station.",
          "example": true
        }
      }
    },
    "supportTrafficShaping": {
      "type": "object",
      "properties": {
        "ptmp": {
          "$ref": "#/definitions/ptmp"
        },
        "ptp": {
          "$ref": "#/definitions/ptmp"
        }
      }
    },
    "Model38": {
      "type": "object",
      "properties": {
        "flavor": {
          "type": "string"
        },
        "minVersion": {
          "type": "string"
        }
      }
    },
    "supportedFirmwares": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model38"
      }
    },
    "device2": {
      "type": "object",
      "properties": {
        "supportDeviceBackup": {
          "type": "boolean"
        },
        "supportFastApply": {
          "type": "boolean"
        },
        "supportFirmwareUpgrade": {
          "type": "boolean"
        },
        "supportSystemLog": {
          "type": "boolean"
        },
        "supportedUdapiVersion": {
          "$ref": "#/definitions/supportedUdapiVersion"
        },
        "supportLedsOff": {
          "type": "boolean"
        },
        "supportManagementConfig": {
          "type": "boolean"
        },
        "supportManagementVLAN": {
          "type": "boolean"
        },
        "supportDataVLAN": {
          "type": "boolean"
        },
        "supportRouter": {
          "type": "boolean"
        },
        "supportTrafficShaping": {
          "$ref": "#/definitions/supportTrafficShaping"
        },
        "supportUPnP": {
          "type": "boolean"
        },
        "supportPPPoE": {
          "type": "boolean"
        },
        "supportFallbackConfig": {
          "type": "boolean"
        },
        "supportDFSPrescan": {
          "type": "boolean"
        },
        "defaultFallbackAddress": {
          "type": "string"
        },
        "hasGlobalMTU": {
          "type": "boolean"
        },
        "hasGlobalLoadBalance": {
          "type": "boolean"
        },
        "supportPositioning": {
          "type": "boolean"
        },
        "gps": {
          "type": "boolean"
        },
        "poePassthrough": {
          "type": "boolean"
        },
        "rssiLeds": {
          "type": "integer"
        },
        "gpsLeds": {
          "type": "integer"
        },
        "extReset": {
          "type": "boolean"
        },
        "supportPtpAp": {
          "type": "boolean"
        },
        "supportPtmpAp": {
          "type": "boolean"
        },
        "supportPtpSta": {
          "type": "boolean"
        },
        "supportPtmpMesh": {
          "type": "boolean"
        },
        "supportPtmpSta": {
          "type": "boolean"
        },
        "minFwVersion": {
          "type": "string"
        },
        "supportAnalytics": {
          "type": "boolean"
        },
        "supportBLELargeFileTransfer": {
          "type": "boolean"
        },
        "supportRunningFirmwareUpgradeDiscard": {
          "type": "boolean"
        },
        "supportCrashReporting": {
          "type": "boolean"
        },
        "supportSecondaryPort": {
          "type": "boolean"
        },
        "supportStp": {
          "type": "boolean"
        },
        "supportUsernameChange": {
          "type": "boolean"
        },
        "supportOrientation": {
          "type": "boolean"
        },
        "supportCarrierDrop": {
          "type": "boolean"
        },
        "supportFirmwareUpgradeDiscard": {
          "type": "boolean"
        },
        "supportUpgradeMetadata": {
          "type": "boolean"
        },
        "supportEirpChannelSelection": {
          "type": "boolean"
        },
        "supportFrequencyBlockList": {
          "type": "boolean"
        },
        "supportFrequencySplit": {
          "type": "boolean"
        },
        "supportQuickFactoryReset": {
          "type": "boolean"
        },
        "supportSetup": {
          "type": "boolean"
        },
        "supportLinkManagement": {
          "type": "boolean"
        },
        "supportChannelWidthSplit": {
          "type": "boolean"
        },
        "supportPhysicalPortsConfiguration": {
          "type": "boolean"
        },
        "supportPhysicalPortManagement": {
          "type": "boolean"
        },
        "supportedFirmwares": {
          "$ref": "#/definitions/supportedFirmwares"
        }
      }
    },
    "tools": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "vlanSwitching": {
      "type": "object",
      "properties": {
        "supported": {
          "type": "boolean"
        },
        "supportsQinQ": {
          "type": "boolean"
        },
        "defaultVLAN": {
          "type": "integer",
          "default": 1,
          "minimum": 1,
          "maximum": 4094
        },
        "maxID": {
          "type": "integer",
          "minimum": 1,
          "maximum": 4094
        }
      }
    },
    "features2": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "txpower": {
      "type": "object",
      "properties": {
        "max": {
          "type": "integer"
        },
        "min": {
          "type": "integer"
        },
        "offset": {
          "type": "integer"
        }
      }
    },
    "ptp": {
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "ptmp1": {
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "channelWidths": {
      "type": "object",
      "properties": {
        "ptp": {
          "$ref": "#/definitions/ptp"
        },
        "ptmp": {
          "$ref": "#/definitions/ptmp1"
        }
      }
    },
    "ieeeModes": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "bands": {
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "Model39": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "gain": {
          "type": "integer"
        },
        "builtIn": {
          "type": "boolean",
          "default": false
        },
        "bands": {
          "$ref": "#/definitions/bands"
        }
      }
    },
    "values": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model39"
      }
    },
    "antenna3": {
      "type": "object",
      "properties": {
        "default": {
          "type": "integer"
        },
        "customSupported": {
          "type": "boolean"
        },
        "values": {
          "$ref": "#/definitions/values"
        }
      }
    },
    "Model40": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string"
        },
        "rate": {
          "type": "integer"
        }
      }
    },
    "mcsRates": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model40"
      }
    },
    "Model41": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "features": {
          "$ref": "#/definitions/features2"
        },
        "txpower": {
          "$ref": "#/definitions/txpower"
        },
        "channelWidths": {
          "$ref": "#/definitions/channelWidths"
        },
        "distanceLimit": {
          "type": "number"
        },
        "ieeeModes": {
          "$ref": "#/definitions/ieeeModes"
        },
        "antenna": {
          "$ref": "#/definitions/antenna3"
        },
        "mcsRates": {
          "$ref": "#/definitions/mcsRates"
        }
      }
    },
    "radios": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model41"
      }
    },
    "timeouts": {
      "type": "object",
      "properties": {
        "reboot": {
          "type": "integer"
        },
        "upgrade": {
          "type": "integer"
        }
      }
    },
    "Model42": {
      "type": "object",
      "properties": {
        "interfaces": {
          "$ref": "#/definitions/interfaces2"
        },
        "services": {
          "$ref": "#/definitions/services"
        },
        "device": {
          "$ref": "#/definitions/device2"
        },
        "tools": {
          "$ref": "#/definitions/tools"
        },
        "vlanSwitching": {
          "$ref": "#/definitions/vlanSwitching"
        },
        "radios": {
          "$ref": "#/definitions/radios"
        },
        "timeouts": {
          "$ref": "#/definitions/timeouts"
        }
      }
    },
    "timezoneList": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "login": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        }
      },
      "required": [
        "username"
      ]
    },
    "admin": {
      "type": "object",
      "properties": {
        "login": {
          "$ref": "#/definitions/login"
        }
      }
    },
    "dnsServers": {
      "type": "array",
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "optional",
            "version": [
              "ipv4"
            ]
          }
        },
        "x-alternatives": [
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv4"
                ]
              }
            }
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv6"
                ]
              }
            }
          }
        ]
      }
    },
    "jumboMtu": {
      "type": "object",
      "properties": {
        "maxMtu": {
          "type": "integer",
          "description": "Maximum configurable MTU value in bytes.",
          "example": 10000,
          "minimum": 0
        },
        "isCurrentMtuSynced": {
          "type": "boolean",
          "description": "Set to true if all interfaces have the same mtu.",
          "example": true
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to true if jumbo frames are enabled.",
          "example": true
        }
      }
    },
    "SpanningTreeProtocolSchema": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if STP is enabled.",
          "example": true
        },
        "maxAge": {
          "type": "integer",
          "description": "Length of time (in seconds) since last BPDU received on this port before aging out the BPDU and\n      initiating topology reconvergence.",
          "example": 30,
          "minimum": 6,
          "maximum": 40
        },
        "helloTime": {
          "type": "integer",
          "description": "Time between each bridge protocol data unit (BPDU) that is sent on a port (in seconds).\n      Updating hello time is disallowed per IEEE 802.1Q-REV 200.\n    ",
          "example": 2,
          "minimum": 0,
          "maximum": 100
        },
        "version": {
          "type": "string",
          "description": "Version of STP: RSTP (802.1w), MSTP (802.1s) or STP (802.1d).",
          "example": "RSTP",
          "enum": [
            "RSTP",
            "MSTP",
            "STP"
          ]
        },
        "forwardDelay": {
          "type": "integer",
          "description": "Time spent in listening and learning state (in seconds) prior to entering forwarding state.",
          "example": 30,
          "minimum": 4,
          "maximum": 30
        },
        "priority": {
          "type": "integer",
          "description": "STP root bridge priority.",
          "example": 32000,
          "minimum": 0,
          "maximum": 61440
        }
      },
      "required": [
        "enabled",
        "maxAge",
        "helloTime",
        "version",
        "forwardDelay",
        "priority"
      ]
    },
    "login1": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Read only user's username",
          "example": "readOnlyUser",
          "minLength": 1,
          "maxLength": 320,
          "pattern": "^[a-zA-Z0-9_-]*$"
        },
        "password": {
          "type": "string",
          "description": "Read only user's password",
          "example": "secretPa$$word",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "DeviceReadOnlyAccount": {
      "type": "object",
      "description": "Read only user's settings",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if a read only user is set",
          "example": true
        },
        "login": {
          "$ref": "#/definitions/login1"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "DeviceSystemConfiguration": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "timezoneList": {
          "$ref": "#/definitions/timezoneList"
        },
        "gateway": {
          "type": "string"
        },
        "domainName": {
          "type": "string"
        },
        "admin": {
          "$ref": "#/definitions/admin"
        },
        "clientIsolation": {
          "type": "boolean"
        },
        "igmpSnooping": {
          "type": "boolean"
        },
        "dhcpOption82": {
          "type": "boolean",
          "description": "Set to true to allow DHCP option 82",
          "example": true
        },
        "mtu": {
          "type": "integer",
          "minimum": 1
        },
        "accessFromSfp": {
          "type": "boolean"
        },
        "inbandManagementVlan": {
          "type": "integer",
          "minimum": 1,
          "maximum": 4063
        },
        "ipV4Address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "ipV4Gateway": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "ipV4AddressType": {
          "type": "string",
          "enum": [
            "dhcp",
            "slaac",
            "linkLocal",
            "static",
            "ppp"
          ]
        },
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dnsServers": {
          "$ref": "#/definitions/dnsServers"
        },
        "ipV6Address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "ipV6AddressType": {
          "type": "string",
          "enum": [
            "dhcp",
            "slaac",
            "linkLocal",
            "static",
            "ppp"
          ]
        },
        "ipV6Gateway": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "ipV6SlaacEnabled": {
          "type": "boolean",
          "description": "Set to true if Edge Switch has a SLAAC IPv6 address."
        },
        "jumboMtu": {
          "$ref": "#/definitions/jumboMtu"
        },
        "stp": {
          "$ref": "#/definitions/SpanningTreeProtocolSchema"
        },
        "readOnlyAccount": {
          "$ref": "#/definitions/DeviceReadOnlyAccount"
        }
      }
    },
    "DeviceStatusOverview3": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/definitions/ux"
        },
        "airmax": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/definitions/discovery"
        },
        "features": {
          "$ref": "#/definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/definitions/uisps"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceInterfaceListSchema"
        },
        "olt": {
          "$ref": "#/definitions/olt"
        },
        "onu": {
          "$ref": "#/definitions/DeviceOnu"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "Time series": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "example": 1713921005116.06
        },
        "y": {
          "type": "number",
          "example": "0.4"
        }
      },
      "required": [
        "x"
      ]
    },
    "avg": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Time%20series"
      }
    },
    "max": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Time%20series"
      }
    },
    "airTime": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/avg"
        },
        "max": {
          "$ref": "#/definitions/max"
        }
      }
    },
    "Model43": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "frequencyBands6": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/definitions/Model43"
      }
    },
    "frequency": {
      "type": "object",
      "properties": {
        "channelWidth": {
          "type": "number"
        },
        "frequencyCenter": {
          "type": "number"
        },
        "frequencyBands": {
          "$ref": "#/definitions/frequencyBands6"
        }
      }
    },
    "Model44": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "eth0"
        },
        "name": {
          "type": "string"
        },
        "radioLabel": {
          "type": "string"
        },
        "priority": {
          "type": "number"
        },
        "receive": {
          "$ref": "#/definitions/airTime"
        },
        "transmit": {
          "$ref": "#/definitions/airTime"
        },
        "rxMcs": {
          "$ref": "#/definitions/airTime"
        },
        "txMcs": {
          "$ref": "#/definitions/airTime"
        }
      }
    },
    "interfaces3": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model44"
      }
    },
    "interval": {
      "type": "object",
      "properties": {
        "start": {
          "type": "number"
        },
        "end": {
          "type": "number"
        }
      }
    },
    "stations2": {
      "type": "object"
    },
    "events": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "DeviceStatistics": {
      "type": "object",
      "properties": {
        "airTime": {
          "$ref": "#/definitions/airTime"
        },
        "ccq": {
          "$ref": "#/definitions/airTime"
        },
        "clients": {
          "$ref": "#/definitions/airTime"
        },
        "cpu": {
          "$ref": "#/definitions/airTime"
        },
        "downlinkCapacity": {
          "$ref": "#/definitions/airTime"
        },
        "downlinkUtilization": {
          "$ref": "#/definitions/airTime"
        },
        "downlinkScore": {
          "$ref": "#/definitions/airTime"
        },
        "errors": {
          "$ref": "#/definitions/airTime"
        },
        "frequency": {
          "$ref": "#/definitions/frequency"
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces3"
        },
        "interval": {
          "$ref": "#/definitions/interval"
        },
        "linkScore": {
          "$ref": "#/definitions/airTime"
        },
        "localChain1": {
          "$ref": "#/definitions/airTime"
        },
        "localChain0": {
          "$ref": "#/definitions/airTime"
        },
        "output": {
          "type": "string"
        },
        "period": {
          "type": "number"
        },
        "ping": {
          "$ref": "#/definitions/airTime"
        },
        "psu": {
          "type": "string"
        },
        "pv": {
          "type": "string"
        },
        "ram": {
          "$ref": "#/definitions/airTime"
        },
        "remoteChain1": {
          "$ref": "#/definitions/airTime"
        },
        "remoteChain0": {
          "$ref": "#/definitions/airTime"
        },
        "remoteSignal60g": {
          "$ref": "#/definitions/airTime"
        },
        "remoteSignal": {
          "$ref": "#/definitions/airTime"
        },
        "signal60g": {
          "$ref": "#/definitions/airTime"
        },
        "signal": {
          "$ref": "#/definitions/airTime"
        },
        "stations": {
          "$ref": "#/definitions/stations2"
        },
        "temperature": {
          "$ref": "#/definitions/airTime"
        },
        "uplinkCapacity": {
          "$ref": "#/definitions/airTime"
        },
        "uplinkUtilization": {
          "$ref": "#/definitions/airTime"
        },
        "uplinkScore": {
          "$ref": "#/definitions/airTime"
        },
        "utilization": {
          "$ref": "#/definitions/airTime"
        },
        "wirelessActiveInterfaceIds": {
          "$ref": "#/definitions/airTime"
        },
        "events": {
          "$ref": "#/definitions/events"
        }
      }
    },
    "login2": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Admin's username",
          "example": "admin",
          "minLength": 1,
          "maxLength": 320,
          "pattern": "^[a-zA-Z0-9_-]*$"
        },
        "password": {
          "type": "string",
          "description": "Admin's password",
          "example": "secretPa$$word",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": [
        "username"
      ]
    },
    "DeviceAdmin": {
      "type": "object",
      "description": "Admin settings",
      "properties": {
        "login": {
          "$ref": "#/definitions/login2"
        }
      }
    },
    "dnsServers1": {
      "type": "array",
      "description": "Array of IP addresses of DNS servers as IPv4 or IPv6",
      "example": [
        [
          "8.8.8.8"
        ]
      ],
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "optional",
            "version": [
              "ipv4"
            ]
          }
        },
        "x-alternatives": [
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv4"
                ]
              }
            }
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv6"
                ]
              }
            }
          }
        ]
      }
    },
    "DeviceSystem": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Device's hostname",
          "example": "UISP",
          "minLength": 2,
          "maxLength": 63
        },
        "domainName": {
          "type": "string",
          "description": "Device's domain name",
          "example": "UISP",
          "minLength": 2,
          "maxLength": 63
        },
        "timezone": {
          "type": "string",
          "description": "Device's time zone",
          "example": "UTC",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Ciudad_Juarez",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Nuuk",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Qatar",
            "Asia/Qostanay",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Kyiv",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kanton",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "admin": {
          "$ref": "#/definitions/DeviceAdmin"
        },
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "gateway": {
          "type": "string",
          "example": "192.168.0.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "example": "192.168.0.1",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "example": "fe80::66d1:54ff:fe07:edc9",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "readOnlyAccount": {
          "$ref": "#/definitions/DeviceReadOnlyAccount"
        },
        "mtu": {
          "type": "integer",
          "description": "MTU on GPON's ports",
          "example": 1518,
          "minimum": 1518,
          "maximum": 1982
        },
        "clientIsolation": {
          "type": "boolean",
          "description": "Set to true to isolate clients",
          "example": true
        },
        "igmpSnooping": {
          "type": "boolean",
          "description": "Set to true to enable IGMP snooping",
          "example": true
        },
        "accessFromSfp": {
          "type": "boolean",
          "description": "Set to true to allow access from SFP",
          "example": true
        },
        "dhcpOption82": {
          "type": "boolean",
          "description": "Set to true to allow DHCP option 82",
          "example": true
        },
        "inbandManagementVlan": {
          "type": "integer",
          "description": "Inband management VLAN",
          "example": 1,
          "minimum": 1,
          "maximum": 4063
        },
        "ipV4Address": {
          "type": "string",
          "description": "IP address in IPv4 cidr form",
          "example": "10.10.10.250/24",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "ipV4AddressType": {
          "type": "string",
          "description": "IP address origin",
          "example": "dhcp",
          "enum": [
            "dhcp",
            "static"
          ]
        },
        "ipV4Gateway": {
          "type": "string",
          "description": "IP address of default gateway in IPv4 form",
          "example": "10.10.10.1",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "dnsServers": {
          "$ref": "#/definitions/dnsServers1"
        },
        "ipV6Address": {
          "type": "string",
          "description": "IP address in IPv6 cidr form",
          "example": "fd7d:af83:32e5:8948::/64",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "ipV6AddressType": {
          "type": "string",
          "description": "IP address origin",
          "example": "slaac",
          "enum": [
            "dhcp",
            "slaac",
            "linkLocal",
            "static",
            "ppp"
          ]
        },
        "ipV6Gateway": {
          "type": "string",
          "description": "IP address of default gateway in IPv6 form",
          "example": "fd7d:af83:32e5:8948::1",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "ipV6SlaacEnabled": {
          "type": "boolean",
          "description": "Set to true if Edge Switch has a SLAAC IPv6 address.",
          "example": true
        },
        "stp": {
          "$ref": "#/definitions/SpanningTreeProtocolSchema"
        },
        "jumboMtu": {
          "$ref": "#/definitions/jumboMtu"
        },
        "timezoneList": {
          "$ref": "#/definitions/timezoneList"
        }
      },
      "required": [
        "name",
        "mtu"
      ]
    },
    "Model45": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model46": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model47": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model48": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model49": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model50": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model51": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model52": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model53": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model54": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model55": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model56": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "routerAdvertisement": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "priority": {
          "type": "string",
          "enum": [
            "low",
            "medium",
            "high"
          ]
        }
      }
    },
    "ipv6Modes": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          {
            "override": true
          },
          "ra-only"
        ]
      }
    },
    "Model57": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ipAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "macAddress": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "duid": {
          "type": "string"
        },
        "serverName": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server"
        },
        "type": {
          "type": "string",
          "enum": [
            "static"
          ]
        },
        "hostname": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "IP protocol number",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        }
      }
    },
    "staticLeases": {
      "type": "array",
      "description": "Static leases used.",
      "items": {
        "$ref": "#/definitions/Model57"
      }
    },
    "Model58": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ipAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "macAddress": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "serverName": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server"
        },
        "type": {
          "type": "string",
          "enum": [
            "dynamic"
          ]
        },
        "expiration": {
          "type": "number"
        },
        "leaseTimeRemaining": {
          "type": "number",
          "description": "Time in ms remaining till lease expiration",
          "example": 10000
        },
        "version": {
          "type": "string",
          "description": "IP protocol number",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "hostname": {
          "type": "string",
          "description": "Leased device hostname",
          "example": "device-1-name"
        },
        "duid": {
          "type": "string",
          "description": "Active lease id, for IPv6 only"
        }
      }
    },
    "activeLeases": {
      "type": "array",
      "description": "Static leases used.",
      "items": {
        "$ref": "#/definitions/Model58"
      }
    },
    "Model59": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dnsServers": {
          "$ref": "#/definitions/dnsServers"
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "uisp.com",
          "minLength": 1
        },
        "dynamicLeases": {
          "type": "number",
          "description": "Total amount of dynamic leases used.",
          "example": 5,
          "minimum": 0
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface id.",
          "example": "eth0"
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server"
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "required": [
            "rangeEnd"
          ],
          "x-alternatives": [
            {
              "type": "string",
              "description": "DHCP addresses pool end in CIDR format.",
              "example": "192.168.2.250/24",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "description": "DHCP addresses pool start.",
              "example": "::2",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "required": [
            "rangeStart",
            "rangeStart"
          ],
          "x-alternatives": [
            {
              "type": "string",
              "description": "DHCP addresses pool start in CIDR format.",
              "example": "192.168.2.51/24",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "description": "DHCP addresses pool start.",
              "example": "::2",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "routerAdvertisement": {
          "$ref": "#/definitions/routerAdvertisement"
        },
        "ipv6Modes": {
          "$ref": "#/definitions/ipv6Modes"
        },
        "ipv4Netmask": {
          "type": "number"
        },
        "ipv6Netmask": {
          "type": "number"
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "staticLeases": {
          "$ref": "#/definitions/staticLeases"
        },
        "activeLeases": {
          "$ref": "#/definitions/activeLeases"
        },
        "unifiController": {
          "type": "string",
          "description": "UniFi Application IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "enabled",
        "interface"
      ]
    },
    "dhcpServers": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model59"
      }
    },
    "Model60": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model61": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "quotaLimit": {
      "type": "object",
      "description": "Data quota limit - backup network won't be activated if transferred data cross this settings.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Quota limit is enabled.",
          "default": false
        },
        "quota": {
          "type": "integer",
          "description": "Monthly quota limit in MiB.",
          "default": 50,
          "minimum": 1
        },
        "resetDay": {
          "type": "integer",
          "description": "Monthly quota reset day.",
          "default": 1,
          "minimum": 1,
          "maximum": 31
        }
      }
    },
    "backupNet": {
      "type": "object",
      "description": "Configuration of Backup network.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable backup net service.",
          "default": false
        },
        "targetURL": {
          "type": "string",
          "description": "URL to use as a probe for switching to backup network. If the URL is not reachable, backup network is activated."
        },
        "quotaLimit": {
          "$ref": "#/definitions/quotaLimit"
        }
      }
    },
    "quotaLimit1": {
      "type": "object",
      "description": "SMS quota limit - SMS won't be sent if this limit is crossed.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "SMS limit is enabled.",
          "default": false
        },
        "quota": {
          "type": "integer",
          "description": "Monthly SMS limit.",
          "default": 50,
          "minimum": 1
        },
        "resetDay": {
          "type": "integer",
          "description": "Monthly SMS quota reset day.",
          "default": 1,
          "minimum": 1,
          "maximum": 31
        }
      }
    },
    "sms": {
      "type": "object",
      "description": "Configuration of SMS service.",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable SMS service.",
          "default": false
        },
        "receiver": {
          "type": "string",
          "description": "Phone number of the receiver."
        },
        "quotaLimit": {
          "$ref": "#/definitions/quotaLimit1"
        }
      }
    },
    "DeviceService": {
      "type": "object",
      "properties": {
        "ntpClient": {
          "$ref": "#/definitions/Model45",
          "required": [
            "ntpClient"
          ],
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/ntpClient"
            },
            {
              "$ref": "#/x-alt-definitions/ntpClient1"
            }
          ]
        },
        "sshServer": {
          "$ref": "#/definitions/Model46",
          "required": [
            "sshServer"
          ],
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/sshServer"
            },
            {
              "$ref": "#/x-alt-definitions/sshServer1"
            }
          ]
        },
        "systemLog": {
          "$ref": "#/definitions/Model47",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/systemLog"
            },
            {
              "$ref": "#/x-alt-definitions/systemLog1"
            }
          ]
        },
        "telnetServer": {
          "$ref": "#/definitions/Model48",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/telnetServer"
            },
            {
              "$ref": "#/x-alt-definitions/telnetServer1"
            }
          ]
        },
        "snmpAgent": {
          "$ref": "#/definitions/Model49",
          "required": [
            "snmpAgent"
          ],
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/snmpAgent"
            },
            {
              "$ref": "#/x-alt-definitions/snmpAgent1"
            }
          ]
        },
        "webServer": {
          "$ref": "#/definitions/Model50",
          "required": [
            "webServer"
          ],
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/webServer"
            },
            {
              "$ref": "#/x-alt-definitions/webServer1"
            }
          ]
        },
        "dnsForwarder": {
          "$ref": "#/definitions/Model51",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/dnsForwarder"
            },
            {
              "$ref": "#/x-alt-definitions/dnsForwarder1"
            }
          ]
        },
        "ddns": {
          "$ref": "#/definitions/Model52",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/ddns"
            },
            {
              "$ref": "#/x-alt-definitions/ddns1"
            }
          ]
        },
        "discovery": {
          "$ref": "#/definitions/Model53",
          "required": [
            "discovery"
          ],
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/discovery1"
            },
            {
              "$ref": "#/x-alt-definitions/discovery2"
            }
          ]
        },
        "portForwarding": {
          "$ref": "#/definitions/Model54",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/portForwarding"
            },
            {
              "$ref": "#/x-alt-definitions/portForwarding1"
            }
          ]
        },
        "lteModem": {
          "$ref": "#/definitions/Model55",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/lteModem"
            },
            {
              "$ref": "#/x-alt-definitions/lteModem1"
            },
            {
              "$ref": "#/x-alt-definitions/lteModem2"
            }
          ]
        },
        "dhcpPool": {
          "$ref": "#/definitions/Model56",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/dhcpPool"
            },
            {
              "$ref": "#/x-alt-definitions/dhcpPool1"
            }
          ]
        },
        "dhcpServers": {
          "$ref": "#/definitions/dhcpServers"
        },
        "mdns": {
          "$ref": "#/definitions/Model60",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/mdns"
            },
            {
              "$ref": "#/x-alt-definitions/mdns1"
            }
          ]
        },
        "upnp": {
          "$ref": "#/definitions/Model61",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/upnp"
            },
            {
              "$ref": "#/x-alt-definitions/upnp1"
            }
          ]
        },
        "backupNet": {
          "$ref": "#/definitions/backupNet"
        },
        "sms": {
          "$ref": "#/definitions/sms"
        }
      }
    },
    "Model62": {
      "type": "object",
      "properties": {
        "system": {
          "$ref": "#/definitions/DeviceSystem"
        },
        "services": {
          "$ref": "#/definitions/DeviceService"
        }
      }
    },
    "addresses1": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Custom IP address in IPv4 or IPv6 format.",
        "example": "192.168.1.22",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "identification4": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        }
      },
      "required": [
        "id"
      ]
    },
    "overview2": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "description": "Read-only value generated by UISP."
        }
      }
    },
    "device3": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UISP."
        },
        "connected": {
          "type": "boolean"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "identification": {
          "$ref": "#/definitions/identification4"
        },
        "overview": {
          "$ref": "#/definitions/overview2"
        }
      },
      "required": [
        "id"
      ]
    },
    "parent5": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "site4": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "parent": {
          "$ref": "#/definitions/parent5"
        }
      }
    },
    "Model63": {
      "type": "object",
      "properties": {
        "interfaceId": {
          "type": "string"
        },
        "addresses": {
          "$ref": "#/definitions/addresses1"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "vlan": {
          "type": "number"
        },
        "hostname": {
          "type": "string"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "device": {
          "$ref": "#/definitions/device3"
        },
        "site": {
          "$ref": "#/definitions/site4"
        }
      }
    },
    "macTable": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model63"
      }
    },
    "Pagination1": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "description": "selected items",
          "minimum": 0
        },
        "page": {
          "type": "integer",
          "description": "actual page",
          "minimum": 1
        },
        "pages": {
          "type": "integer",
          "description": "pages count",
          "minimum": 1
        },
        "total": {
          "type": "integer",
          "description": "count of found items",
          "minimum": 0
        }
      }
    },
    "MacTableSchema": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "macTable": {
          "$ref": "#/definitions/macTable"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination1"
        }
      },
      "required": [
        "deviceId"
      ]
    },
    "VlansInterfaceSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique interface id",
          "example": "port1"
        },
        "name": {
          "type": "string",
          "description": "Custom interface name",
          "example": "Port one"
        },
        "mac": {
          "type": "string",
          "description": "Interface mac address",
          "example": "04:18:d6:a0:f0:47",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "type": {
          "type": "string",
          "description": "Interface type",
          "example": "port",
          "enum": [
            "eth",
            "switch",
            "port",
            "pon",
            "br",
            "pppoe",
            "vlan",
            "sfp+",
            "wlan",
            "ath",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      },
      "required": [
        "id",
        "name",
        "mac",
        "type"
      ]
    },
    "Model64": {
      "type": "object",
      "properties": {
        "interface": {
          "$ref": "#/definitions/VlansInterfaceSchema"
        }
      }
    },
    "trunks": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model64"
      }
    },
    "Model65": {
      "type": "object",
      "properties": {
        "interface": {
          "$ref": "#/definitions/VlansInterfaceSchema"
        },
        "mode": {
          "type": "string",
          "description": "VLAN mode",
          "example": "tagged",
          "enum": [
            "tagged",
            "untagged"
          ]
        }
      },
      "required": [
        "mode"
      ]
    },
    "participation": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model65"
      }
    },
    "Model66": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "VLAN type",
          "example": "single",
          "enum": [
            "single",
            "range"
          ]
        },
        "id": {
          "type": "integer",
          "minimum": 1,
          "required": [
            "id",
            "id"
          ],
          "x-alternatives": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "type": "string"
            }
          ]
        },
        "name": {
          "type": "string",
          "description": "VLAN name",
          "example": "default"
        },
        "dynamic": {
          "type": "boolean"
        },
        "participation": {
          "$ref": "#/definitions/participation"
        }
      },
      "required": [
        "type",
        "name"
      ]
    },
    "vlans2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model66"
      }
    },
    "Model67": {
      "type": "object",
      "properties": {
        "trunks": {
          "$ref": "#/definitions/trunks"
        },
        "vlans": {
          "$ref": "#/definitions/vlans2"
        },
        "trunkUndefinedVlans": {
          "type": "boolean",
          "description": "If enabled, trunks ports carries all VLANs, except those defined as excluded in VLANs array.",
          "example": true
        }
      },
      "required": [
        "trunkUndefinedVlans"
      ]
    },
    "Model68": {
      "type": "object",
      "properties": {
        "netflowStatus": {
          "type": "string",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom",
            "maintenance",
            "incompatible",
            "unmonitored",
            "unassigned",
            "misconfigured",
            "preregistration"
          ]
        }
      }
    },
    "Model69": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "description": "Device's display name",
          "example": "Main router"
        },
        "deviceType": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "ipAddress": {
          "type": "string",
          "description": "Devices IPv4 address",
          "example": "192.168.22.10",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rxRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 325
        },
        "txRate": {
          "type": "integer",
          "description": "Current upload speed in bps.",
          "example": 325
        },
        "mac": {
          "type": "string",
          "description": "Client device interface MAC address",
          "example": "E8:49:50:8A:BD:19",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        }
      },
      "required": [
        "deviceId",
        "mac"
      ]
    },
    "Model70": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model69"
      }
    },
    "DeviceBackup": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "cfg",
            "tar"
          ]
        },
        "extension": {
          "type": "string"
        },
        "timestamp": {
          "type": "string",
          "format": "date"
        },
        "firmwareVersion": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        },
        "filename": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "pinned": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "type",
        "extension",
        "timestamp"
      ]
    },
    "DeviceBackupList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeviceBackup"
      }
    },
    "Model71": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "connected": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "error": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "snmpCommunity": {
          "type": "string"
        },
        "duplicateOf": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "deviceId",
        "connected",
        "name",
        "status",
        "error",
        "protocol",
        "snmpCommunity",
        "duplicateOf"
      ]
    },
    "ActiveQuestionnaire": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "ID of the currently active questionnaire. Null if no questionnaire is active.",
          "example": "Q1"
        }
      },
      "required": [
        "id"
      ]
    },
    "SiteIdentificationDetail1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": [
            "site",
            "endpoint"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        },
        "parent": {
          "$ref": "#/definitions/parent4"
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status"
      ]
    },
    "Model72": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "site": {
          "$ref": "#/definitions/SiteIdentificationDetail1"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "vendor": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "system": {
          "type": "string"
        },
        "ispName": {
          "type": "string",
          "example": "Czechia ISP - Ostrava"
        },
        "publicIp": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            }
          ]
        },
        "downloadRateBytes": {
          "type": "number",
          "example": 44834803561
        },
        "uploadRateBytes": {
          "type": "number",
          "example": 8385
        },
        "endpoint": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "One of [INTERNET, LOCAL_DEVICE]",
          "example": "INTERNET",
          "enum": [
            "INTERNET",
            "LOCAL_DEVICE"
          ]
        },
        "serverName": {
          "type": "string",
          "example": "uisp.com"
        },
        "downloadSpeedBytes": {
          "type": "number",
          "example": 125000000
        },
        "uploadSpeedBytes": {
          "type": "number",
          "example": 625000000
        },
        "platform": {
          "type": "string",
          "example": "One of [App, Web]",
          "enum": [
            "Web",
            "App"
          ]
        }
      }
    },
    "items2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model72"
      }
    },
    "Model73": {
      "type": "object",
      "properties": {
        "items": {
          "$ref": "#/definitions/items2"
        },
        "pagination": {
          "$ref": "#/definitions/Pagination1"
        }
      }
    },
    "BlacklistSchema": {
      "type": "array",
      "x-constraint": {
        "unique": true
      },
      "items": {
        "type": "string",
        "description": "Blacklisted address or subnet in cidr format.",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "configuredSubnets": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "IP subnet in cidr notation",
        "example": "192.168.1.0/24"
      }
    },
    "Model74": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "deviceId": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "deviceName": {
          "type": "string"
        },
        "deviceType": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "interfaceId": {
          "type": "string",
          "description": "Interface name.",
          "example": "eth0"
        }
      },
      "required": [
        "deviceId"
      ]
    },
    "ips1": {
      "type": "array",
      "description": "List of IPs objects in UISP within the subnet with deviceId and interfaceId.",
      "items": {
        "$ref": "#/definitions/Model74"
      }
    },
    "SubnetWithIpSchema": {
      "type": "object",
      "properties": {
        "subnet": {
          "type": "string",
          "description": "IP subnet in cidr notation",
          "example": "192.168.1.0/24"
        },
        "ips": {
          "$ref": "#/definitions/ips1"
        }
      },
      "required": [
        "ips"
      ]
    },
    "validSubnets": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SubnetWithIpSchema"
      }
    },
    "invalidSubnets": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SubnetWithIpSchema"
      }
    },
    "SubnetList": {
      "type": "object",
      "properties": {
        "configuredSubnets": {
          "$ref": "#/definitions/configuredSubnets"
        },
        "validSubnets": {
          "$ref": "#/definitions/validSubnets"
        },
        "invalidSubnets": {
          "$ref": "#/definitions/invalidSubnets"
        }
      }
    },
    "Model75": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "description": "Id of uplink device, if there is any",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "mainDeviceId": {
          "type": "string",
          "description": "Id of Subscriber's main device, if there is any",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "subscriberId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "trafficSummary": {
          "type": "number",
          "description": "Total number of bytes downloaded and uploaded during previous 24 hours",
          "example": 986305
        },
        "rxCapacity": {
          "type": "integer",
          "description": "Capacity of uplink device in the site in bps",
          "example": 1000000000,
          "minimum": 0
        },
        "txCapacity": {
          "type": "integer",
          "description": "Capacity of downlink device in the site in bps",
          "example": 1000000000,
          "minimum": 0
        },
        "rxThroughput": {
          "type": "integer",
          "description": "Current throughput of uplink device in the site in bps",
          "example": 1000000000,
          "minimum": 0
        },
        "txThroughput": {
          "type": "integer",
          "description": "Current throughput of downlink device in the site in bps",
          "example": 1000000000,
          "minimum": 0
        }
      },
      "required": [
        "deviceId",
        "mainDeviceId",
        "subscriberId"
      ]
    },
    "Model76": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model75"
      }
    },
    "interval1": {
      "type": "object",
      "properties": {
        "start": {
          "type": "number",
          "example": 1534426227215
        },
        "end": {
          "type": "number",
          "example": 1534422627215
        }
      },
      "required": [
        "start",
        "end"
      ]
    },
    "GraphDataPoint": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "Milliseconds elapsed between 1 January 1970 00:00:00 UTC and the given date",
          "example": 1534426215000
        },
        "y": {
          "type": "number",
          "description": "Data point value. null if we do not have any value for given timestamp.",
          "example": 10193
        }
      },
      "required": [
        "x"
      ]
    },
    "GraphDataSet": {
      "type": "array",
      "description": "Generic graph data set",
      "items": {
        "$ref": "#/definitions/GraphDataPoint"
      }
    },
    "download1": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/GraphDataSet"
        },
        "max": {
          "$ref": "#/definitions/GraphDataSet"
        }
      }
    },
    "upload1": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/GraphDataSet"
        },
        "max": {
          "$ref": "#/definitions/GraphDataSet"
        }
      }
    },
    "ping": {
      "type": "object",
      "properties": {
        "avg": {
          "$ref": "#/definitions/GraphDataSet"
        },
        "max": {
          "$ref": "#/definitions/GraphDataSet"
        }
      }
    },
    "SitesStatistics": {
      "type": "object",
      "properties": {
        "period": {
          "type": "number",
          "description": "Number of milliseconds between data points",
          "example": 15000
        },
        "interval": {
          "$ref": "#/definitions/interval1"
        },
        "download": {
          "$ref": "#/definitions/download1"
        },
        "upload": {
          "$ref": "#/definitions/upload1"
        },
        "ping": {
          "$ref": "#/definitions/ping"
        }
      }
    },
    "ImageIdentification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "date": {
      "type": "object"
    },
    "Image": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "identification": {
          "$ref": "#/definitions/ImageIdentification"
        },
        "name": {
          "type": "string"
        },
        "height": {
          "type": "number"
        },
        "width": {
          "type": "number"
        },
        "size": {
          "type": "number"
        },
        "order": {
          "type": "number"
        },
        "date": {
          "$ref": "#/definitions/date"
        },
        "description": {
          "type": "string"
        },
        "fileName": {
          "type": "string"
        },
        "fileType": {
          "type": "string"
        },
        "fullUrl": {
          "type": "string"
        },
        "fullUrlRelative": {
          "type": "string"
        },
        "thumbUrl": {
          "type": "string"
        },
        "thumbUrlRelative": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "identification",
        "height",
        "width",
        "size",
        "order",
        "date",
        "description",
        "fileName",
        "fileType",
        "fullUrl",
        "thumbUrl"
      ]
    },
    "ListOfImages": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Image"
      }
    },
    "identification5": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "name": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "model",
        "role"
      ]
    },
    "overview3": {
      "type": "object",
      "properties": {
        "outageScore": {
          "type": "number"
        },
        "linkScore": {
          "type": "number"
        },
        "linkCapacity": {
          "type": "number"
        }
      }
    },
    "Model77": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification5"
        },
        "parentDeviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "parentInterfaceId": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/definitions/overview3"
        },
        "statistics": {
          "$ref": "#/definitions/SitesStatistics"
        },
        "wanInterfaceId": {
          "type": "string"
        }
      }
    },
    "Model78": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model77"
      }
    },
    "Model79": {
      "type": "array",
      "description": "Ids of client sites",
      "example": [
        [
          "3e6abc14-5cc1-483f-934a-ed31ebb2a33a"
        ]
      ],
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "Traffic1": {
      "type": "object",
      "properties": {
        "time": {
          "type": "number",
          "description": "Start of the aggregated time interval as a timestamp in milliseconds",
          "example": 1524751200000
        },
        "upload": {
          "type": "number",
          "description": "Total number of bytes uploaded during interval",
          "example": 1006051
        },
        "download": {
          "type": "number",
          "description": "Total number of bytes downloaded during interval",
          "example": 986305
        }
      },
      "required": [
        "time",
        "upload",
        "download"
      ]
    },
    "TrafficList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Traffic1"
      }
    },
    "SiteTrafficShaping2": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE if optional Traffic Shaping queue are activated.",
          "example": true
        },
        "propagation": {
          "type": "string",
          "description": "\n      Whether or not set Traffic Shaping on Client devices like, CPEs and ONUs.\n      Enabling this will lower your traffic in local network.\n    ",
          "enum": [
            "all",
            "gateway"
          ]
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Download speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "downloadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at downloadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Upload speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "uploadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at uploadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "aggregation": {
          "type": "integer",
          "description": "\n      Number indicating how many times the guaranteed rate is less than the maximum allowed bandwidth.\n      Null for auto calculation by UISP.\n    ",
          "example": 2,
          "minimum": 1,
          "maximum": 10000
        }
      },
      "required": [
        "enabled",
        "downloadSpeed",
        "downloadBurstSize",
        "uploadSpeed",
        "uploadBurstSize",
        "aggregation"
      ]
    },
    "Model80": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "enum": [
            "outage",
            "power-source-error",
            "gateway-netflow-error",
            "dfs-channel-change"
          ]
        },
        "name": {
          "type": "string",
          "enum": [
            "Outage",
            "Power Source Error",
            "Gateway Netflow Error",
            "Dynamic Frequency Selection (DFS)"
          ]
        },
        "description": {
          "type": "string",
          "enum": [
            "All error messages",
            "Power source disconnected",
            "Gateways have stopped reporting data flow",
            "Dynamic Frequency Selection channel changes"
          ]
        },
        "email": {
          "type": "boolean"
        },
        "push": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name",
        "description"
      ]
    },
    "notificationTypes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model80"
      }
    },
    "Model81": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "generic",
          "enum": [
            "generic",
            "power",
            "netflow",
            "dfs"
          ]
        },
        "name": {
          "type": "string",
          "example": "Critical",
          "enum": [
            "Critical",
            "Power",
            "Netflow",
            "DFS"
          ]
        },
        "notificationTypes": {
          "$ref": "#/definitions/notificationTypes"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "sections": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model81"
      }
    },
    "Model82": {
      "type": "object",
      "properties": {
        "alertsEnabled": {
          "type": "boolean"
        },
        "sections": {
          "$ref": "#/definitions/sections"
        }
      },
      "required": [
        "alertsEnabled"
      ]
    },
    "Model83": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "sshPort": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "httpsPort": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        }
      },
      "required": [
        "deviceId"
      ]
    },
    "credentials": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model83"
      }
    },
    "Device list credentials": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/credentials"
        },
        "isPassphraseMissing": {
          "type": "boolean"
        }
      },
      "required": [
        "credentials"
      ]
    },
    "Device's credentials": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "readOnly": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        }
      }
    },
    "Device's credentials with flags": {
      "type": "object",
      "properties": {
        "credentials": {
          "$ref": "#/definitions/Device's%20credentials"
        },
        "isPassphraseMissing": {
          "type": "boolean"
        }
      },
      "required": [
        "credentials"
      ]
    },
    "ledNightMode": {
      "type": "object",
      "properties": {
        "enable": {
          "type": "boolean"
        },
        "start": {
          "type": "number"
        },
        "end": {
          "type": "number"
        }
      },
      "required": [
        "enable",
        "start",
        "end"
      ]
    },
    "AirCubeSystemConfig": {
      "type": "object",
      "properties": {
        "deviceName": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "zonename": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        },
        "ledNightMode": {
          "$ref": "#/definitions/ledNightMode"
        },
        "poePassthrough": {
          "type": "boolean"
        },
        "resetButtonEnabled": {
          "type": "boolean"
        }
      },
      "required": [
        "deviceName",
        "timezone",
        "zonename",
        "username",
        "poePassthrough",
        "resetButtonEnabled"
      ]
    },
    "wifi2Ghz": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "available": {
          "type": "boolean"
        },
        "channel": {
          "type": "number",
          "x-alternatives": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "enum": [
                "auto"
              ]
            }
          ]
        },
        "country": {
          "type": "string"
        },
        "encryption": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "channelWidth": {
          "type": "number",
          "example": 20
        },
        "isWPA2PSKEnabled": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "ssid": {
          "type": "string"
        },
        "txPower": {
          "type": "number"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "isChannelAuto": {
          "type": "boolean"
        },
        "frequency": {
          "type": "number"
        }
      },
      "required": [
        "enabled",
        "authentication",
        "available",
        "channel",
        "encryption",
        "channelWidth",
        "key",
        "mode",
        "ssid",
        "txPower"
      ]
    },
    "wifi5Ghz": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "available": {
          "type": "boolean"
        },
        "channel": {
          "type": "number",
          "x-alternatives": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "enum": [
                "auto"
              ]
            }
          ]
        },
        "country": {
          "type": "string"
        },
        "encryption": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "channelWidth": {
          "type": "number",
          "example": 40
        },
        "isWPA2PSKEnabled": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "ssid": {
          "type": "string"
        },
        "txPower": {
          "type": "number"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "isChannelAuto": {
          "type": "boolean"
        },
        "frequency": {
          "type": "number"
        }
      },
      "required": [
        "enabled",
        "authentication",
        "available",
        "channel",
        "encryption",
        "channelWidth",
        "key",
        "mode",
        "ssid",
        "txPower"
      ]
    },
    "AirCubeWifiConfig": {
      "type": "object",
      "properties": {
        "wifi2Ghz": {
          "$ref": "#/definitions/wifi2Ghz"
        },
        "wifi5Ghz": {
          "$ref": "#/definitions/wifi5Ghz"
        },
        "wifiMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        }
      }
    },
    "radio2GhzTxPowerList": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "radio5GhzTxPowerList": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "TxPowerList": {
      "type": "object",
      "properties": {
        "radio2GhzTxPowerList": {
          "$ref": "#/definitions/radio2GhzTxPowerList"
        },
        "radio5GhzTxPowerList": {
          "$ref": "#/definitions/radio5GhzTxPowerList"
        }
      },
      "required": [
        "radio2GhzTxPowerList",
        "radio5GhzTxPowerList"
      ]
    },
    "Model84": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Station"
      }
    },
    "Model85": {
      "type": "object",
      "properties": {
        "channel": {
          "type": "number"
        },
        "mhz": {
          "type": "number"
        },
        "restricted": {
          "type": "boolean"
        },
        "active": {
          "type": "boolean"
        }
      }
    },
    "radio2GhzFrequencyList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model85"
      }
    },
    "radio5GhzFrequencyList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model85"
      }
    },
    "FrequencyList": {
      "type": "object",
      "properties": {
        "radio2GhzFrequencyList": {
          "$ref": "#/definitions/radio2GhzFrequencyList"
        },
        "radio5GhzFrequencyList": {
          "$ref": "#/definitions/radio5GhzFrequencyList"
        }
      },
      "required": [
        "radio2GhzFrequencyList",
        "radio5GhzFrequencyList"
      ]
    },
    "dataVlan": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 1,
          "maximum": 4096
        }
      },
      "required": [
        "enabled",
        "id"
      ]
    },
    "interfaceNames": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "dns": {
      "type": "array",
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "forbidden",
            "version": [
              "ipv4"
            ]
          }
        }
      }
    },
    "dhcp": {
      "type": "object",
      "properties": {
        "ignore": {
          "type": "boolean"
        },
        "interface": {
          "type": "string"
        },
        "rangeStart": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeEnd": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "leaseTime": {
          "type": "string"
        }
      },
      "required": [
        "ignore",
        "rangeStart",
        "rangeEnd"
      ]
    },
    "lan": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "bridge",
            "router",
            "soho"
          ]
        },
        "interfaceNames": {
          "$ref": "#/definitions/interfaceNames"
        },
        "gateway": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "cidr": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "proto": {
          "type": "string",
          "enum": [
            "static",
            "dhcp",
            "pppoe"
          ]
        },
        "dns": {
          "$ref": "#/definitions/dns"
        },
        "dhcp": {
          "$ref": "#/definitions/dhcp"
        }
      },
      "required": [
        "type",
        "interfaceNames",
        "gateway",
        "cidr",
        "proto"
      ]
    },
    "wan": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "interfaceNames": {
          "$ref": "#/definitions/interfaceNames"
        },
        "cidr": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "gateway": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "proto": {
          "type": "string",
          "enum": [
            "static",
            "dhcp",
            "pppoe"
          ]
        },
        "dns": {
          "$ref": "#/definitions/dns"
        },
        "service": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "interfaceNames",
        "cidr",
        "gateway",
        "proto",
        "service",
        "username",
        "password"
      ]
    },
    "mgt": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "vlanId": {
          "type": "integer",
          "minimum": 1,
          "maximum": 4096
        },
        "proto": {
          "type": "string",
          "enum": [
            "static",
            "dhcp",
            "pppoe"
          ]
        },
        "cidr": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "service": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "vlanId",
        "proto",
        "cidr",
        "service",
        "username",
        "password"
      ]
    },
    "ports2": {
      "type": "array",
      "items": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3
      }
    },
    "vlp1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "vlanId": {
          "type": "integer",
          "minimum": 1,
          "maximum": 4096
        },
        "ports": {
          "$ref": "#/definitions/ports2"
        },
        "tagged": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "vlanId",
        "tagged"
      ]
    },
    "ports3": {
      "type": "array",
      "items": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3
      }
    },
    "vlp2": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "vlanId": {
          "type": "integer",
          "minimum": 1,
          "maximum": 4096
        },
        "ports": {
          "$ref": "#/definitions/ports3"
        },
        "tagged": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "vlanId",
        "tagged"
      ]
    },
    "ports4": {
      "type": "array",
      "items": {
        "type": "integer",
        "minimum": 1,
        "maximum": 3
      }
    },
    "vlp3": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "vlanId": {
          "type": "integer",
          "minimum": 1,
          "maximum": 4096
        },
        "ports": {
          "$ref": "#/definitions/ports4"
        },
        "tagged": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled",
        "vlanId",
        "tagged"
      ]
    },
    "upnpd": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "portForwardRules": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/validation",
        "x-alternatives": [
          {
            "$ref": "#/x-alt-definitions/parent"
          },
          {
            "$ref": "#/x-alt-definitions/addressComponents"
          }
        ]
      }
    },
    "staticRoutes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/validation",
        "x-alternatives": [
          {
            "$ref": "#/x-alt-definitions/parent"
          },
          {
            "$ref": "#/x-alt-definitions/addressComponents"
          }
        ]
      }
    },
    "staticDhcpLeases": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/validation",
        "x-alternatives": [
          {
            "$ref": "#/x-alt-definitions/parent"
          },
          {
            "$ref": "#/x-alt-definitions/addressComponents"
          }
        ]
      }
    },
    "AirCubeNetworkConfig": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "bridge",
            "router",
            "soho"
          ]
        },
        "blockManagementAccess": {
          "type": "boolean"
        },
        "dataVlan": {
          "$ref": "#/definitions/dataVlan"
        },
        "lan": {
          "$ref": "#/definitions/lan"
        },
        "wan": {
          "$ref": "#/definitions/wan"
        },
        "mgt": {
          "$ref": "#/definitions/mgt"
        },
        "vlp1": {
          "$ref": "#/definitions/vlp1"
        },
        "vlp2": {
          "$ref": "#/definitions/vlp2"
        },
        "vlp3": {
          "$ref": "#/definitions/vlp3"
        },
        "upnpd": {
          "$ref": "#/definitions/upnpd"
        },
        "natEnabled": {
          "type": "boolean"
        },
        "portForwardRules": {
          "$ref": "#/definitions/portForwardRules"
        },
        "staticRoutes": {
          "$ref": "#/definitions/staticRoutes"
        },
        "staticDhcpLeases": {
          "$ref": "#/definitions/staticDhcpLeases"
        }
      },
      "required": [
        "mode",
        "blockManagementAccess",
        "portForwardRules",
        "staticRoutes",
        "staticDhcpLeases"
      ]
    },
    "Model86": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Station"
      }
    },
    "Model87": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "f7ac9cad-ea28-4390-93c8-7add010e8ee3": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/definitions/Model87"
      }
    },
    "SiteAround": {
      "type": "object",
      "properties": {
        "airmaxMode": {
          "type": "string"
        },
        "bandString": {
          "type": "string"
        },
        "encryption": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "frequency": {
          "type": "number"
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "example": "F2:9F:C2:6E:AB:AEguest-wifiwpa2"
        },
        "isAirmaxEnabled": {
          "type": "boolean"
        },
        "isWirelessModeValid": {
          "type": "boolean"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "mode": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "noiseLevel": {
          "type": "number"
        },
        "signalLevel": {
          "type": "number"
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "isValidEncryption": {
          "type": "boolean"
        },
        "htcap": {
          "type": "number"
        }
      }
    },
    "ListOfSitesAround": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/SiteAround"
      }
    },
    "ListOfAirmaxStations": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Station"
      }
    },
    "login3": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "username"
      ]
    },
    "admin1": {
      "type": "object",
      "properties": {
        "login": {
          "$ref": "#/definitions/login3"
        }
      }
    },
    "Model88": {
      "type": "object",
      "properties": {
        "admin": {
          "$ref": "#/definitions/admin1"
        }
      }
    },
    "Model89": {
      "type": "object",
      "properties": {
        "center": {
          "type": "integer"
        },
        "control": {
          "type": "integer"
        },
        "ch": {
          "type": "integer"
        },
        "bw": {
          "type": "integer"
        },
        "maxEirp": {
          "type": "integer"
        },
        "dfs": {
          "type": "boolean"
        },
        "ptpOnly": {
          "type": "boolean"
        },
        "ptmpOnly": {
          "type": "boolean"
        },
        "indoorOnly": {
          "type": "boolean"
        }
      }
    },
    "Model90": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model89"
      }
    },
    "Model91": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "channels": {
          "$ref": "#/definitions/Model90",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/channels"
            },
            {
              "$ref": "#/x-alt-definitions/channels1"
            }
          ]
        }
      }
    },
    "interfaces4": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model91"
      }
    },
    "Model92": {
      "type": "object",
      "properties": {
        "countryCode": {
          "type": "string"
        },
        "countryName": {
          "type": "string"
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces4"
        }
      },
      "required": [
        "countryCode",
        "countryName"
      ]
    },
    "Model93": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "version": {
          "type": "string",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        }
      }
    },
    "Model94": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model93"
      }
    },
    "Model95": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "version": {
          "type": "string",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "cidr": {
          "type": "string"
        },
        "gatewayAddress": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "cidr",
        "gatewayAddress"
      ]
    },
    "staticRoutes1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model95"
      }
    },
    "trafficShaping": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "uplinkRate": {
          "type": "integer"
        },
        "uplinkBurst": {
          "type": "integer"
        },
        "downlinkRate": {
          "type": "integer"
        },
        "downlinkBurst": {
          "type": "integer"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "physicalPortManagement": {
      "type": "object",
      "properties": {
        "auto": {
          "type": "boolean"
        }
      },
      "required": [
        "auto"
      ]
    },
    "flowControl": {
      "type": "object",
      "properties": {
        "receive": {
          "type": "boolean"
        },
        "transmit": {
          "type": "boolean"
        }
      }
    },
    "Model96": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "speed": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "flowControl": {
          "$ref": "#/definitions/flowControl"
        }
      },
      "required": [
        "id",
        "speed",
        "enabled",
        "flowControl"
      ]
    },
    "physicalPorts": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model96"
      }
    },
    "source": {
      "type": "object",
      "properties": {
        "cidr": {
          "type": "string"
        },
        "invertCidr": {
          "type": "boolean"
        },
        "port": {
          "type": "integer"
        },
        "invertPort": {
          "type": "boolean"
        }
      }
    },
    "Model97": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "version": {
          "type": "string",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "target": {
          "type": "string",
          "enum": [
            "Accept",
            "Drop"
          ]
        },
        "protocol": {
          "type": "string",
          "enum": [
            "IP",
            "ICMP",
            "TCP",
            "UDP",
            "P2P"
          ]
        },
        "source": {
          "$ref": "#/definitions/source"
        },
        "destination": {
          "$ref": "#/definitions/source"
        },
        "comment": {
          "type": "string"
        },
        "inputInterface": {
          "type": "string",
          "enum": [
            "any"
          ]
        },
        "outputInterface": {
          "type": "string",
          "enum": [
            "any"
          ]
        }
      },
      "required": [
        "enabled",
        "version",
        "target"
      ]
    },
    "firewall": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model97"
      }
    },
    "interfaces5": {
      "type": "object",
      "properties": {
        "wan": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        },
        "lan": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        },
        "data": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        },
        "data2": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        },
        "mgmt": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        }
      }
    },
    "network": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "bridge",
            "router"
          ]
        },
        "dnsServers": {
          "$ref": "#/definitions/Model94",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/dnsServers"
            },
            {
              "$ref": "#/x-alt-definitions/dnsServers1"
            }
          ]
        },
        "staticRoutes": {
          "$ref": "#/definitions/staticRoutes1"
        },
        "trafficShaping": {
          "$ref": "#/definitions/trafficShaping"
        },
        "physicalPortManagement": {
          "$ref": "#/definitions/physicalPortManagement"
        },
        "physicalPorts": {
          "$ref": "#/definitions/physicalPorts"
        },
        "hasAdvancedConfiguration": {
          "type": "boolean"
        },
        "advancedConfigurationMessage": {
          "type": "string"
        },
        "firewall": {
          "$ref": "#/definitions/firewall"
        },
        "mtu": {
          "type": "integer",
          "minimum": 1280,
          "maximum": 2024
        },
        "stp": {
          "type": "boolean"
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces5"
        }
      },
      "required": [
        "hasAdvancedConfiguration",
        "interfaces"
      ]
    },
    "location2": {
      "type": "object",
      "properties": {
        "lat": {
          "type": "number",
          "minimum": -90,
          "maximum": 90
        },
        "lon": {
          "type": "number",
          "minimum": -180,
          "maximum": 180
        },
        "hgt": {
          "type": "number"
        },
        "alt": {
          "type": "number"
        }
      }
    },
    "system": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "timezone": {
          "type": "string",
          "description": "AirOs device's time zone",
          "example": "UTC",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Ciudad_Juarez",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Nuuk",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Qatar",
            "Asia/Qostanay",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Kyiv",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kanton",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu",
            "Africa/Addis Ababa",
            "Africa/Dar es Salaam",
            "Africa/El Aaiun",
            "Africa/Sao Tome",
            "America/Argentina/Buenos Aires",
            "America/Argentina/La Rioja",
            "America/Argentina/Rio Gallegos",
            "America/Argentina/San Juan",
            "America/Argentina/San Luis",
            "America/Bahia Banderas",
            "America/Boa Vista",
            "America/Buenos Aires",
            "America/Cambridge Bay",
            "America/Campo Grande",
            "America/Ciudad Juarez",
            "America/Coral Harbour",
            "America/Costa Rica",
            "America/Dawson Creek",
            "America/El Salvador",
            "America/Fort Nelson",
            "America/Fort Wayne",
            "America/Glace Bay",
            "America/Goose Bay",
            "America/Grand Turk",
            "America/Indiana/Tell City",
            "America/Knox IN",
            "America/La Paz",
            "America/Los Angeles",
            "America/Lower Princes",
            "America/Mexico City",
            "America/New York",
            "America/North Dakota/Beulah",
            "America/North Dakota/Center",
            "America/North Dakota/New Salem",
            "America/Port of Spain",
            "America/Porto Acre",
            "America/Porto Velho",
            "America/Puerto Rico",
            "America/Punta Arenas",
            "America/Rainy River",
            "America/Rankin Inlet",
            "America/Rio Branco",
            "America/Santa Isabel",
            "America/Santo Domingo",
            "America/Sao Paulo",
            "America/St Barthelemy",
            "America/St Johns",
            "America/St Kitts",
            "America/St Lucia",
            "America/St Thomas",
            "America/St Vincent",
            "America/Swift Current",
            "America/Thunder Bay",
            "Antarctica/South Pole",
            "Asia/Ho Chi Minh",
            "Asia/Hong Kong",
            "Asia/Kuala Lumpur",
            "Asia/Phnom Penh",
            "Asia/Tel Aviv",
            "Asia/Ujung Pandang",
            "Asia/Ulan Bator",
            "Atlantic/Cape Verde",
            "Atlantic/Jan Mayen",
            "Atlantic/South Georgia",
            "Atlantic/St Helena",
            "Australia/Broken Hill",
            "Australia/Lord Howe",
            "Europe/Isle of Man",
            "Europe/San Marino",
            "Pacific/Pago Pago",
            "Pacific/Port Moresby"
          ]
        },
        "ledsOff": {
          "type": "boolean"
        },
        "location": {
          "$ref": "#/definitions/location2"
        },
        "linkManagement": {
          "type": "boolean"
        },
        "uiLanguage": {
          "type": "string"
        },
        "poePassthrough": {
          "type": "boolean",
          "default": false
        },
        "analyticsEnabled": {
          "type": "boolean"
        }
      },
      "required": [
        "timezone",
        "ledsOff",
        "uiLanguage"
      ]
    },
    "channelWidth": {
      "type": "object",
      "properties": {
        "auto": {
          "type": "boolean"
        },
        "tx": {
          "type": "number"
        },
        "rx": {
          "type": "number"
        }
      }
    },
    "freq": {
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "scanlist": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "freq": {
          "$ref": "#/definitions/freq"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "frequency1": {
      "type": "object",
      "properties": {
        "auto": {
          "type": "boolean"
        },
        "tx": {
          "type": "number"
        },
        "rx": {
          "type": "number"
        },
        "scanlist": {
          "$ref": "#/definitions/scanlist"
        },
        "band": {
          "type": "number"
        }
      }
    },
    "antenna4": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "cableLoss": {
          "type": "integer",
          "minimum": 0,
          "maximum": 10
        },
        "gain": {
          "type": "integer",
          "minimum": 0,
          "maximum": 40
        }
      }
    },
    "outputPower": {
      "type": "object",
      "properties": {
        "auto": {
          "type": "boolean"
        },
        "eirp": {
          "type": "integer"
        }
      }
    },
    "encryption": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "none",
            "wpa2",
            "wpa2-eap",
            "enabled"
          ]
        },
        "passphrase": {
          "type": "string",
          "minLength": 8,
          "maxLength": 63
        }
      }
    },
    "gpsSync": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "frameOffset": {
          "type": "integer"
        }
      },
      "required": [
        "enabled",
        "frameOffset"
      ]
    },
    "secondarySSID": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string"
        },
        "encryption": {
          "$ref": "#/definitions/encryption"
        },
        "lockToAp": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        }
      },
      "required": [
        "ssid",
        "encryption"
      ]
    },
    "Model98": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "comment": {
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "mac"
      ]
    },
    "Model99": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model98"
      }
    },
    "macAccessControlList": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "policy": {
          "type": "string"
        },
        "list": {
          "$ref": "#/definitions/Model99",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/list"
            },
            {
              "$ref": "#/x-alt-definitions/list1"
            }
          ]
        }
      },
      "required": [
        "enabled"
      ]
    },
    "axCompatibility": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "Model100": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "apMode": {
          "type": "boolean"
        },
        "ptpMode": {
          "type": "boolean"
        },
        "meshMode": {
          "type": "boolean"
        },
        "ssid": {
          "type": "string"
        },
        "lockToAp": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "clientIsolation": {
          "type": "boolean",
          "example": true
        },
        "mcastEnhance": {
          "type": "boolean",
          "example": true
        },
        "maxTxRate": {
          "type": "integer"
        },
        "dlRatio": {
          "type": "integer"
        },
        "frameLen": {
          "type": "number"
        },
        "distance": {
          "type": "integer"
        },
        "channelWidth": {
          "$ref": "#/definitions/channelWidth"
        },
        "frequency": {
          "$ref": "#/definitions/frequency1"
        },
        "antenna": {
          "$ref": "#/definitions/antenna4"
        },
        "outputPower": {
          "$ref": "#/definitions/outputPower"
        },
        "encryption": {
          "$ref": "#/definitions/encryption"
        },
        "gpsSync": {
          "$ref": "#/definitions/gpsSync"
        },
        "secondarySSID": {
          "$ref": "#/definitions/secondarySSID"
        },
        "obeyRegulatoryRules": {
          "type": "boolean"
        },
        "macAccessControlList": {
          "$ref": "#/definitions/macAccessControlList"
        },
        "waveAi": {
          "type": "boolean"
        },
        "axCompatibility": {
          "$ref": "#/definitions/axCompatibility"
        }
      },
      "required": [
        "id",
        "enabled",
        "apMode",
        "ptpMode",
        "ssid",
        "encryption",
        "obeyRegulatoryRules"
      ]
    },
    "interfaces6": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model100"
      }
    },
    "wireless2": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "pattern": "^[A-Z0-9]{2}$",
          "x-constraint": {
            "length": 2
          }
        },
        "hasAdvancedConfiguration": {
          "type": "boolean"
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces6"
        }
      }
    },
    "AirosConfigurationSchema": {
      "type": "object",
      "properties": {
        "network": {
          "$ref": "#/definitions/network"
        },
        "system": {
          "$ref": "#/definitions/system"
        },
        "wireless": {
          "$ref": "#/definitions/wireless2"
        }
      }
    },
    "Model101": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "alpha2": {
          "type": "string"
        },
        "code": {
          "type": "integer"
        }
      }
    },
    "Model102": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model101"
      }
    },
    "ubntData": {
      "type": "object",
      "properties": {
        "firmwareVersion": {
          "type": "string"
        },
        "model": {
          "type": "string"
        }
      },
      "required": [
        "model"
      ]
    },
    "addresses2": {
      "type": "array",
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "required"
          }
        }
      }
    },
    "Model103": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "position": {
          "type": "integer"
        },
        "name": {
          "type": "string",
          "minLength": 1,
          "maxLength": 256
        },
        "mac": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "eth",
            "sfp+",
            "wlan"
          ]
        },
        "addresses": {
          "$ref": "#/definitions/addresses2"
        }
      },
      "required": [
        "id",
        "position",
        "name",
        "type"
      ]
    },
    "ListOfInterfaces": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model103"
      }
    },
    "DeviceBlackBoxConfig": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "hostname": {
          "type": "string",
          "minLength": 1
        },
        "modelName": {
          "type": "string",
          "maxLength": 50
        },
        "systemName": {
          "type": "string",
          "maxLength": 30
        },
        "vendorName": {
          "type": "string",
          "maxLength": 50
        },
        "ipAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "macAddress": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "deviceRole": {
          "type": "string",
          "default": "router",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "siteId": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "pingEnabled": {
          "type": "boolean",
          "default": false
        },
        "ubntDevice": {
          "type": "boolean",
          "default": false
        },
        "ubntData": {
          "$ref": "#/definitions/ubntData"
        },
        "snmpCommunity": {
          "type": "string"
        },
        "note": {
          "type": "string"
        },
        "interfaces": {
          "$ref": "#/definitions/ListOfInterfaces"
        }
      },
      "required": [
        "deviceId",
        "hostname",
        "deviceRole",
        "siteId",
        "pingEnabled"
      ]
    },
    "interface2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Interface name (non-changeable)",
          "example": "sfp1"
        },
        "name": {
          "type": "string",
          "description": "Interface custom description",
          "example": "customDescription"
        },
        "mac": {
          "type": "string",
          "description": "MAC address of the interface",
          "example": "04:18:D6:A0:64:DC",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "type": {
          "type": "string",
          "description": "Interface type",
          "example": "ethernet",
          "enum": [
            "ethernet",
            "switch",
            "port",
            "pon",
            "bridge",
            "pppoe",
            "vlan",
            "wireless",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      },
      "required": [
        "id"
      ]
    },
    "Model104": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "VLAN mode",
          "example": "tagged",
          "enum": [
            "tagged",
            "untagged",
            "quiq"
          ]
        },
        "interface": {
          "$ref": "#/definitions/interface2"
        }
      },
      "required": [
        "mode"
      ]
    },
    "participation1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model104"
      }
    },
    "Model105": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 1,
          "required": [
            "id",
            "id"
          ],
          "x-alternatives": [
            {
              "type": "integer",
              "minimum": 1
            },
            {
              "type": "string"
            }
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of record",
          "example": "single",
          "enum": [
            "single",
            "range"
          ]
        },
        "name": {
          "type": "string",
          "description": "VLAN name",
          "example": "customName"
        },
        "participation": {
          "$ref": "#/definitions/participation1"
        }
      },
      "required": [
        "type"
      ]
    },
    "vlans3": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/Model105"
      }
    },
    "Model106": {
      "type": "object",
      "properties": {
        "interface": {
          "$ref": "#/definitions/VlansInterfaceSchema"
        }
      }
    },
    "trunks1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model106"
      }
    },
    "vlansSchema": {
      "type": "object",
      "properties": {
        "vlans": {
          "$ref": "#/definitions/vlans3"
        },
        "trunks": {
          "$ref": "#/definitions/trunks1"
        },
        "trunkUndefinedVlans": {
          "type": "boolean"
        }
      },
      "required": [
        "trunkUndefinedVlans"
      ]
    },
    "Model107": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "countries": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model107"
      }
    },
    "string2": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "countries1": {
      "type": "object",
      "description": "Information on countries and channel identification",
      "properties": {
        "countries": {
          "$ref": "#/definitions/countries"
        },
        "channels": {
          "type": "object",
          "name": "channels",
          "properties": {
            "string": {
              "type": "object",
              "name": "string",
              "properties": {
                "string": {
                  "$ref": "#/definitions/string2"
                }
              }
            }
          }
        }
      }
    },
    "OnuWireless": {
      "type": "object",
      "properties": {
        "provisioned": {
          "type": "boolean",
          "description": "When false, configuration of wireless part can be done directly from ONU only.",
          "example": true
        },
        "countries": {
          "$ref": "#/definitions/countries1"
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to true if wireless 2.4GHz is enabled",
          "example": true
        },
        "enabled5g": {
          "type": "boolean",
          "description": "Set to true if wireless 5GHz is enabled",
          "example": true
        },
        "channel": {
          "type": "string",
          "description": "Wireless channel, set to 'auto' or number 1-14 for 2.4GHz",
          "example": "10"
        },
        "channel5g": {
          "type": "string",
          "description": "Wireless channel, set to 'auto' or number 36-165 for 5GHz",
          "example": "40"
        },
        "channelWidth": {
          "type": "string",
          "description": "Wireless channel width in MHz for 2.4GHz",
          "example": "20",
          "enum": [
            "20",
            "40"
          ]
        },
        "channelWidth5g": {
          "type": "string",
          "description": "Wireless channel width in MHz for 5GHz",
          "example": "20",
          "enum": [
            "20",
            "40",
            "80"
          ]
        },
        "txPower": {
          "type": "number",
          "description": "TX power in % for 2.4GHz",
          "example": 100,
          "minimum": 0,
          "maximum": 100
        },
        "txPower5g": {
          "type": "number",
          "description": "TX power in % for 5GHz",
          "example": 100,
          "minimum": 0,
          "maximum": 100
        },
        "country": {
          "type": "string",
          "description": "Country for regulatory domain - ISO 3166-2 alpha code or WO for 'World wide'",
          "example": "US"
        },
        "countryListId": {
          "type": "string",
          "description": "Country list id",
          "example": "1"
        },
        "ssid": {
          "type": "string",
          "description": "Wireless network SSID for 2.4GHz",
          "example": "SSID1"
        },
        "ssid5g": {
          "type": "string",
          "description": "Wireless network SSID for 5GHz",
          "example": "SSID1"
        },
        "key": {
          "type": "string",
          "description": "WPA pre-shared key for 2.4Ghz",
          "example": "5a467424bc93bbae75142a7"
        },
        "key5g": {
          "type": "string",
          "description": "WPA pre-shared key for 5Ghz",
          "example": "5a467424bc93bbae75142a7"
        },
        "hideSsid": {
          "type": "boolean",
          "description": "Set to true to hide SSID for 2.4GHz",
          "example": true
        },
        "hideSsid5g": {
          "type": "boolean",
          "description": "Set to true to hide SSID for 5GHz",
          "example": true
        },
        "authMode": {
          "type": "string",
          "description": "Wifi encryption mode for 2.4GHz",
          "example": "wpa2psk",
          "enum": [
            "open",
            "wpa2psk",
            "wpa2pskwpa3psk",
            "wpa3psk"
          ]
        },
        "authMode5g": {
          "type": "string",
          "description": "Wifi encryption mode for 5GHz",
          "example": "wpa2psk",
          "enum": [
            "open",
            "wpa2psk",
            "wpa2pskwpa3psk",
            "wpa3psk"
          ]
        }
      },
      "required": [
        "provisioned",
        "enabled",
        "channel",
        "channelWidth",
        "txPower",
        "country",
        "countryListId",
        "ssid",
        "ssid5g",
        "hideSsid",
        "authMode"
      ]
    },
    "signal": {
      "type": "array",
      "description": "Array of integers showing signal levels",
      "example": [-60, -58],
      "items": {
        "type": "number"
      }
    },
    "Model108": {
      "type": "object",
      "properties": {
        "vendor": {
          "type": "string",
          "description": "Devices vendor",
          "example": "Ubiquiti"
        },
        "origin": {
          "type": "string",
          "description": "Origin of data",
          "example": "WiFi",
          "enum": [
            "WiFi",
            "Ethernet"
          ]
        },
        "mac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "hostname": {
          "type": "string",
          "description": "Devices hostname",
          "example": "Home router"
        },
        "ip": {
          "type": "string",
          "description": "Devices IP address",
          "example": "192.168.1.1",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "leaseTime": {
          "type": "integer",
          "description": "Remaining time until lease expiry in seconds.",
          "example": 3600000
        },
        "leased": {
          "type": "boolean",
          "description": "Set to true if IP address is leased",
          "example": true
        },
        "neighbour": {
          "type": "boolean",
          "description": "Set to true if device is a neighbor",
          "example": true
        },
        "band": {
          "type": "string",
          "description": "Wireless band",
          "example": "2.4 GHz",
          "enum": [
            "5 GHz",
            "2.4 GHz"
          ]
        },
        "signal": {
          "$ref": "#/definitions/signal"
        },
        "rx": {
          "type": "number",
          "description": "Receive throughput in bps",
          "example": 1000
        },
        "tx": {
          "type": "number",
          "description": "Transmit throughput in bps",
          "example": 1000
        },
        "time": {
          "type": "number",
          "description": "Time of connection ni seconds",
          "example": 36000000
        }
      },
      "required": [
        "vendor",
        "origin",
        "mac"
      ]
    },
    "OnuClientList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model108"
      }
    },
    "Model109": {
      "type": "object",
      "properties": {
        "httpPort": {
          "type": "integer",
          "description": "HTTP port number",
          "example": 80,
          "minimum": 0,
          "maximum": 65535
        },
        "sshEnabled": {
          "type": "boolean",
          "description": "Set to true if SSH is enabled",
          "example": true
        },
        "sshPort": {
          "type": "integer",
          "description": "SSH port number",
          "example": 22,
          "minimum": 0,
          "maximum": 65535
        },
        "telnetEnabled": {
          "type": "boolean",
          "description": "Set to true if Telnet is enabled",
          "example": true
        },
        "telnetPort": {
          "type": "integer",
          "description": "Telnet port number",
          "example": 23,
          "minimum": 0,
          "maximum": 65535
        },
        "ubntDiscoveryEnabled": {
          "type": "boolean",
          "description": "Set to true if UNMS discovery is enabled",
          "example": true
        }
      },
      "required": [
        "httpPort",
        "sshEnabled",
        "sshPort",
        "telnetEnabled",
        "telnetPort",
        "ubntDiscoveryEnabled"
      ]
    },
    "Model110": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Identification of port",
          "example": "1"
        },
        "speed": {
          "type": "string",
          "description": "Interface link speed ",
          "example": "auto",
          "enum": [
            "auto-auto",
            "auto",
            "autodetect",
            "25000-full",
            "10000-full",
            "1000-full",
            "2500-full",
            "5000-full",
            "1000-half",
            "100-full",
            "100-half",
            "10-full",
            "10-half"
          ]
        }
      },
      "required": [
        "id",
        "speed"
      ]
    },
    "ports5": {
      "type": "array",
      "description": "Configuration or status of ONU's ethernet ports",
      "example": [
        [
          {
            "id": "1",
            "speed": "auto"
          }
        ]
      ],
      "items": {
        "$ref": "#/definitions/Model110"
      }
    },
    "includeVlans": {
      "type": "array",
      "description": "List of include VLANs.",
      "example": [
        [222, 223]
      ],
      "minItems": 0,
      "items": {
        "type": "integer",
        "minimum": 0,
        "maximum": 4063,
        "x-alternatives": [
          {
            "type": "integer",
            "minimum": 0,
            "maximum": 4063
          },
          {
            "type": "string"
          }
        ]
      }
    },
    "Model111": {
      "type": "object",
      "properties": {
        "port": {
          "type": "string",
          "description": "Identification of port",
          "example": "1"
        },
        "nativeVlan": {
          "type": "integer",
          "minimum": 0,
          "maximum": 4063,
          "required": [
            "nativeVlan",
            "nativeVlan"
          ],
          "x-alternatives": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 4063
            },
            {
              "type": "string"
            }
          ]
        },
        "includeVlans": {
          "$ref": "#/definitions/includeVlans"
        }
      },
      "required": [
        "port",
        "nativeVlan"
      ]
    },
    "vlans4": {
      "type": "array",
      "description": "VLAN configuration on ethernet ports.",
      "example": [
        [
          {
            "port": "1",
            "nativeVlan": 1,
            "includeVlans": [222, 223]
          }
        ]
      ],
      "items": {
        "$ref": "#/definitions/Model111"
      }
    },
    "lanPort": {
      "type": "array",
      "description": "Port (or port range) forwarded on target device",
      "example": [
        [65535]
      ],
      "minItems": 1,
      "maxItems": 2,
      "items": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      }
    },
    "wanPort": {
      "type": "array",
      "description": "Port (or port range) forwarded on WAN",
      "example": [
        [65535]
      ],
      "minItems": 1,
      "maxItems": 2,
      "items": {
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      }
    },
    "Model112": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if rule is enabled",
          "example": true
        },
        "comment": {
          "type": "string",
          "description": "Custom description text",
          "example": "Some comment",
          "maxLength": 25
        },
        "protocol": {
          "type": "string",
          "description": "Forwarded protocols",
          "example": "tcpudp",
          "enum": [
            "tcpudp",
            "tcp",
            "udp"
          ]
        },
        "lanAddress": {
          "type": "string",
          "description": "IPv4 address of the target LAN device",
          "example": "192.168.4.4",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "lanPort": {
          "$ref": "#/definitions/lanPort"
        },
        "wanPort": {
          "$ref": "#/definitions/wanPort"
        }
      },
      "required": [
        "enabled",
        "comment",
        "protocol",
        "lanAddress",
        "lanPort",
        "wanPort"
      ]
    },
    "portForwards": {
      "type": "array",
      "description": "Port forwarding rules",
      "example": [
        [
          {
            "enabled": true,
            "comment": "some comment",
            "protocol": "tcpudp",
            "lanAddress": "192.168.3.3",
            "lanPort": [333],
            "wanPort": [334]
          }
        ]
      ],
      "minItems": 0,
      "items": {
        "$ref": "#/definitions/Model112"
      }
    },
    "dnsResolvers": {
      "type": "array",
      "description": "Array of IPv4 addresses of DNS resolvers",
      "example": [
        [
          "8.8.8.8"
        ]
      ],
      "minItems": 0,
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "optional",
            "version": [
              "ipv4"
            ]
          }
        }
      }
    },
    "lan1": {
      "type": "object",
      "properties": {
        "dhcpServerMode": {
          "type": "string",
          "description": "DHCP server mode",
          "example": "enabled",
          "enum": [
            "enabled",
            "disabled",
            "relay",
            "stateless",
            "stateful"
          ]
        },
        "dhcpPoolStart": {
          "type": "string",
          "description": "IPv4 DHCP range start",
          "example": "192.168.1.10",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "dhcpPoolEnd": {
          "type": "string",
          "description": "IPv4 DHCP range start",
          "example": "192.168.1.250",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "dhcpLeaseTime": {
          "type": "integer",
          "description": "DHCP lease time in seconds",
          "example": 600,
          "minimum": 0
        },
        "dnsProxyEnabled": {
          "type": "boolean",
          "description": "Set to true to enable DNS proxying",
          "example": true
        },
        "dhcpRelay": {
          "type": "string",
          "description": "IPv4 address of DHCP relay",
          "example": "192.168.10.250",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "dnsResolvers": {
          "$ref": "#/definitions/dnsResolvers"
        }
      },
      "required": [
        "dhcpServerMode",
        "dhcpPoolStart",
        "dhcpPoolEnd",
        "dhcpLeaseTime",
        "dnsProxyEnabled",
        "dhcpRelay"
      ]
    },
    "wan1": {
      "type": "object",
      "properties": {
        "wanMode": {
          "type": "string",
          "description": "WAN mode",
          "example": "dhcp",
          "enum": [
            "static",
            "dhcp",
            "pppoe"
          ]
        },
        "wanAddress": {
          "type": "string",
          "description": "WAN address of ONU in CIDR format - required if wanMode is set to \"static\"",
          "example": "192.168.1.250/24",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string",
          "description": "IPv4 address of gateway",
          "example": "192.168.1.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "dnsResolvers": {
          "$ref": "#/definitions/dnsResolvers"
        },
        "pppoeMode": {
          "type": "string",
          "description": "PPPoE mode, required if WAN mode set to PPPoE",
          "example": "auto",
          "enum": [
            "auto",
            "pap",
            "chap",
            "mschap2"
          ]
        },
        "pppoeUser": {
          "type": "string",
          "description": "PPPoE username",
          "example": "ubnt"
        },
        "pppoePassword": {
          "type": "string",
          "description": "PPPoE password",
          "example": "pa$$word"
        }
      },
      "required": [
        "wanMode",
        "wanAddress",
        "gateway",
        "pppoeMode",
        "pppoeUser",
        "pppoePassword"
      ]
    },
    "ipv4": {
      "type": "object",
      "description": "LAN and WAN IPv4 settings",
      "example": {
        "lan": {
          "dhcpServerMode": "enabled",
          "dhcpPoolStart": "192.168.1.10",
          "dhcpPoolEnd": "192.168.1.250",
          "dhcpLeaseTime": 600,
          "dnsProxyEnabled": true,
          "dhcpRelay": "192.168.10.250",
          "dnsResolvers": [
            "8.8.8.8"
          ]
        },
        "wan": {
          "wanMode": "dhcp",
          "wanAddress": "192.168.20.250/24",
          "gateway": "192.168.1.1",
          "dnsResolvers": [
            "8.8.8.8"
          ],
          "pppoeMode": "auto",
          "pppoeUser": "ubnt",
          "pppoePassword": "pa$$word"
        }
      },
      "properties": {
        "lan": {
          "$ref": "#/definitions/lan1"
        },
        "wan": {
          "$ref": "#/definitions/wan1"
        }
      }
    },
    "lan2": {
      "type": "object",
      "properties": {
        "lanMode6": {
          "type": "string",
          "description": "IPv6 LAN mode",
          "example": "auto",
          "enum": [
            "auto",
            "static"
          ]
        },
        "lanAddress6": {
          "type": "string",
          "description": "IPv6 static LAN address",
          "example": "0:0:0:0:0:ffff:5ca8:d101",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv6"
              ]
            }
          }
        },
        "routerAdvertisementMode": {
          "type": "string",
          "description": "Router advertisement mode",
          "example": "auto",
          "enum": [
            "auto",
            "static"
          ]
        },
        "routerAdvertisementPrefix": {
          "type": "string",
          "description": "Static prefix configuration in IPv6 CIDR",
          "example": "0:0:0:0:0:ffff:5ca8:d101/24",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        }
      },
      "required": [
        "lanMode6",
        "lanAddress6",
        "routerAdvertisementMode",
        "routerAdvertisementPrefix"
      ]
    },
    "wan2": {
      "type": "object",
      "properties": {
        "wanMode6": {
          "type": "string",
          "description": "IPv6 WAN mode",
          "example": "slaac",
          "enum": [
            "dhcp",
            "slaac",
            "link-local",
            "static",
            "ppp"
          ]
        },
        "wanAddress6": {
          "type": "string",
          "description": "WAN address of ONU in CIDR format - required if wanMode6 is set to \"static\"",
          "example": "0:0:0:0:0:ffff:5ca8:d101/24",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway6": {
          "type": "string",
          "description": "IPv6 address of gateway",
          "example": "0:0:0:0:0:ffff:5ca8:d101/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv6"
              ]
            }
          }
        }
      },
      "required": [
        "wanMode6",
        "wanAddress6",
        "gateway6"
      ]
    },
    "ipv6": {
      "type": "object",
      "description": "LAN and WAN IPv6 settings",
      "example": {
        "lan": {
          "lanMode6": "auto",
          "lanAddress6": "0:0:0:0:0:ffff:5ca8:d101",
          "routerAdvertisementMode": "auto",
          "routerAdvertisementPrefix": "0:0:0:0:0:ffff:5ca8:d101/24"
        },
        "wan": {
          "wanMode6": "slaac",
          "wanAddress6": "0:0:0:0:0:ffff:5ca8:d101/24",
          "gateway6": "0:0:0:0:0:ffff:5ca8:d101"
        }
      },
      "properties": {
        "lan": {
          "$ref": "#/definitions/lan2"
        },
        "wan": {
          "$ref": "#/definitions/wan2"
        }
      }
    },
    "OnuNetwork": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "Onu network mode",
          "example": "bridge",
          "enum": [
            "bridge",
            "router",
            "soho"
          ]
        },
        "downloadLimitEnabled": {
          "type": "boolean",
          "description": "Set to true to enable download bandwidth limit",
          "example": true
        },
        "uploadLimitEnabled": {
          "type": "boolean",
          "description": "Set to true to enable upload bandwidth limit",
          "example": true
        },
        "downloadLimit": {
          "type": "integer",
          "description": "Download bandwidth limit in Mbps",
          "example": 10,
          "minimum": 0
        },
        "uploadLimit": {
          "type": "integer",
          "description": "Upload bandwidth limit in Mbps",
          "example": 10,
          "minimum": 0
        },
        "lanAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "lanProvisioned": {
          "type": "boolean",
          "description": "Set to true to enable setting LAN from OLT",
          "example": true
        },
        "wanVlan": {
          "type": "integer",
          "minimum": 0,
          "maximum": 4063,
          "required": [
            "wanVlan",
            "wanVlan"
          ],
          "x-alternatives": [
            {
              "type": "integer",
              "minimum": 0,
              "maximum": 4063
            },
            {
              "type": "string"
            }
          ]
        },
        "natFtp": {
          "type": "boolean",
          "description": "Set to true to enable NAT for FTP protocol",
          "example": true
        },
        "natPptp": {
          "type": "boolean",
          "description": "Set to true to enable NAT for PPTP protocol",
          "example": true
        },
        "natRtsp": {
          "type": "boolean",
          "description": "Set to true to enable NAT for RTSP protocol",
          "example": true
        },
        "natSip": {
          "type": "boolean",
          "description": "Set to true to enable NAT for SIP protocol",
          "example": true
        },
        "upnpEnabled": {
          "type": "boolean",
          "description": "Set to true to enable UPnP",
          "example": true
        },
        "firewallEnabled6": {
          "type": "boolean",
          "description": "Set to true to enable IPv6 statefull firewall",
          "example": true
        },
        "ports": {
          "$ref": "#/definitions/ports5"
        },
        "vlans": {
          "$ref": "#/definitions/vlans4"
        },
        "portForwards": {
          "$ref": "#/definitions/portForwards"
        },
        "ipv4": {
          "$ref": "#/definitions/ipv4"
        },
        "isIpv6Enabled": {
          "type": "boolean",
          "description": "Set to true to enable IPv6",
          "example": true
        },
        "ipv6": {
          "$ref": "#/definitions/ipv6"
        }
      },
      "required": [
        "mode",
        "downloadLimitEnabled",
        "uploadLimitEnabled",
        "downloadLimit",
        "uploadLimit",
        "lanAddress",
        "lanProvisioned",
        "wanVlan",
        "natFtp",
        "natPptp",
        "natRtsp",
        "natSip",
        "upnpEnabled",
        "firewallEnabled6",
        "ports",
        "vlans",
        "portForwards",
        "ipv4",
        "isIpv6Enabled",
        "ipv6"
      ]
    },
    "Model113": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Station"
      }
    },
    "ledsNightMode": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "start": {
          "type": "number"
        },
        "end": {
          "type": "number"
        }
      },
      "required": [
        "enabled",
        "start",
        "end"
      ]
    },
    "system1": {
      "type": "object",
      "properties": {
        "deviceName": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "timezone": {
          "type": "string",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Ciudad_Juarez",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Nuuk",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Qatar",
            "Asia/Qostanay",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Kyiv",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kanton",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "ledsOff": {
          "type": "boolean"
        },
        "ledsNightMode": {
          "$ref": "#/definitions/ledsNightMode"
        },
        "resetButtonEnabled": {
          "type": "boolean"
        },
        "analyticsEnabled": {
          "type": "boolean"
        },
        "poePassthroughEnabled": {
          "type": "boolean"
        }
      },
      "required": [
        "deviceName",
        "timezone"
      ]
    },
    "channelWidth1": {
      "type": "object",
      "properties": {
        "auto": {
          "type": "boolean"
        },
        "width": {
          "type": "number"
        }
      },
      "required": [
        "auto",
        "width"
      ]
    },
    "frequency2": {
      "type": "object",
      "properties": {
        "auto": {
          "type": "boolean"
        },
        "control": {
          "type": "number"
        }
      },
      "required": [
        "auto",
        "control"
      ]
    },
    "outputPower1": {
      "type": "object",
      "properties": {
        "auto": {
          "type": "boolean"
        },
        "eirp": {
          "type": "number"
        }
      },
      "required": [
        "auto",
        "eirp"
      ]
    },
    "encryption1": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "passphrase"
      ]
    },
    "Model114": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "apMode": {
          "type": "boolean"
        },
        "ssid": {
          "type": "string"
        },
        "channelWidth": {
          "$ref": "#/definitions/channelWidth1"
        },
        "frequency": {
          "$ref": "#/definitions/frequency2"
        },
        "outputPower": {
          "$ref": "#/definitions/outputPower1"
        },
        "encryption": {
          "$ref": "#/definitions/encryption1"
        }
      },
      "required": [
        "id",
        "enabled",
        "apMode",
        "ssid",
        "channelWidth",
        "frequency",
        "outputPower",
        "encryption"
      ]
    },
    "interfaces7": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model114"
      }
    },
    "encryption2": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string"
        },
        "passphrase": {
          "type": "string"
        }
      },
      "required": [
        "type"
      ]
    },
    "guestNetwork": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "ssid": {
          "type": "string"
        },
        "encryption": {
          "$ref": "#/definitions/encryption2"
        }
      },
      "required": [
        "enabled",
        "ssid",
        "encryption"
      ]
    },
    "wireless3": {
      "type": "object",
      "properties": {
        "country": {
          "type": "string",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces7"
        },
        "guestNetwork": {
          "$ref": "#/definitions/guestNetwork"
        }
      },
      "required": [
        "country",
        "interfaces"
      ]
    },
    "dnsServers2": {
      "type": "array",
      "description": "Array of IP addresses of DNS servers as IPv4 or IPv6",
      "example": [
        [
          "8.8.8.8"
        ]
      ],
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "optional",
            "version": [
              "ipv4"
            ]
          }
        },
        "x-alternatives": [
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv4"
                ]
              }
            }
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv6"
                ]
              }
            }
          }
        ]
      }
    },
    "Model115": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "destination": {
          "type": "string"
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string",
          "enum": [
            "lan",
            "wan",
            "mgmt"
          ]
        }
      },
      "required": [
        "enabled",
        "destination",
        "gateway"
      ]
    },
    "staticRoutes2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model115"
      }
    },
    "Model116": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "mode": {
          "type": "string",
          "enum": [
            {
              "value": {
                "type": "alternatives",
                "$_root": {
                  "_types": {

                  },
                  "alternatives": {

                  },
                  "any": {

                  },
                  "array": {

                  },
                  "boolean": {

                  },
                  "date": {

                  },
                  "function": {

                  },
                  "link": {

                  },
                  "number": {

                  },
                  "object": {

                  },
                  "string": {

                  },
                  "symbol": {

                  },
                  "binary": {

                  },
                  "allow": {

                  },
                  "custom": {

                  },
                  "disallow": {

                  },
                  "equal": {

                  },
                  "exist": {

                  },
                  "forbidden": {

                  },
                  "invalid": {

                  },
                  "not": {

                  },
                  "only": {

                  },
                  "optional": {

                  },
                  "options": {

                  },
                  "prefs": {

                  },
                  "preferences": {

                  },
                  "required": {

                  },
                  "strip": {

                  },
                  "valid": {

                  },
                  "when": {

                  },
                  "ValidationError": {

                  },
                  "version": "17.4.1",
                  "cache": {
                    "provision": {

                    }
                  },
                  "assert": {

                  },
                  "attempt": {

                  },
                  "build": {

                  },
                  "checkPreferences": {

                  },
                  "compile": {

                  },
                  "defaults": {

                  },
                  "expression": {

                  },
                  "extend": {

                  },
                  "isError": {

                  },
                  "isExpression": {

                  },
                  "isRef": {

                  },
                  "isSchema": {

                  },
                  "in": {

                  },
                  "ref": {

                  },
                  "types": {

                  },
                  "alt": {

                  },
                  "bool": {

                  },
                  "func": {

                  },
                  "x": {

                  },
                  "trace": {

                  },
                  "untrace": {

                  }
                },
                "$_temp": {
                  "ruleset": false,
                  "whens": {

                  }
                },
                "_ids": {
                  "_byId": {

                  },
                  "_byKey": {

                  },
                  "_schemaChain": false
                },
                "_preferences": null,
                "_valids": null,
                "_invalids": null,
                "_rules": [],
                "_singleRules": {

                },
                "_refs": {
                  "refs": []
                },
                "_flags": {

                },
                "_cache": null,
                "$_terms": {
                  "alterations": null,
                  "examples": null,
                  "externals": null,
                  "metas": [],
                  "notes": [],
                  "shared": null,
                  "tags": [],
                  "whens": null,
                  "matches": [
                    {
                      "schema": {
                        "type": "any",
                        "$_root": {
                          "_types": {

                          },
                          "alternatives": {

                          },
                          "any": {

                          },
                          "array": {

                          },
                          "boolean": {

                          },
                          "date": {

                          },
                          "function": {

                          },
                          "link": {

                          },
                          "number": {

                          },
                          "object": {

                          },
                          "string": {

                          },
                          "symbol": {

                          },
                          "binary": {

                          },
                          "allow": {

                          },
                          "custom": {

                          },
                          "disallow": {

                          },
                          "equal": {

                          },
                          "exist": {

                          },
                          "forbidden": {

                          },
                          "invalid": {

                          },
                          "not": {

                          },
                          "only": {

                          },
                          "optional": {

                          },
                          "options": {

                          },
                          "prefs": {

                          },
                          "preferences": {

                          },
                          "required": {

                          },
                          "strip": {

                          },
                          "valid": {

                          },
                          "when": {

                          },
                          "ValidationError": {

                          },
                          "version": "17.4.1",
                          "cache": {
                            "provision": {

                            }
                          },
                          "assert": {

                          },
                          "attempt": {

                          },
                          "build": {

                          },
                          "checkPreferences": {

                          },
                          "compile": {

                          },
                          "defaults": {

                          },
                          "expression": {

                          },
                          "extend": {

                          },
                          "isError": {

                          },
                          "isExpression": {

                          },
                          "isRef": {

                          },
                          "isSchema": {

                          },
                          "in": {

                          },
                          "ref": {

                          },
                          "types": {

                          },
                          "alt": {

                          },
                          "bool": {

                          },
                          "func": {

                          },
                          "x": {

                          },
                          "trace": {

                          },
                          "untrace": {

                          }
                        },
                        "$_temp": {
                          "ruleset": false,
                          "whens": {

                          }
                        },
                        "_ids": {
                          "_byId": {

                          },
                          "_byKey": {

                          },
                          "_schemaChain": false
                        },
                        "_preferences": null,
                        "_valids": {
                          "_values": {

                          },
                          "_refs": {

                          },
                          "_lowercase": {

                          },
                          "_override": true
                        },
                        "_invalids": null,
                        "_rules": [],
                        "_singleRules": {

                        },
                        "_refs": {
                          "refs": []
                        },
                        "_flags": {
                          "only": true
                        },
                        "_cache": null,
                        "$_terms": {
                          "alterations": null,
                          "examples": null,
                          "externals": null,
                          "metas": [],
                          "notes": [],
                          "shared": null,
                          "tags": [],
                          "whens": null
                        },
                        "$_super": {

                        }
                      }
                    },
                    {
                      "schema": {
                        "type": "any",
                        "$_root": {
                          "_types": {

                          },
                          "alternatives": {

                          },
                          "any": {

                          },
                          "array": {

                          },
                          "boolean": {

                          },
                          "date": {

                          },
                          "function": {

                          },
                          "link": {

                          },
                          "number": {

                          },
                          "object": {

                          },
                          "string": {

                          },
                          "symbol": {

                          },
                          "binary": {

                          },
                          "allow": {

                          },
                          "custom": {

                          },
                          "disallow": {

                          },
                          "equal": {

                          },
                          "exist": {

                          },
                          "forbidden": {

                          },
                          "invalid": {

                          },
                          "not": {

                          },
                          "only": {

                          },
                          "optional": {

                          },
                          "options": {

                          },
                          "prefs": {

                          },
                          "preferences": {

                          },
                          "required": {

                          },
                          "strip": {

                          },
                          "valid": {

                          },
                          "when": {

                          },
                          "ValidationError": {

                          },
                          "version": "17.4.1",
                          "cache": {
                            "provision": {

                            }
                          },
                          "assert": {

                          },
                          "attempt": {

                          },
                          "build": {

                          },
                          "checkPreferences": {

                          },
                          "compile": {

                          },
                          "defaults": {

                          },
                          "expression": {

                          },
                          "extend": {

                          },
                          "isError": {

                          },
                          "isExpression": {

                          },
                          "isRef": {

                          },
                          "isSchema": {

                          },
                          "in": {

                          },
                          "ref": {

                          },
                          "types": {

                          },
                          "alt": {

                          },
                          "bool": {

                          },
                          "func": {

                          },
                          "x": {

                          },
                          "trace": {

                          },
                          "untrace": {

                          }
                        },
                        "$_temp": {
                          "ruleset": false,
                          "whens": {

                          }
                        },
                        "_ids": {
                          "_byId": {

                          },
                          "_byKey": {

                          },
                          "_schemaChain": false
                        },
                        "_preferences": null,
                        "_valids": {
                          "_values": {

                          },
                          "_refs": {

                          },
                          "_lowercase": {

                          },
                          "_override": true
                        },
                        "_invalids": null,
                        "_rules": [],
                        "_singleRules": {

                        },
                        "_refs": {
                          "refs": []
                        },
                        "_flags": {
                          "only": true
                        },
                        "_cache": null,
                        "$_terms": {
                          "alterations": null,
                          "examples": null,
                          "externals": null,
                          "metas": [],
                          "notes": [],
                          "shared": null,
                          "tags": [],
                          "whens": null
                        },
                        "$_super": {

                        }
                      }
                    }
                  ]
                },
                "$_super": {
                  "label": {

                  }
                }
              }
            }
          ]
        }
      },
      "required": [
        "id",
        "mode"
      ]
    },
    "interfaces8": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model116"
      }
    },
    "Model117": {
      "type": "object",
      "properties": {
        "vlanId": {
          "type": "number",
          "minimum": 2,
          "maximum": 4094
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces8"
        },
        "management": {
          "type": "boolean"
        },
        "wireless": {
          "type": "boolean"
        },
        "guestNetwork": {
          "type": "boolean"
        }
      },
      "required": [
        "interfaces",
        "guestNetwork"
      ]
    },
    "bridges": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model117"
      }
    },
    "vlan1": {
      "type": "object",
      "properties": {
        "bridges": {
          "$ref": "#/definitions/bridges"
        }
      },
      "required": [
        "bridges"
      ]
    },
    "ipv41": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "dynamic",
            "static",
            "pppoe"
          ]
        },
        "cidr": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "defaultGateway": {
          "type": "string"
        }
      },
      "required": [
        "mode",
        "cidr"
      ]
    },
    "lan3": {
      "type": "object",
      "properties": {
        "ipv4": {
          "$ref": "#/definitions/ipv41"
        }
      },
      "required": [
        "ipv4"
      ]
    },
    "interfaces9": {
      "type": "object",
      "properties": {
        "lan": {
          "$ref": "#/definitions/lan3"
        }
      }
    },
    "network1": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "bridge",
            "router",
            "soho"
          ]
        },
        "dnsServers": {
          "$ref": "#/definitions/dnsServers2"
        },
        "staticRoutes": {
          "$ref": "#/definitions/staticRoutes2"
        },
        "vlan": {
          "$ref": "#/definitions/vlan1"
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces9"
        }
      },
      "required": [
        "mode",
        "dnsServers",
        "staticRoutes",
        "vlan",
        "interfaces"
      ]
    },
    "Model118": {
      "type": "object",
      "properties": {
        "system": {
          "$ref": "#/definitions/system1"
        },
        "wireless": {
          "$ref": "#/definitions/wireless3"
        },
        "network": {
          "$ref": "#/definitions/network1"
        }
      }
    },
    "description": {
      "type": "object",
      "properties": {
        "city": {
          "type": "string",
          "example": "Prague"
        },
        "country": {
          "type": "string",
          "example": "Czechia"
        },
        "countryCode": {
          "type": "string",
          "example": "CZ"
        },
        "latitude": {
          "type": "number",
          "example": 50.0766
        },
        "longitude": {
          "type": "number",
          "example": 14.5148
        },
        "provider": {
          "type": "string",
          "example": "PRAHA12.com s.r.o."
        },
        "providerUrl": {
          "type": "string",
          "example": "http://praha12.com/"
        },
        "speedMbps": {
          "type": "number",
          "example": 1000
        },
        "url": {
          "type": "string",
          "example": "http://78.108.102.246:8080"
        }
      }
    },
    "identification6": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "enum": [
            "running",
            "finished",
            "failed",
            "cancelled"
          ]
        }
      }
    },
    "Model119": {
      "type": "object",
      "properties": {
        "average": {
          "type": "number",
          "example": 91141144.1580382
        },
        "raw": {
          "type": "number",
          "example": 89003733
        },
        "speed": {
          "type": "number",
          "example": 91141144.1580382
        },
        "time": {
          "type": "number",
          "example": 1.101
        }
      }
    },
    "log": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model119"
      }
    },
    "upload2": {
      "type": "object",
      "properties": {
        "current": {
          "type": "number",
          "description": "Rate in bits per second. Null if unavailable."
        },
        "average": {
          "type": "number",
          "description": "Rate in bits per second. Null if unavailable."
        },
        "log": {
          "$ref": "#/definitions/log"
        }
      }
    },
    "download2": {
      "type": "object",
      "properties": {
        "current": {
          "type": "number",
          "description": "Rate in bits per second. Null if unavailable."
        },
        "average": {
          "type": "number",
          "description": "Rate in bits per second. Null if unavailable."
        },
        "log": {
          "$ref": "#/definitions/log"
        }
      }
    },
    "latency": {
      "type": "object",
      "description": "Null if unavailable.",
      "properties": {
        "current": {
          "type": "number",
          "description": "Latency in ms."
        },
        "average": {
          "type": "number",
          "description": "Latency in ms."
        }
      }
    },
    "Model120": {
      "type": "object",
      "properties": {
        "description": {
          "$ref": "#/definitions/description"
        },
        "identification": {
          "$ref": "#/definitions/identification6"
        },
        "upload": {
          "$ref": "#/definitions/upload2"
        },
        "download": {
          "$ref": "#/definitions/download2"
        },
        "latency": {
          "$ref": "#/definitions/latency"
        },
        "timestamp": {
          "type": "number",
          "description": "Number of milliseconds (not seconds) that have elapsed since January 1, 1970 (midnight UTC/GMT)"
        }
      }
    },
    "dnsServers3": {
      "type": "array",
      "description": "Array of DNS servers - from DHCP server",
      "example": [
        [
          "8.8.8.8"
        ]
      ],
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "optional",
            "version": [
              "ipv4"
            ]
          }
        },
        "x-alternatives": [
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv4"
                ]
              }
            }
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv6"
                ]
              }
            }
          }
        ]
      }
    },
    "Model121": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "type": "string",
          "description": "IP address which is used for converting from dynamic to static IP address",
          "example": "192.168.1.156/24",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "gateway": {
          "type": "string",
          "description": "IP address of gateway (routing) - from DHCP server",
          "example": "192.168.1.1",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "dnsServers": {
          "$ref": "#/definitions/dnsServers3"
        }
      }
    },
    "RouterRoute": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        },
        "enabled": {
          "type": "boolean"
        },
        "fib": {
          "type": "boolean"
        },
        "gateway": {
          "type": "string"
        },
        "gatewayStatus": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "nextHop": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        },
        "staticType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ListOfRouterRoutes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/RouterRoute"
      }
    },
    "UispSettingMeta": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Display name used in UISP for the device.",
          "example": "Main gateway.",
          "maxLength": 30
        },
        "note": {
          "type": "string",
          "description": "Custom device description.",
          "example": "Main gateway for whole network",
          "maxLength": 300
        },
        "maintenance": {
          "type": "boolean",
          "description": "If set to true outages are not reported for the device."
        },
        "customIpAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        }
      }
    },
    "UispSetting": {
      "type": "object",
      "properties": {
        "overrideGlobal": {
          "type": "boolean",
          "description": "\n    If TRUE during update of UISP global settings this device settings will not update if FALSE then yes.\n    "
        },
        "deviceTransmissionFrequency": {
          "type": "string",
          "enum": [
            "minimal",
            "low",
            "medium",
            "high",
            "realtime"
          ]
        },
        "devicePingAddress": {
          "type": "string",
          "description": "Address for device to ping."
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds."
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds."
        },
        "deviceGracePeriodOutage": {
          "type": "number",
          "description": "In milliseconds."
        },
        "deviceTransmissionProfile": {
          "type": "string",
          "description": "Transmission frequency with device.",
          "example": "auto",
          "enum": [
            "auto",
            "custom"
          ]
        },
        "meta": {
          "$ref": "#/definitions/UispSettingMeta"
        }
      }
    },
    "redistributeDefaultRoute": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "RedistributeConnected": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": false,
          "default": false
        },
        "metric": {
          "type": "integer",
          "example": 10,
          "default": 10
        },
        "metricType": {
          "type": "string",
          "enum": [
            "type1",
            "type2"
          ]
        }
      }
    },
    "RedistributeStatic": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": false,
          "default": false
        },
        "metric": {
          "type": "integer",
          "example": 10,
          "default": 10
        },
        "metricType": {
          "type": "string",
          "enum": [
            "type1",
            "type2"
          ]
        }
      }
    },
    "RouterOspf": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if OSPF is enabled, for UISPR",
          "example": true
        },
        "router": {
          "type": "string"
        },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute"
        },
        "redistributeConnected": {
          "$ref": "#/definitions/RedistributeConnected"
        },
        "redistributeStatic": {
          "$ref": "#/definitions/RedistributeStatic"
        }
      },
      "required": [
        "router",
        "redistributeConnected",
        "redistributeStatic"
      ]
    },
    "packetRate": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Time%20series"
      }
    },
    "rttAvg": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Time%20series"
      }
    },
    "rttMax": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Time%20series"
      }
    },
    "rttMin": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Time%20series"
      }
    },
    "download3": {
      "type": "object",
      "properties": {
        "packetRate": {
          "$ref": "#/definitions/packetRate"
        },
        "rttAvg": {
          "$ref": "#/definitions/rttAvg"
        },
        "rttMax": {
          "$ref": "#/definitions/rttMax"
        },
        "rttMin": {
          "$ref": "#/definitions/rttMin"
        }
      }
    },
    "upload3": {
      "type": "object",
      "properties": {
        "packetRate": {
          "$ref": "#/definitions/packetRate"
        },
        "rttAvg": {
          "$ref": "#/definitions/rttAvg"
        },
        "rttMax": {
          "$ref": "#/definitions/rttMax"
        },
        "rttMin": {
          "$ref": "#/definitions/rttMin"
        }
      }
    },
    "Model122": {
      "type": "object",
      "properties": {
        "download": {
          "$ref": "#/definitions/download3"
        },
        "upload": {
          "$ref": "#/definitions/upload3"
        },
        "interval": {
          "$ref": "#/definitions/interval"
        },
        "period": {
          "type": "number"
        }
      }
    },
    "TrafficSummary": {
      "type": "object",
      "properties": {
        "upload": {
          "type": "number",
          "description": "Total number of bytes uploaded during interval",
          "example": 1006051
        },
        "download": {
          "type": "number",
          "description": "Total number of bytes downloaded during interval",
          "example": 986305
        }
      },
      "required": [
        "upload",
        "download"
      ]
    },
    "autoChannelWidthList": {
      "type": "array",
      "items": {
        "type": "integer"
      }
    },
    "Model123": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "gain": {
          "type": "number"
        },
        "builtIn": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name",
        "gain",
        "builtIn"
      ]
    },
    "antennaList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model123"
      }
    },
    "channelWidthList": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "supportedIeeeStandards": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "supportedBands": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "txPowerRange": {
      "type": "object",
      "properties": {
        "min": {
          "type": "number"
        },
        "max": {
          "type": "number"
        }
      },
      "required": [
        "min",
        "max"
      ]
    },
    "radio1": {
      "type": "object",
      "properties": {
        "antennaList": {
          "$ref": "#/definitions/antennaList"
        },
        "ccodeList": {
          "type": "number"
        },
        "ccodeLocked": {
          "type": "number"
        },
        "defaultAntennaId": {
          "type": "number"
        },
        "channelWidthList": {
          "$ref": "#/definitions/channelWidthList"
        },
        "ieeeBitmask": {
          "type": "number"
        },
        "supportedIeeeStandards": {
          "$ref": "#/definitions/supportedIeeeStandards"
        },
        "supportedBands": {
          "$ref": "#/definitions/supportedBands"
        },
        "txPowerRange": {
          "$ref": "#/definitions/txPowerRange"
        },
        "supportsApPtp": {
          "type": "boolean"
        },
        "supportsStaPtp": {
          "type": "boolean"
        },
        "supportsApPtmp": {
          "type": "boolean"
        },
        "supportsStaPtmp": {
          "type": "boolean"
        },
        "distanceLimit": {
          "type": "number"
        }
      },
      "required": [
        "ccodeList",
        "ccodeLocked",
        "defaultAntennaId",
        "ieeeBitmask",
        "supportsApPtp",
        "supportsStaPtp",
        "supportsApPtmp",
        "supportsStaPtmp",
        "distanceLimit"
      ]
    },
    "physicalInterfaceMACAddresses": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "boardInfo": {
      "type": "object",
      "properties": {
        "product": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "autoChannelWidthList": {
          "$ref": "#/definitions/autoChannelWidthList"
        },
        "radio1": {
          "$ref": "#/definitions/radio1"
        },
        "ledCount": {
          "type": "number"
        },
        "isExternalResetSupported": {
          "type": "boolean"
        },
        "rebootTimeout": {
          "type": "number"
        },
        "upgradeTimeout": {
          "type": "number"
        },
        "physicalInterfaceCount": {
          "type": "number"
        },
        "physicalInterfaceMACAddresses": {
          "$ref": "#/definitions/physicalInterfaceMACAddresses"
        }
      },
      "required": [
        "product",
        "model",
        "ledCount",
        "isExternalResetSupported",
        "rebootTimeout",
        "upgradeTimeout",
        "physicalInterfaceCount"
      ]
    },
    "extensionChannels": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "plus",
          "minus"
        ]
      }
    },
    "Model124": {
      "type": "object",
      "properties": {
        "controlFrequency": {
          "type": "number"
        },
        "centerFrequency": {
          "type": "number"
        },
        "channel": {
          "type": "number"
        },
        "band": {
          "type": "string",
          "enum": [
            "A",
            "G"
          ]
        },
        "channelWidth": {
          "type": "number"
        },
        "maxTXPower": {
          "type": "number"
        },
        "isDFS": {
          "type": "boolean"
        },
        "isIndoor": {
          "type": "boolean"
        },
        "isAirMax": {
          "type": "boolean"
        },
        "isEIRPLimited": {
          "type": "boolean"
        },
        "obeyRegulations": {
          "type": "boolean"
        },
        "channelStartFreq": {
          "type": "number"
        },
        "channelEndFreq": {
          "type": "number"
        },
        "extensionChannels": {
          "$ref": "#/definitions/extensionChannels"
        },
        "maxAntennaGain": {
          "type": "number"
        }
      },
      "required": [
        "controlFrequency",
        "centerFrequency",
        "channel",
        "band",
        "channelWidth",
        "maxTXPower",
        "isDFS",
        "isIndoor",
        "isAirMax",
        "isEIRPLimited",
        "obeyRegulations",
        "channelStartFreq",
        "channelEndFreq",
        "extensionChannels",
        "maxAntennaGain"
      ]
    },
    "regulatoryDomainChannels": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model124"
      }
    },
    "regulatoryDomainBands": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "backupWPA": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string"
        },
        "apMac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "enabled": {
          "type": "boolean"
        },
        "presharedKey": {
          "type": "string"
        },
        "eapAnonymousIdentity": {
          "type": "string"
        },
        "eapUsername": {
          "type": "string"
        },
        "eapType": {
          "type": "string",
          "enum": [
            "PEAP",
            "TTLS"
          ]
        },
        "eapTypeExt": {
          "type": "string",
          "enum": [
            "auth=MSCHAPV2"
          ]
        },
        "eapPassword": {
          "type": "string"
        },
        "wpaAuthentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa2",
            "wpaTKIP",
            "wpa2TKIP",
            "wpaAES",
            "wpa2AES",
            "aes256",
            "none"
          ]
        }
      },
      "required": [
        "ssid",
        "apMac",
        "enabled",
        "presharedKey",
        "eapAnonymousIdentity",
        "eapUsername",
        "eapType",
        "eapTypeExt",
        "eapPassword",
        "wpaAuthentication",
        "security"
      ]
    },
    "securityConfig": {
      "type": "object",
      "properties": {
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa2",
            "wpaTKIP",
            "wpa2TKIP",
            "wpaAES",
            "wpa2AES",
            "aes256",
            "none"
          ]
        },
        "wpaAuthentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "eapType": {
          "type": "string",
          "enum": [
            "PEAP",
            "TTLS"
          ]
        },
        "eapTypeExt": {
          "type": "string",
          "enum": [
            "auth=MSCHAPV2"
          ]
        },
        "presharedKey": {
          "type": "string"
        },
        "isWPASupplicantEnabled": {
          "type": "boolean"
        },
        "isAAAEnabled": {
          "type": "boolean"
        },
        "authServerIP": {
          "type": "string"
        },
        "authServerPort": {
          "type": "number"
        },
        "authServerSecret": {
          "type": "string"
        },
        "isAccountingServerEnabled": {
          "type": "boolean"
        },
        "accountingServerIP": {
          "type": "string"
        },
        "accountingServerPort": {
          "type": "number"
        },
        "accountingServerSecret": {
          "type": "string"
        },
        "eapAnonymousIdentity": {
          "type": "string"
        },
        "eapUsername": {
          "type": "string"
        },
        "eapPassword": {
          "type": "string"
        },
        "backupWPA": {
          "$ref": "#/definitions/backupWPA"
        }
      },
      "required": [
        "security",
        "wpaAuthentication",
        "eapType",
        "eapTypeExt",
        "presharedKey",
        "isWPASupplicantEnabled",
        "isAAAEnabled",
        "authServerIP",
        "authServerPort",
        "authServerSecret",
        "isAccountingServerEnabled",
        "accountingServerIP",
        "accountingServerPort",
        "accountingServerSecret",
        "eapAnonymousIdentity",
        "eapUsername",
        "eapPassword",
        "backupWPA"
      ]
    },
    "ledThresholdsConfig": {
      "type": "object"
    },
    "Model125": {
      "type": "object",
      "properties": {
        "mac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "isEnabled": {
          "type": "boolean"
        },
        "comment": {
          "type": "string"
        }
      },
      "required": [
        "mac",
        "isEnabled",
        "comment"
      ]
    },
    "clients": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model125"
      }
    },
    "macACLConfig": {
      "type": "object",
      "properties": {
        "isEnabled": {
          "type": "boolean"
        },
        "policy": {
          "type": "string",
          "enum": [
            "allow",
            "deny"
          ]
        },
        "clients": {
          "$ref": "#/definitions/clients"
        }
      },
      "required": [
        "isEnabled",
        "policy"
      ]
    },
    "allowedFrequencies": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "tddFraming": {
      "type": "object",
      "properties": {
        "flexBetaEnabled": {
          "type": "boolean"
        },
        "duration": {
          "type": "number"
        },
        "dlRatio": {
          "type": "number"
        },
        "reseEnabled": {
          "type": "boolean"
        }
      },
      "required": [
        "flexBetaEnabled",
        "duration",
        "dlRatio",
        "reseEnabled"
      ]
    },
    "AirMaxWifiConfig": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "boardInfo": {
          "$ref": "#/definitions/boardInfo"
        },
        "regulatoryDomainChannels": {
          "$ref": "#/definitions/regulatoryDomainChannels"
        },
        "regulatoryDomainBands": {
          "$ref": "#/definitions/regulatoryDomainBands"
        },
        "securityConfig": {
          "$ref": "#/definitions/securityConfig"
        },
        "ledThresholdsConfig": {
          "$ref": "#/definitions/ledThresholdsConfig"
        },
        "macACLConfig": {
          "$ref": "#/definitions/macACLConfig"
        },
        "devName": {
          "type": "string"
        },
        "ssid": {
          "type": "string"
        },
        "apMac": {
          "type": "string",
          "description": "MAC address",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "countryCode": {
          "type": "number"
        },
        "allowedFrequencies": {
          "$ref": "#/definitions/allowedFrequencies"
        },
        "band": {
          "type": "string",
          "enum": [
            "A",
            "G"
          ]
        },
        "channelWidth": {
          "type": "number"
        },
        "antennaId": {
          "type": "number"
        },
        "txPower": {
          "type": "number"
        },
        "isIsolationEnabled": {
          "type": "boolean"
        },
        "centerFrequency": {
          "type": "number"
        },
        "controlFrequency": {
          "type": "number"
        },
        "isAutoTXRateEnabled": {
          "type": "boolean"
        },
        "txRate": {
          "type": "number"
        },
        "isAutoChannelWidthEnabled": {
          "type": "boolean"
        },
        "isWDSEnabled": {
          "type": "boolean"
        },
        "dutyCycle": {
          "type": "number"
        },
        "framePeriod": {
          "type": "number"
        },
        "txRateMode": {
          "type": "number"
        },
        "extensionChannel": {
          "type": "string",
          "enum": [
            "plus",
            "minus"
          ]
        },
        "antennaGain": {
          "type": "number"
        },
        "cableLoss": {
          "type": "number"
        },
        "isAutoEIRPLimitEnabled": {
          "type": "boolean"
        },
        "isACKAutoDistanceEnabled": {
          "type": "boolean"
        },
        "ackDistance": {
          "type": "number"
        },
        "ackTimeout": {
          "type": "number"
        },
        "aggregationFrames": {
          "type": "number"
        },
        "isMulticastEnhanceEnabled": {
          "type": "boolean"
        },
        "isAddMtikEnabled": {
          "type": "boolean"
        },
        "pollingPriority": {
          "type": "number"
        },
        "distanceScale": {
          "type": "number"
        },
        "rxGain": {
          "type": "number"
        },
        "isRxGainAutoEnabled": {
          "type": "boolean"
        },
        "rxTargetPower": {
          "type": "number"
        },
        "txPowerMax": {
          "type": "number"
        },
        "sensitivityThresholdEnabled": {
          "type": "boolean"
        },
        "sensitivityThreshold": {
          "type": "number"
        },
        "amsduEnabled": {
          "type": "boolean"
        },
        "atpcEnabled": {
          "type": "boolean"
        },
        "atpcThreshold": {
          "type": "number"
        },
        "tdmaFilter": {
          "type": "number"
        },
        "deAuthProtectionStatusEnabled": {
          "type": "boolean"
        },
        "tddFraming": {
          "$ref": "#/definitions/tddFraming"
        },
        "hideSsid": {
          "type": "boolean"
        },
        "syncMode": {
          "type": "number",
          "enum": [1, 2]
        },
        "ieeeModeString": {
          "type": "string"
        }
      },
      "required": [
        "mode",
        "devName",
        "ssid",
        "apMac",
        "countryCode",
        "allowedFrequencies",
        "band",
        "channelWidth",
        "antennaId",
        "txPower",
        "isIsolationEnabled",
        "centerFrequency",
        "controlFrequency",
        "isAutoTXRateEnabled",
        "txRate",
        "isAutoChannelWidthEnabled",
        "isWDSEnabled",
        "dutyCycle",
        "framePeriod",
        "txRateMode",
        "extensionChannel",
        "antennaGain",
        "cableLoss",
        "isAutoEIRPLimitEnabled",
        "isACKAutoDistanceEnabled",
        "ackDistance",
        "ackTimeout",
        "aggregationFrames",
        "isMulticastEnhanceEnabled",
        "isAddMtikEnabled",
        "pollingPriority",
        "distanceScale",
        "rxGain",
        "isRxGainAutoEnabled",
        "rxTargetPower",
        "txPowerMax",
        "sensitivityThresholdEnabled",
        "sensitivityThreshold",
        "amsduEnabled",
        "atpcEnabled",
        "atpcThreshold",
        "tdmaFilter",
        "deAuthProtectionStatusEnabled",
        "tddFraming",
        "hideSsid",
        "syncMode",
        "ieeeModeString"
      ]
    },
    "EdgeRouterRoute": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 255
        },
        "enabled": {
          "type": "boolean"
        },
        "fib": {
          "type": "boolean"
        },
        "gateway": {
          "type": "string"
        },
        "gatewayStatus": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "nextHop": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        },
        "staticType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ListOfEdgeRouterRoutes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/EdgeRouterRoute"
      }
    },
    "RedistributeConnected1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "string"
        }
      }
    },
    "RedistributeStatic1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "string"
        }
      }
    },
    "EdgeRouterOspf": {
      "type": "object",
      "properties": {
        "router": {
          "type": "string"
        },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute"
        },
        "redistributeConnected": {
          "$ref": "#/definitions/RedistributeConnected1"
        },
        "redistributeStatic": {
          "$ref": "#/definitions/RedistributeStatic1"
        }
      }
    },
    "DHCPServer": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dnsServers": {
          "$ref": "#/definitions/dnsServers"
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "lan",
          "minLength": 1,
          "maxLength": 63
        },
        "dynamicLeases": {
          "type": "number",
          "description": "Total amount of dynamic leases used.",
          "example": 5,
          "minimum": 0
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface IP v4 address in CIDR format.",
          "example": "192.168.2.0/24",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "staticLeases": {
          "type": "number",
          "description": "Total amount of static leases used.",
          "example": 5,
          "minimum": 0
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "enabled",
        "interface",
        "leaseTime",
        "name",
        "poolSize",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPServerList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPServer"
      }
    },
    "DHCPLease": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "expiration": {
          "type": "number"
        },
        "hostname": {
          "type": "string"
        },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server.",
          "minLength": 1
        },
        "mac": {
          "type": "string"
        },
        "serverName": {
          "type": "string",
          "minLength": 1
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DHCPLeaseList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPLease"
      }
    },
    "Model126": {
      "type": "object",
      "properties": {
        "deviceName": {
          "type": "string"
        },
        "timezone": {
          "type": "string"
        },
        "zonename": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "required": [
        "deviceName",
        "timezone",
        "zonename",
        "username"
      ]
    },
    "conntrackModules": {
      "type": "object",
      "properties": {
        "ftp": {
          "type": "boolean"
        },
        "gre": {
          "type": "boolean"
        },
        "h323": {
          "type": "boolean"
        },
        "pptp": {
          "type": "boolean"
        },
        "sip": {
          "type": "boolean"
        },
        "tftp": {
          "type": "boolean"
        }
      },
      "required": [
        "ftp",
        "gre",
        "h323",
        "pptp",
        "sip",
        "tftp"
      ]
    },
    "conntrackTimeouts": {
      "type": "object",
      "properties": {
        "icmp": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "other": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "tcpClose": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "tcpCloseWait": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "tcpEstablished": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "tcpFinWait": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "tcpLastAck": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "tcpSynRecv": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "tcpSynSent": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "tcpTimeWait": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "udpOther": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        },
        "udpStream": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1209600
        }
      },
      "required": [
        "icmp",
        "other",
        "tcpClose",
        "tcpCloseWait",
        "tcpEstablished",
        "tcpFinWait",
        "tcpLastAck",
        "tcpSynRecv",
        "tcpSynSent",
        "tcpTimeWait",
        "udpOther",
        "udpStream"
      ]
    },
    "conntrackOptions": {
      "type": "object",
      "properties": {
        "tcpLoose": {
          "type": "boolean"
        },
        "tcpMaxRetrans": {
          "type": "integer",
          "minimum": 1,
          "maximum": 100
        },
        "expectTableSize": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10000000
        },
        "tableSize": {
          "type": "integer",
          "minimum": 1000,
          "maximum": 10000000
        }
      },
      "required": [
        "tcpLoose",
        "tcpMaxRetrans",
        "expectTableSize",
        "tableSize"
      ]
    },
    "Model127": {
      "type": "object",
      "properties": {
        "conntrackModules": {
          "$ref": "#/definitions/conntrackModules"
        },
        "conntrackTimeouts": {
          "$ref": "#/definitions/conntrackTimeouts"
        },
        "conntrackOptions": {
          "$ref": "#/definitions/conntrackOptions"
        }
      },
      "required": [
        "conntrackModules",
        "conntrackTimeouts",
        "conntrackOptions"
      ]
    },
    "source1": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "port": {
          "type": "string"
        },
        "sets": {
          "type": "string",
          "x-alternatives": [
            {
              "type": "string"
            },
            {
              "$ref": "#/x-alt-definitions/sets"
            }
          ]
        }
      }
    },
    "destination": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "port": {
          "type": "string"
        },
        "sets": {
          "type": "string",
          "x-alternatives": [
            {
              "type": "string"
            },
            {
              "$ref": "#/x-alt-definitions/sets"
            }
          ]
        }
      }
    },
    "inInterface": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "eth",
            "switch",
            "port",
            "pon",
            "br",
            "pppoe",
            "vlan",
            "sfp+",
            "wlan",
            "ath",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      }
    },
    "outInterface": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "eth",
            "switch",
            "port",
            "pon",
            "br",
            "pppoe",
            "vlan",
            "sfp+",
            "wlan",
            "ath",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      }
    },
    "translation": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "port": {
          "type": "string"
        }
      }
    },
    "Model128": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source1"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface"
        },
        "chain": {
          "type": "string"
        },
        "translation": {
          "$ref": "#/definitions/translation"
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "target",
        "chain",
        "bytes",
        "packets"
      ]
    },
    "Model129": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model128"
      }
    },
    "config": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "logDefault": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "policy": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "policy"
      ]
    },
    "inInterface1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "eth",
            "switch",
            "port",
            "pon",
            "br",
            "pppoe",
            "vlan",
            "sfp+",
            "wlan",
            "ath",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      }
    },
    "outInterface1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "eth",
            "switch",
            "port",
            "pon",
            "br",
            "pppoe",
            "vlan",
            "sfp+",
            "wlan",
            "ath",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      }
    },
    "connectionState": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          {
            "override": true
          },
          "established"
        ]
      }
    },
    "Model130": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source1"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface1"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface1"
        },
        "applicationId": {
          "type": "integer",
          "minimum": 1
        },
        "categoryId": {
          "type": "integer",
          "minimum": 0
        },
        "connectionState": {
          "$ref": "#/definitions/connectionState"
        },
        "ipsecPolicy": {
          "type": "string",
          "enum": [
            "match_inbound_ipsec",
            "match_inbound_nonipsec"
          ]
        },
        "icmpType": {
          "type": "string"
        },
        "icmpv6Type": {
          "type": "string"
        },
        "rejectWith": {
          "type": "string",
          "enum": [
            "icmp_net_unreachable",
            "icmp_host_unreachable",
            "icmp_port_unreachable",
            "icmp_proto_unreachable",
            "icmp_net_prohibited",
            "icmp_host_prohibited",
            "icmp_admin_prohibited",
            "tcp_reset,"
          ]
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "connectionState",
        "bytes",
        "packets"
      ]
    },
    "rules": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model130"
      }
    },
    "Model131": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/config"
        },
        "rules": {
          "$ref": "#/definitions/rules"
        },
        "unmatchedBytes": {
          "type": "integer",
          "minimum": 0
        },
        "unmatchedPackets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "config",
        "rules",
        "unmatchedBytes",
        "unmatchedPackets"
      ]
    },
    "Model132": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model131"
      }
    },
    "DHCPLease1": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "expiration": {
          "type": "number"
        },
        "hostname": {
          "type": "string"
        },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server."
        },
        "mac": {
          "type": "string"
        },
        "serverName": {
          "type": "string",
          "minLength": 1
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DHCPLeaseList1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPLease1"
      }
    },
    "DHCPServer1": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "lan",
          "minLength": 1,
          "maxLength": 63
        },
        "dynamicLeases": {
          "type": "number",
          "description": "Total amount of dynamic leases used.",
          "example": 5,
          "minimum": 0
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface id.",
          "example": "eth0"
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "staticLeases": {
          "type": "number",
          "description": "Total amount of static leases used.",
          "example": 5,
          "minimum": 0
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "interface",
        "poolSize",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPServerList1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPServer1"
      }
    },
    "UispRLxcRoute": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        },
        "enabled": {
          "type": "boolean"
        },
        "fib": {
          "type": "boolean"
        },
        "gateway": {
          "type": "string"
        },
        "gatewayStatus": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "nextHop": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        },
        "staticType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "destination"
      ]
    },
    "ListOfUispRLxcRoutes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UispRLxcRoute"
      }
    },
    "RedistributeConnected2": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "string"
        }
      }
    },
    "RedistributeStatic2": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "string"
        }
      }
    },
    "UispRLxcOspf": {
      "type": "object",
      "properties": {
        "router": {
          "type": "string"
        },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute"
        },
        "redistributeConnected": {
          "$ref": "#/definitions/RedistributeConnected2"
        },
        "redistributeStatic": {
          "$ref": "#/definitions/RedistributeStatic2"
        }
      }
    },
    "Model133": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source1"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface1"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface1"
        },
        "tproxyMark": {
          "type": "string"
        },
        "tproxyOnPort": {
          "type": "string"
        },
        "tproxyOnIp": {
          "type": "string"
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "tproxyMark",
        "tproxyOnPort",
        "tproxyOnIp",
        "bytes",
        "packets"
      ]
    },
    "rules1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model133"
      }
    },
    "Model134": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/config"
        },
        "rules": {
          "$ref": "#/definitions/rules1"
        },
        "unmatchedBytes": {
          "type": "integer",
          "minimum": 0
        },
        "unmatchedPackets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "config",
        "rules",
        "unmatchedBytes",
        "unmatchedPackets"
      ]
    },
    "Model135": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model134"
      }
    },
    "identification7": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "entries": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Model136": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification7"
        },
        "description": {
          "type": "string"
        },
        "entries": {
          "$ref": "#/definitions/entries"
        }
      },
      "required": [
        "identification",
        "entries"
      ]
    },
    "Model137": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model136"
      }
    },
    "identification8": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "Model138": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification8"
        },
        "description": {
          "type": "string"
        },
        "entries": {
          "$ref": "#/definitions/entries"
        }
      },
      "required": [
        "identification",
        "entries"
      ]
    },
    "Model139": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model138"
      }
    },
    "source2": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "port": {
          "type": "string"
        },
        "sets": {
          "type": "string",
          "x-alternatives": [
            {
              "type": "string"
            },
            {
              "$ref": "#/x-alt-definitions/sets"
            }
          ]
        }
      }
    },
    "destination1": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "port": {
          "type": "string"
        },
        "sets": {
          "type": "string",
          "x-alternatives": [
            {
              "type": "string"
            },
            {
              "$ref": "#/x-alt-definitions/sets"
            }
          ]
        }
      }
    },
    "inInterface2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "eth",
            "switch",
            "port",
            "pon",
            "br",
            "pppoe",
            "vlan",
            "sfp+",
            "wlan",
            "ath",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      }
    },
    "outInterface2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "eth",
            "switch",
            "port",
            "pon",
            "br",
            "pppoe",
            "vlan",
            "sfp+",
            "wlan",
            "ath",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      }
    },
    "Model140": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source2"
        },
        "destination": {
          "$ref": "#/definitions/destination1"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface2"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface2"
        },
        "tproxyMark": {
          "type": "string"
        },
        "tproxyOnPort": {
          "type": "string"
        },
        "tproxyOnIp": {
          "type": "string"
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "tproxyMark",
        "tproxyOnPort",
        "tproxyOnIp",
        "bytes",
        "packets"
      ]
    },
    "rules2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model140"
      }
    },
    "Model141": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/config"
        },
        "rules": {
          "$ref": "#/definitions/rules2"
        },
        "unmatchedBytes": {
          "type": "integer",
          "minimum": 0
        },
        "unmatchedPackets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "config",
        "rules",
        "unmatchedBytes",
        "unmatchedPackets"
      ]
    },
    "Model142": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model141"
      }
    },
    "RedistributeConnected3": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "string"
        }
      }
    },
    "RedistributeStatic3": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "string"
        }
      }
    },
    "UispROspf": {
      "type": "object",
      "properties": {
        "router": {
          "type": "string"
        },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute"
        },
        "redistributeConnected": {
          "$ref": "#/definitions/RedistributeConnected3"
        },
        "redistributeStatic": {
          "$ref": "#/definitions/RedistributeStatic3"
        }
      }
    },
    "UispRRoute": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        },
        "enabled": {
          "type": "boolean"
        },
        "fib": {
          "type": "boolean"
        },
        "gateway": {
          "type": "string"
        },
        "gatewayStatus": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "nextHop": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        },
        "staticType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "destination"
      ]
    },
    "ListOfUispRRoutes": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/UispRRoute"
      }
    },
    "DHCPServer2": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dnsServers": {
          "$ref": "#/definitions/dnsServers"
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "lan",
          "minLength": 1,
          "maxLength": 63
        },
        "dynamicLeases": {
          "type": "number",
          "description": "Total amount of dynamic leases used.",
          "example": 5,
          "minimum": 0
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface id.",
          "example": "eth0"
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "staticLeases": {
          "type": "number",
          "description": "Total amount of static leases used.",
          "example": 5,
          "minimum": 0
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "interface",
        "ipVersion",
        "poolSize",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPServerList2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPServer2"
      }
    },
    "DHCPLease2": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "expiration": {
          "type": "number"
        },
        "hostname": {
          "type": "string"
        },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server."
        },
        "mac": {
          "type": "string"
        },
        "serverName": {
          "type": "string",
          "minLength": 1
        },
        "type": {
          "type": "string"
        }
      }
    },
    "DHCPLeaseList2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPLease2"
      }
    },
    "Model143": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source2"
        },
        "destination": {
          "$ref": "#/definitions/destination1"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface2"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface2"
        },
        "applicationId": {
          "type": "integer",
          "minimum": 1
        },
        "categoryId": {
          "type": "integer",
          "minimum": 0
        },
        "connectionState": {
          "$ref": "#/definitions/connectionState"
        },
        "ipsecPolicy": {
          "type": "string",
          "enum": [
            "match_inbound_ipsec",
            "match_inbound_nonipsec"
          ]
        },
        "icmpType": {
          "type": "string"
        },
        "icmpv6Type": {
          "type": "string"
        },
        "rejectWith": {
          "type": "string",
          "enum": [
            "icmp_net_unreachable",
            "icmp_host_unreachable",
            "icmp_port_unreachable",
            "icmp_proto_unreachable",
            "icmp_net_prohibited",
            "icmp_host_prohibited",
            "icmp_admin_prohibited",
            "tcp_reset,"
          ]
        },
        "rateLimit": {
          "type": "string",
          "description": "The rate limit in the format \u003Cnumber\u003E/\u003CtimeUnit\u003E - how many packets match per time unit. Time unit can be \"s\" for seconds, \"m\" for minutes, \"h\" for hours, or \"d\" for days. If omitted no rate limiting will be applied.",
          "example": "12/h"
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "connectionState",
        "bytes",
        "packets"
      ]
    },
    "rules3": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model143"
      }
    },
    "Model144": {
      "type": "object",
      "properties": {
        "config": {
          "$ref": "#/definitions/config"
        },
        "rules": {
          "$ref": "#/definitions/rules3"
        },
        "unmatchedBytes": {
          "type": "integer",
          "minimum": 0
        },
        "unmatchedPackets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "config",
        "rules",
        "unmatchedBytes",
        "unmatchedPackets"
      ]
    },
    "Model145": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model144"
      }
    },
    "inInterface3": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "eth",
            "switch",
            "port",
            "pon",
            "br",
            "pppoe",
            "vlan",
            "sfp+",
            "wlan",
            "ath",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      }
    },
    "outInterface3": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "eth",
            "switch",
            "port",
            "pon",
            "br",
            "pppoe",
            "vlan",
            "sfp+",
            "wlan",
            "ath",
            "lag",
            "loopback",
            "tunnel"
          ]
        }
      }
    },
    "Model146": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source2"
        },
        "destination": {
          "$ref": "#/definitions/destination1"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface3"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface3"
        },
        "chain": {
          "type": "string"
        },
        "translation": {
          "$ref": "#/definitions/translation"
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "target",
        "chain",
        "bytes",
        "packets"
      ]
    },
    "Model147": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model146"
      }
    },
    "Model148": {
      "type": "object",
      "properties": {
        "conntrackModules": {
          "$ref": "#/definitions/conntrackModules"
        },
        "conntrackTimeouts": {
          "$ref": "#/definitions/conntrackTimeouts"
        },
        "conntrackOptions": {
          "$ref": "#/definitions/conntrackOptions"
        }
      },
      "required": [
        "conntrackModules",
        "conntrackTimeouts",
        "conntrackOptions"
      ]
    },
    "Model149": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Interface name.",
          "example": "eth0"
        },
        "displayName": {
          "type": "string",
          "example": "eth0"
        },
        "usedAuto": {
          "type": "boolean",
          "example": true
        },
        "usableForGateway": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "InterfaceList": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model149"
      }
    },
    "ListOfAvailableInterfaces": {
      "type": "object",
      "properties": {
        "dataLinkId": {
          "type": "string"
        },
        "deviceId": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "interfaces": {
          "$ref": "#/definitions/InterfaceList"
        }
      },
      "required": [
        "deviceId"
      ]
    },
    "psuConfig": {
      "type": "object",
      "properties": {
        "priority": {
          "type": "string",
          "enum": [
            "automatic",
            "psu1",
            "psu2",
            "none"
          ]
        }
      }
    },
    "autoPowerOff": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "batteryLevel": {
          "type": "number"
        }
      }
    },
    "Model150": {
      "type": "object",
      "properties": {
        "pingWatchdog": {
          "$ref": "#/definitions/pingWatchdog"
        },
        "enabled": {
          "type": "boolean"
        },
        "autoPowerOff": {
          "$ref": "#/definitions/autoPowerOff"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "battery": {
      "type": "object",
      "properties": {
        "charging": {
          "type": "boolean"
        },
        "capacity": {
          "type": "integer",
          "minimum": 1
        },
        "installDate": {
          "type": "string"
        },
        "fastCharging": {
          "type": "boolean"
        }
      }
    },
    "identification9": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "ethernet",
          "enum": [
            "ethernet",
            "wireless",
            "pon",
            "switch",
            "bridge",
            "vlan",
            "pppoe",
            "port",
            "lag",
            "tunnel"
          ]
        }
      },
      "required": [
        "id"
      ]
    },
    "Model151": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification9"
        },
        "poe": {
          "type": "boolean"
        },
        "pingWatchdog": {
          "$ref": "#/definitions/pingWatchdog"
        }
      }
    },
    "interfaces10": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model151"
      }
    },
    "SystemConfigurationPower": {
      "type": "object",
      "properties": {
        "psuConfig": {
          "$ref": "#/definitions/psuConfig"
        },
        "dcOutput": {
          "$ref": "#/definitions/Model150",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/dcOutput"
            },
            {
              "$ref": "#/x-alt-definitions/dcOutput1"
            }
          ]
        },
        "battery": {
          "$ref": "#/definitions/battery"
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces10"
        }
      }
    },
    "Model152": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ready",
            "syncInProgress",
            "notEnoughSpace",
            "failed"
          ]
        },
        "progressPercent": {
          "type": "integer",
          "minimum": 0,
          "maximum": 100
        },
        "remainingTime": {
          "type": "integer",
          "minimum": 0
        },
        "failureReason": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Model153": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model152"
      }
    },
    "Model154": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "notInserted",
            "ready",
            "locked",
            "detached",
            "syncInProgress",
            "unusable"
          ]
        },
        "free": {
          "type": "integer",
          "minimum": 0
        },
        "total": {
          "type": "integer",
          "minimum": 0
        },
        "failureReason": {
          "type": "string"
        }
      }
    },
    "Model155": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "enum": [
            "null",
            "inProgress",
            "finished",
            "failed"
          ]
        },
        "progressPercent": {
          "type": "integer",
          "minimum": 0,
          "maximum": 100
        },
        "remainingTime": {
          "type": "integer",
          "minimum": 0
        },
        "failureReason": {
          "type": "string"
        }
      }
    },
    "DataLinkPayload": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "deviceIdFrom": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "interfaceIdFrom": {
          "type": "string"
        },
        "deviceIdTo": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "interfaceIdTo": {
          "type": "string"
        }
      },
      "required": [
        "deviceIdFrom",
        "interfaceIdFrom",
        "deviceIdTo",
        "interfaceIdTo"
      ]
    },
    "NewGatewayDevice": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Id of gateway device",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "NewGateway": {
      "type": "object",
      "properties": {
        "netflowEnabled": {
          "type": "boolean",
          "description": "Set to true to enable NetFlow.",
          "example": true
        },
        "netflowAlerts": {
          "type": "boolean",
          "description": "Set to true to enable alerts.",
          "example": true
        },
        "qosEnabled": {
          "type": "boolean",
          "description": "Set to true to enable traffic shaping.",
          "example": true
        },
        "suspend": {
          "type": "boolean",
          "description": "Set to true to enable suspend.",
          "example": true
        },
        "connectivityProvider": {
          "type": "string",
          "description": "Connectivity provider",
          "example": "T-Mobile"
        },
        "connectivityUplinkCapacity": {
          "type": "number",
          "description": "Connectivity uplink capacity in Mbps",
          "example": "500",
          "minimum": 0
        },
        "connectivityDownlinkCapacity": {
          "type": "number",
          "description": "Connectivity downlink capacity in Mbps",
          "example": "500",
          "minimum": 0
        },
        "suspendAllowedIps": {
          "$ref": "#/definitions/suspendAllowedIps"
        },
        "connectivityIpQueue": {
          "$ref": "#/definitions/connectivityIpQueue"
        },
        "defaultIpQueue": {
          "$ref": "#/definitions/defaultIpQueue"
        },
        "forceOverwrite": {
          "type": "boolean",
          "description": "Set to true to force write new NetFlow settings to device over current device's settings.",
          "example": false
        },
        "statistics": {
          "$ref": "#/definitions/statistics1"
        },
        "device": {
          "$ref": "#/definitions/NewGatewayDevice"
        }
      },
      "required": [
        "netflowEnabled",
        "netflowAlerts",
        "qosEnabled",
        "suspend",
        "device"
      ]
    },
    "Model156": {
      "type": "object",
      "description": "status of updated gateway with data",
      "properties": {
        "result": {
          "type": "boolean",
          "description": "config successfully written to device or not",
          "example": true
        },
        "message": {
          "type": "string",
          "description": "description of what happened",
          "example": "gateway updated successfully"
        },
        "data": {
          "$ref": "#/definitions/Model10"
        }
      },
      "required": [
        "result",
        "message"
      ]
    },
    "CreateSiteLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "Site latitude.",
          "example": 86.922623,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Site longitude.",
          "example": 27.986065,
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": [
        "longitude",
        "latitude"
      ]
    },
    "CreateSite": {
      "type": "object",
      "properties": {
        "parentSiteId": {
          "type": "string",
          "description": "ID of the parent site (deprecated).",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "location": {
          "$ref": "#/definitions/CreateSiteLocation"
        },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 8848
        },
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Nepal"
        },
        "contactName": {
          "type": "string",
          "description": "Name of the contact person.",
          "example": "John Smith"
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of the contact person."
        },
        "contactEmail": {
          "type": "string",
          "description": "Email of the contact person.",
          "example": "email@example.com"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description."
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "default": "site",
          "enum": [
            "site",
            "endpoint",
            "client",
            "subscriber"
          ]
        },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        }
      },
      "required": [
        "name"
      ]
    },
    "Model157": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "firmwareVersion": {
          "type": "string"
        },
        "firmwareForMStationsVersion": {
          "type": "string",
          "description": "For accessPoint (AC series) with M stations."
        }
      },
      "required": [
        "deviceId",
        "firmwareVersion"
      ]
    },
    "upgrades": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/Model157",
        "x-alternatives": [
          {
            "$ref": "#/x-alt-definitions/Model27"
          },
          {
            "$ref": "#/x-alt-definitions/Model28"
          }
        ]
      }
    },
    "Model158": {
      "type": "object",
      "properties": {
        "upgradeInMaintenanceWindow": {
          "type": "boolean",
          "description": "Schedule upgrade over maintenance window."
        },
        "upgrades": {
          "$ref": "#/definitions/upgrades"
        }
      },
      "required": [
        "upgrades"
      ]
    },
    "CreateToken": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Human readable name of the token.",
          "example": "Mobile App",
          "maxLength": 20
        },
        "meta": {
          "type": "string",
          "description": "Any token metadata.",
          "maxLength": 256
        },
        "scope": {
          "type": "string",
          "description": "If payload contains the scope value the token will be used independently of its user. The user can only create scope token of its own scope or lower.",
          "enum": [
            "superadmin",
            "admin",
            "guest"
          ]
        }
      }
    },
    "NewTokenSchema": {
      "type": "object",
      "description": "Information about new token.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Token ID, not the token itself.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "description": "Human readable token name.",
          "example": "Mobile App"
        },
        "lastIp": {
          "type": "string",
          "description": "IP address that last used this token.",
          "example": "127.0.0.1",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was created.",
          "example": "2011-10-03T14:48:00.000Z"
        },
        "lastUsed": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token was last used. If null then it has not been used yet.",
          "example": "2011-10-04T14:48:00.000Z"
        },
        "expiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Time when this token will expire unless it is renewed. If null than it will never expire.",
          "example": "2011-10-05T14:48:00.000Z"
        },
        "maxExpiresAt": {
          "type": "string",
          "format": "date-time",
          "description": "Latest time when the token will expire. If null then it will never expire.",
          "example": "2011-11-05T14:48:00.000Z"
        },
        "scope": {
          "$ref": "#/definitions/scope"
        },
        "userId": {
          "type": "string",
          "description": "Id of the user this token represents. Null if the token is not bound to any user.",
          "example": "261aa95a-0270-4416-894a-616a0cecedbb"
        },
        "user": {
          "$ref": "#/definitions/user"
        },
        "transient": {
          "type": "boolean",
          "description": "If true then the token will be deleted when server restarts.",
          "example": false
        },
        "currentSession": {
          "type": "boolean",
          "description": "If true than this token was used in this request.",
          "example": false
        },
        "meta": {
          "type": "string",
          "description": "Token metadata.",
          "example": ""
        },
        "allIpsCount": {
          "type": "number",
          "description": "Total number of different IP addresses this token has been used from.",
          "example": 3
        },
        "ips": {
          "$ref": "#/definitions/ips"
        },
        "token": {
          "type": "string",
          "description": "The newly created token that can be used in x-auth-token header.",
          "example": "d5b6d28a-9477-423b-9ed9-0c96b717e52f"
        }
      },
      "required": [
        "id",
        "name",
        "lastIp",
        "createdAt",
        "lastUsed",
        "expiresAt",
        "maxExpiresAt",
        "scope",
        "transient",
        "currentSession",
        "allIpsCount",
        "token"
      ]
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username used for login.",
          "example": "admin",
          "pattern": "[@{}()\u003C\u003E/+*'\";=%]+"
        },
        "email": {
          "type": "string",
          "description": "User's email.",
          "example": "admin@example.com",
          "x-format": {
            "email": true
          }
        },
        "password": {
          "type": "string",
          "description": "User's password.",
          "example": "d4ab472281aeb116",
          "minLength": 4,
          "maxLength": 64
        },
        "firstName": {
          "type": "string",
          "description": "User's first name.",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "description": "User's last name.",
          "example": "Doe"
        },
        "role": {
          "type": "string",
          "description": "Users's role in Network.",
          "example": "admin",
          "enum": [
            "superadmin",
            "admin",
            "guest",
            "anonymous",
            "installer"
          ]
        },
        "ucrmRole": {
          "type": "string",
          "description": "Users's role ID in CRM."
        },
        "homeScreen": {
          "type": "string",
          "example": "/nms",
          "enum": [
            "/nms",
            "/crm"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether user is allowed to login or not.",
          "example": true
        }
      },
      "required": [
        "email",
        "password",
        "role"
      ]
    },
    "RequestSiteAccessGroupSingleSite": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "isReadOnly": {
          "type": "boolean",
          "description": "If true, access to site is read-only. If false, access to site is read-write.",
          "example": true
        }
      },
      "required": [
        "id",
        "isReadOnly"
      ]
    },
    "whitelist1": {
      "type": "array",
      "description": "List of accessible sites.",
      "items": {
        "$ref": "#/definitions/RequestSiteAccessGroupSingleSite"
      }
    },
    "RequestSiteAccessGroup": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Section 1",
          "maxLength": 100
        },
        "whitelist": {
          "$ref": "#/definitions/whitelist1"
        }
      },
      "required": [
        "name",
        "whitelist"
      ]
    },
    "NewClientLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "Client site latitude.",
          "example": -0.1583459,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Client site longitude.",
          "example": 51.5238074,
          "minimum": -90,
          "maximum": 90
        },
        "altitude": {
          "type": "number",
          "description": "Meters above the ground.",
          "example": 240
        },
        "elevation": {
          "type": "number",
          "description": "Meters above the sea level.",
          "example": 20
        },
        "heading": {
          "type": "number",
          "description": "\n    Value in degrees. The value is based on map, e.g. without magnetic declination.\n    Ignored on update when magneticHeading is present. North is 0 degrees, East is 90, South is 180, West is 270.\n  ",
          "example": 88
        },
        "magneticHeading": {
          "type": "number",
          "description": "\n    Value in degrees. Compass heading (magnetic north).\n    It’s what you’re changing when you spin the dish around on a mast.\n    North is 0 degrees, East is 90, South is 180, West is 270.\n  ",
          "example": 90
        },
        "tilt": {
          "type": "number",
          "description": "\n    Value in degrees. How high in the sky the dish is pointing.\n    0 degrees has the dish pointing straight ahead, 90 has the dish pointing straight up\n    and -90 has the dish pointing straight down.\n  ",
          "example": 20,
          "minimum": -90,
          "maximum": 90
        },
        "roll": {
          "type": "number",
          "description": "\n    Value in degrees. How low one side of the dish is compared to the other.\n    0 degrees no rotation, 90 rotation to the left, -90 rotation to the right and -180 upside down.\n  ",
          "example": 0,
          "minimum": -180,
          "maximum": 180
        }
      },
      "required": [
        "longitude",
        "latitude"
      ]
    },
    "addressData": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Map provider.",
          "example": "GoogleMaps",
          "enum": [
            "GoogleMaps",
            "OpenStreetMap"
          ]
        },
        "addressComponents": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        }
      },
      "required": [
        "type"
      ]
    },
    "NewClientSchema": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "description": "First name of the Client.",
          "example": "Dr"
        },
        "lastName": {
          "type": "string",
          "description": "Last name of the Client.",
          "example": "Watson"
        },
        "servicePlanId": {
          "type": "string",
          "description": "ID of the CRM Service plan that should be assigned to the new Client",
          "example": "1"
        },
        "address": {
          "type": "string",
          "description": "Address of the Client site.",
          "example": "221b Baker street, London"
        },
        "phone": {
          "type": "string",
          "description": "Client's phone number.",
          "example": "+44123456789"
        },
        "email": {
          "type": "string",
          "description": "Client's email.",
          "example": "drwatson@example.com",
          "x-format": {
            "email": true
          }
        },
        "note": {
          "type": "string",
          "description": "Custom note.",
          "example": "Someone else actually lives here"
        },
        "location": {
          "$ref": "#/definitions/NewClientLocation"
        },
        "addressData": {
          "$ref": "#/definitions/addressData"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "servicePlanId"
      ]
    },
    "deviceIds": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "Model159": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "deviceIds": {
          "$ref": "#/definitions/deviceIds"
        }
      },
      "required": [
        "siteId"
      ]
    },
    "Model160": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "siteId",
        "deviceId"
      ]
    },
    "AuthorizeFirstDeviceSchema": {
      "type": "array",
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "required"
          }
        }
      }
    },
    "deviceIds1": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "DevicesBackup": {
      "type": "object",
      "properties": {
        "deviceIds": {
          "$ref": "#/definitions/deviceIds1"
        }
      }
    },
    "ids": {
      "type": "array",
      "minItems": 1,
      "maxItems": 10000,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "Model161": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/ids"
        }
      },
      "required": [
        "ids"
      ]
    },
    "deletedIds": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "undeletedIds": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "BulkDeleteDevices": {
      "type": "object",
      "properties": {
        "deletedIds": {
          "$ref": "#/definitions/deletedIds"
        },
        "undeletedIds": {
          "$ref": "#/definitions/undeletedIds"
        },
        "message": {
          "type": "string"
        },
        "discovered": {
          "type": "boolean"
        }
      },
      "required": [
        "deletedIds",
        "undeletedIds",
        "message"
      ]
    },
    "Model162": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/ids"
        }
      },
      "required": [
        "ids"
      ]
    },
    "deviceIds2": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "PayloadEndpointsForParallelFirmwareUpgrade": {
      "type": "object",
      "properties": {
        "deviceIds": {
          "$ref": "#/definitions/deviceIds2"
        }
      },
      "required": [
        "deviceIds"
      ]
    },
    "devices2": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeviceStatusOverview"
      }
    },
    "DeviceFirmware3": {
      "type": "object",
      "properties": {
        "compatible": {
          "type": "boolean",
          "description": "If firmware is compatible with UISP"
        },
        "current": {
          "type": "string",
          "description": "Current firmware version"
        },
        "latest": {
          "type": "string",
          "description": "Latest known firmware version"
        },
        "latestOnCurrentMajorVersion": {
          "type": "string",
          "description": "Latest known firmware version on current major version"
        },
        "latestOver": {
          "type": "string",
          "description": "Upgrade this firmware version as first if target\n  firmware is higher than latestOver. (AirCube must be updated over 2.8.0 fw)"
        },
        "semver": {
          "$ref": "#/definitions/semver"
        },
        "upgradeRecommendedToVersion": {
          "type": "string",
          "description": "Recommended firmware version to upgrade to."
        },
        "prospective": {
          "type": "string",
          "description": "Latest firmware version, even if not supported by UISP yet"
        }
      },
      "required": [
        "current",
        "latest",
        "latestOnCurrentMajorVersion",
        "latestOver",
        "upgradeRecommendedToVersion",
        "prospective"
      ]
    },
    "string3": {
      "type": "object",
      "properties": {
        "groupId": {
          "type": "string",
          "description": "Group id for example: \"Group-1\"."
        },
        "kind": {
          "type": "string",
          "description": "Group id by model, fw version and platform."
        },
        "canUpgrade": {
          "type": "boolean",
          "description": "Is possible perform upgrade firmware on group."
        },
        "devices": {
          "$ref": "#/definitions/devices2"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware3"
        }
      },
      "required": [
        "groupId",
        "kind",
        "canUpgrade"
      ]
    },
    "addresses3": {
      "type": "array",
      "default": [],
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "required",
            "version": [
              "ipv4"
            ]
          }
        }
      }
    },
    "Model163": {
      "type": "object",
      "properties": {
        "index": {
          "type": "integer",
          "minimum": 0
        },
        "name": {
          "type": "string"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$"
        },
        "type": {
          "type": "string",
          "default": "eth",
          "enum": [
            "eth",
            "sfp+",
            "wlan"
          ]
        },
        "addresses": {
          "$ref": "#/definitions/addresses3"
        }
      },
      "required": [
        "index",
        "name"
      ]
    },
    "DeviceImportInterfaces": {
      "type": "array",
      "default": [],
      "minItems": 0,
      "items": {
        "$ref": "#/definitions/Model163"
      }
    },
    "DeviceImport": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "ubntDevice": {
          "type": "boolean",
          "description": "Set to true if it is a UISP devices",
          "example": true,
          "default": false
        },
        "deviceRole": {
          "type": "string",
          "description": "Device role for third party devices.",
          "example": "router",
          "default": "other",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "httpsPort": {
          "type": "integer",
          "default": 443,
          "minimum": 1,
          "maximum": 65535
        },
        "sshPort": {
          "type": "integer",
          "default": 22,
          "minimum": 1,
          "maximum": 65535
        },
        "hostname": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "snmpCommunity": {
          "type": "string",
          "default": "public"
        },
        "interfaces": {
          "$ref": "#/definitions/DeviceImportInterfaces"
        },
        "note": {
          "type": "string",
          "maxLength": 300
        }
      }
    },
    "DevicesImport": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DeviceImport"
      }
    },
    "ids1": {
      "type": "array",
      "x-constraint": {
        "length": 2
      },
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "Model164": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/ids1"
        }
      }
    },
    "Preregistered device": {
      "type": "object",
      "properties": {
        "mac": {
          "type": "string",
          "description": "MAC address of the preregistered device",
          "example": "12:12:12:12:12:12",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Model of the preregistered device",
          "example": "ER-X"
        },
        "deviceToken": {
          "type": "string",
          "description": "Device token is a string uniquely identifying a device",
          "example": "987asdfPOSD9dPXY58hxohex9Q0842sUEZgURMNZvaBCZCQROzgxjbIhJWi7fta8se"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "Firmware version of the preregistered device inn SemVer format.",
          "example": "1.2.3"
        },
        "ip": {
          "type": "string",
          "description": "IP address of the preregistered device in CIDR format",
          "example": "1.2.3.4/24",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "name": {
          "type": "string",
          "description": "User defined name of the preregistered device in CIDR format",
          "example": "John Doe's CPE"
        },
        "subscriberId": {
          "type": "string",
          "description": "Id of the subscriber the preregistered device is to be assigned to on adoption",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "regeneratePassword": {
          "type": "boolean",
          "description": "Set to true if setting a strong password is needed on device adoption",
          "example": true
        }
      },
      "required": [
        "mac",
        "model"
      ]
    },
    "Model165": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/ids"
        }
      },
      "required": [
        "ids"
      ]
    },
    "DiscoveryImportItem": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "httpsPort": {
          "type": "integer",
          "default": 443,
          "minimum": 0,
          "maximum": 65535
        }
      },
      "required": [
        "ip",
        "username",
        "password"
      ]
    },
    "DiscoveryImportList": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/DiscoveryImportItem"
      }
    },
    "ListOfFirmwareIds": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "ServerLogVerbosityPayloadSchema": {
      "type": "object",
      "properties": {
        "verbosity": {
          "type": "string",
          "enum": [
            "trace",
            "debug",
            "info",
            "warn",
            "error",
            "fatal"
          ]
        },
        "duration": {
          "type": "integer",
          "description": "Duration in milliseconds.",
          "enum": [-1],
          "maximum": 2592000000,
          "x-constraint": {
            "sign": "positive"
          }
        }
      },
      "required": [
        "verbosity",
        "duration"
      ]
    },
    "user2": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "pattern": "[@{}()\u003C\u003E/+*'\";=%]+"
        },
        "email": {
          "type": "string",
          "x-format": {
            "email": true
          }
        },
        "alerts": {
          "type": "boolean"
        },
        "timezone": {
          "type": "string",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Ciudad_Juarez",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Nuuk",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Qatar",
            "Asia/Qostanay",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Kyiv",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kanton",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 64
        },
        "country": {
          "type": "string",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "ssoId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "imageUrl": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "email",
        "timezone",
        "country"
      ]
    },
    "smtp": {
      "type": "object",
      "properties": {
        "gmailUsername": {
          "type": "string",
          "x-format": {
            "email": true
          }
        },
        "gmailPassword": {
          "type": "string"
        },
        "customSmtpHostname": {
          "type": "string",
          "x-format": {
            "hostname": true
          }
        },
        "customSmtpPort": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "customSmtpSecurityMode": {
          "type": "string",
          "enum": [
            "Plain text",
            "SSL",
            "TLS"
          ]
        },
        "tlsAllowUnauthorized": {
          "type": "boolean"
        },
        "customSmtpAuthEnabled": {
          "type": "boolean"
        },
        "customSmtpUsername": {
          "type": "string"
        },
        "customSmtpPassword": {
          "type": "string"
        },
        "customSmtpSender": {
          "type": "string",
          "x-format": {
            "email": true
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "smtp",
            "gmail",
            "nosmtp",
            "cloud"
          ]
        }
      },
      "required": [
        "gmailUsername",
        "gmailPassword",
        "customSmtpHostname",
        "customSmtpPort",
        "tlsAllowUnauthorized",
        "customSmtpAuthEnabled",
        "customSmtpUsername",
        "customSmtpPassword"
      ]
    },
    "Model166": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "useLetsEncrypt": {
          "type": "boolean"
        },
        "eulaConfirmed": {
          "type": "boolean"
        },
        "user": {
          "$ref": "#/definitions/user2"
        },
        "smtp": {
          "$ref": "#/definitions/smtp"
        },
        "isIsp": {
          "type": "boolean"
        },
        "allowLoggingToSentry": {
          "type": "boolean",
          "default": true
        },
        "allowLoggingToLogentries": {
          "type": "boolean",
          "default": true
        }
      },
      "required": [
        "hostname",
        "useLetsEncrypt",
        "eulaConfirmed",
        "user"
      ]
    },
    "SetupUispFinish": {
      "type": "object",
      "properties": {
        "passphrase": {
          "type": "string"
        },
        "connectionString": {
          "type": "string"
        },
        "isLetsEncryptError": {
          "type": "boolean"
        }
      }
    },
    "ListOfSiteIds": {
      "type": "array",
      "minItems": 1,
      "maxItems": 10000,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "Model167": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/ListOfSiteIds"
        }
      },
      "required": [
        "ids"
      ]
    },
    "BulkDeleteSites": {
      "type": "object",
      "properties": {
        "deletedIds": {
          "$ref": "#/definitions/deletedIds"
        },
        "undeletedIds": {
          "$ref": "#/definitions/undeletedIds"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "deletedIds",
        "undeletedIds",
        "message"
      ]
    },
    "macAddresses": {
      "type": "array",
      "description": "Device with one of these MAC addresses will be automatically authorised and assigned to defined site/client.",
      "example": [],
      "items": {
        "type": "string"
      }
    },
    "ipAddresses1": {
      "type": "array",
      "description": "Device with one of these IP addresses will be automatically authorised and assigned to defined site/client.",
      "items": {
        "type": "string",
        "example": "192.168.10.12",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "SiteImport": {
      "type": "object",
      "properties": {
        "parentSiteName": {
          "type": "string",
          "description": "Name of the parent site."
        },
        "parentSiteId": {
          "type": "string",
          "description": "ID of the parent site.",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Building B"
        },
        "longitude": {
          "type": "number",
          "description": "Site latitude.",
          "example": 10.3025,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Site longitude.",
          "example": -8.12,
          "minimum": -90,
          "maximum": 90
        },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 88
        },
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Bougoula, Kankan, Guinea"
        },
        "contactName": {
          "type": "string",
          "description": "Name of the contact person.",
          "example": "John Smith"
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of the contact person.",
          "example": "+224 64461626"
        },
        "contactEmail": {
          "type": "string",
          "description": "Email of the contact person.",
          "example": "email@example.com"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description.",
          "maxLength": 300
        },
        "macAddresses": {
          "$ref": "#/definitions/macAddresses"
        },
        "ipAddresses": {
          "$ref": "#/definitions/ipAddresses1"
        },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "suspended": {
          "type": "boolean",
          "description": "If site is suspended.",
          "default": false
        },
        "qos": {
          "$ref": "#/definitions/SiteTrafficShaping2"
        }
      },
      "required": [
        "name",
        "longitude",
        "latitude"
      ]
    },
    "SiteImportList": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/SiteImport"
      }
    },
    "ipAddresses2": {
      "type": "array",
      "description": "Device with one of these IP addresses will be automatically authorised and assigned to defined site/client.",
      "items": {
        "type": "string",
        "example": "192.168.10.12",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "SubscriberImport": {
      "type": "object",
      "properties": {
        "parentSiteName": {
          "type": "string",
          "description": "Name of the parent site."
        },
        "parentSiteId": {
          "type": "string",
          "description": "ID of the parent site.",
          "x-format": {
            "guid": true
          }
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Smith"
        },
        "clientUcrmId": {
          "type": "string",
          "x-alternatives": [
            {
              "type": "string"
            },
            {
              "type": "number"
            }
          ]
        },
        "servicePlanId": {
          "type": "string",
          "description": "ID of UCRM service plan.",
          "example": "135"
        },
        "longitude": {
          "type": "number",
          "description": "Site latitude.",
          "example": 10.3025,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Site longitude.",
          "example": -8.12,
          "minimum": -90,
          "maximum": 90
        },
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Bougoula, Kankan, Guinea"
        },
        "contactPhone": {
          "type": "string",
          "description": "Phone number of the contact person.",
          "example": "+224 64461626"
        },
        "contactEmail": {
          "type": "string",
          "description": "Email of the contact person.",
          "example": "email@example.com"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description.",
          "maxLength": 300
        },
        "macAddresses": {
          "$ref": "#/definitions/macAddresses"
        },
        "ipAddresses": {
          "$ref": "#/definitions/ipAddresses2"
        }
      },
      "required": [
        "firstName",
        "lastName",
        "longitude",
        "latitude"
      ]
    },
    "ImporSubscriberSchema": {
      "type": "array",
      "minItems": 1,
      "items": {
        "$ref": "#/definitions/SubscriberImport"
      }
    },
    "PayloadSpeedTest": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "target": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "duration": {
          "type": "number",
          "description": "milliseconds"
        },
        "direction": {
          "type": "string",
          "enum": [
            "uplink",
            "downlink",
            "bidirectional"
          ]
        }
      },
      "required": [
        "source",
        "target",
        "duration",
        "direction"
      ]
    },
    "SpeedTestStart": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "result",
        "message",
        "id"
      ]
    },
    "UserCredentials": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "example": "admin",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "example": "xm6jRA2VgrRwMK2s",
          "minLength": 1
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "UserLastReleaseNotesSeen": {
      "type": "object",
      "properties": {
        "lastReleaseNotesSeen": {
          "type": "string",
          "description": "1.0.0"
        }
      },
      "required": [
        "lastReleaseNotesSeen"
      ]
    },
    "UserLocationUpdate": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.8345584421122,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.46358,
          "minimum": -180,
          "maximum": 180
        }
      },
      "required": [
        "latitude",
        "longitude"
      ]
    },
    "Login": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        },
        "mobilePlatform": {
          "type": "string",
          "enum": [
            "ios",
            "android"
          ]
        },
        "sessionTimeout": {
          "type": "number",
          "description": "Ignored, kept for backward compatibility."
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "UserLogin": {
      "type": "object",
      "x-meta": {
        "headers": {
          "x-auth-token": {
            "type": "string",
            "description": "User authorization token"
          }
        }
      },
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "example": "admin"
        },
        "email": {
          "type": "string",
          "example": "email@example.com",
          "x-format": {
            "email": true
          }
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "imageUrl": {
          "type": "string"
        },
        "alerts": {
          "type": "boolean"
        },
        "notification": {
          "$ref": "#/definitions/User%20push%20notifications%20settings%20object."
        },
        "totpAuthEnabled": {
          "type": "boolean"
        },
        "isSsoLoginEnabled": {
          "type": "boolean"
        },
        "isLocalLoginEnabled": {
          "type": "boolean"
        },
        "isOfflinePasswordsGenerated": {
          "type": "boolean"
        },
        "role": {
          "type": "string",
          "description": "Role of this user in UISP. 'anonymous' if user is only allowed to access CRM.",
          "example": "admin",
          "enum": [
            "superadmin",
            "admin",
            "guest",
            "anonymous",
            "installer"
          ]
        },
        "presentationMode": {
          "type": "boolean",
          "description": "Obsolete.",
          "example": false
        },
        "forceChangePassword": {
          "type": "boolean"
        },
        "tableConfig": {
          "$ref": "#/definitions/tableConfig"
        },
        "mapConfig": {
          "$ref": "#/definitions/mapConfig"
        },
        "preferences": {
          "$ref": "#/definitions/preferences"
        },
        "lastLogItemId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/definitions/UserLocation"
        },
        "sessionTimeout": {
          "type": "integer",
          "description": "Session expiration in milliseconds, max 30 days.",
          "example": 3600000,
          "minimum": 1
        },
        "keepMeSignedIn": {
          "type": "boolean",
          "description": "Whether session should be cleared when browser window is closed.",
          "example": true
        },
        "lastNewsSeenDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last news check time in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "lastReleaseNotesSeen": {
          "type": "string",
          "description": "Last seen version of release notes.",
          "example": "1.0.0-alpha"
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM user that is bound with this user.",
          "example": "123"
        },
        "ucrmRole": {
          "type": "string",
          "description": "Role of this user in UCRM. 'null' if user is not allowed to access UCRM.",
          "example": "1"
        },
        "homeScreen": {
          "type": "string",
          "description": "Where should the user be redirected after login.",
          "example": "/nms",
          "enum": [
            "/nms",
            "/crm"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the user can log in or not.",
          "example": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the user was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "alerts",
        "isSsoLoginEnabled",
        "isLocalLoginEnabled",
        "isOfflinePasswordsGenerated",
        "forceChangePassword",
        "keepMeSignedIn",
        "lastNewsSeenDate",
        "lastReleaseNotesSeen",
        "ucrmId",
        "ucrmRole",
        "homeScreen",
        "enabled",
        "updated"
      ]
    },
    "TwoFactorToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "exp": {
          "type": "number"
        }
      },
      "required": [
        "id",
        "userId",
        "exp"
      ]
    },
    "Model168": {
      "type": "array",
      "description": "Generated offline passwords. Used for offline access of UISP Console Controller instance.",
      "x-constraint": {
        "length": 10
      },
      "items": {
        "type": "string"
      }
    },
    "ImportUserSchema": {
      "type": "object",
      "properties": {
        "unmsId": {
          "type": "string",
          "description": "Optional user's ID in UISP.",
          "example": "31df9c66-0d8c-4e52-ab10-b6e2b913a9bf",
          "x-format": {
            "guid": true
          }
        },
        "ucrmId": {
          "type": "string",
          "description": "User's ID in CRM.",
          "example": "1"
        },
        "username": {
          "type": "string",
          "description": "Username used for login.",
          "example": "admin"
        },
        "email": {
          "type": "string",
          "description": "User's email.",
          "example": "admin@example.com",
          "x-format": {
            "email": true
          }
        },
        "passwordHash": {
          "type": "string",
          "description": "Bcrypt hashed password.",
          "example": "$2y$12$aZNQg8Iyd7S5riYardQQ9OtAivk0jYN0/cZfyDcTEnHBpjd.y3uHW"
        },
        "totpAuthSecret": {
          "type": "string",
          "description": "User's 2FA token if 2FA is enabled."
        },
        "ucrmRole": {
          "type": "string",
          "description": "Users's role ID in CRM.",
          "example": "da2e1a14-7c84-11e9-8a6d-acbc32bdc357"
        },
        "isSuperAdmin": {
          "type": "boolean",
          "description": "Whether user is UCRM super admin or not.",
          "example": true,
          "default": false
        },
        "isActive": {
          "type": "boolean",
          "description": "Whether user is active or not. Inactive users cannot log in.",
          "example": true,
          "default": true
        },
        "firstName": {
          "type": "string",
          "description": "User's first name.",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "description": "User's last name.",
          "example": "Doe"
        }
      },
      "required": [
        "ucrmId",
        "username",
        "email",
        "passwordHash",
        "ucrmRole"
      ]
    },
    "ImportUsersListSchema": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImportUserSchema"
      }
    },
    "ImportUsersResultSchema": {
      "type": "object",
      "properties": {
        "ucrmId": {
          "type": "string",
          "description": "User's id in CRM.",
          "example": "1"
        },
        "unmsId": {
          "type": "string",
          "description": "User's id in UISP.",
          "example": "e868e1fb-2b65-4a86-91df-4e929a6efc26"
        },
        "newUsername": {
          "type": "string",
          "description": "New username in case that the original CRM username is already taken in UISP.",
          "example": "admin_crm_1"
        }
      },
      "required": [
        "ucrmId",
        "unmsId"
      ]
    },
    "ImportUsersResultListSchema": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/ImportUsersResultSchema"
      }
    },
    "InviteUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username used for login.",
          "example": "admin",
          "pattern": "[@{}()\u003C\u003E/+*'\";=%]+"
        },
        "email": {
          "type": "string",
          "description": "User's email.",
          "example": "admin@example.com",
          "x-format": {
            "email": true
          }
        },
        "role": {
          "type": "string",
          "description": "Users's role in Network.",
          "example": "admin",
          "enum": [
            "superadmin",
            "admin",
            "guest",
            "anonymous",
            "installer"
          ]
        },
        "ucrmRole": {
          "type": "string",
          "description": "Users's role ID in CRM."
        },
        "homeScreen": {
          "type": "string",
          "example": "/nms",
          "enum": [
            "/nms",
            "/crm"
          ]
        }
      },
      "required": [
        "email",
        "role"
      ]
    },
    "InviteUserResponse": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        },
        "metadata": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        },
        "invitationLink": {
          "type": "string"
        }
      },
      "required": [
        "result",
        "message",
        "invitationLink"
      ]
    },
    "VaultCredentials": {
      "type": "object",
      "properties": {
        "passphrase": {
          "type": "string",
          "x-constraint": {
            "length": 20
          }
        },
        "isVaultEnabled": {
          "type": "boolean"
        },
        "isCloudVaultEnabled": {
          "type": "boolean"
        },
        "regeneratePgpKeys": {
          "type": "boolean"
        }
      },
      "required": [
        "isVaultEnabled",
        "isCloudVaultEnabled"
      ]
    },
    "deviceIds3": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "PayloadStationsCount": {
      "type": "object",
      "properties": {
        "deviceIds": {
          "$ref": "#/definitions/deviceIds3"
        }
      },
      "required": [
        "deviceIds"
      ]
    },
    "linkScoreStatistics": {
      "type": "object",
      "properties": {
        "linkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "score": {
          "type": "number",
          "description": "Score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "scoreMax": {
          "type": "number",
          "description": "Score max 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeScore": {
          "type": "number",
          "description": "Score airTime 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeCounter": {
          "type": "number"
        },
        "airTimeCrowdedLastTime": {
          "type": "string",
          "format": "date-time"
        },
        "ccq": {
          "type": "number"
        },
        "airTime": {
          "type": "number"
        },
        "uplink": {
          "type": "integer"
        },
        "downlink": {
          "type": "integer"
        },
        "theoreticalTotalCapacity": {
          "type": "integer"
        },
        "theoreticalUplinkCapacity": {
          "type": "integer"
        },
        "theoreticalDownlinkCapacity": {
          "type": "integer"
        }
      }
    },
    "site5": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.8345584421122,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.46358,
          "minimum": -180,
          "maximum": 180
        }
      }
    },
    "attributes1": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string",
          "enum": [
            "AC",
            "M",
            "G60",
            "AX",
            "LTU",
            "classic"
          ]
        }
      }
    },
    "Model169": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "firmwareVersion": {
          "type": "string"
        },
        "devicesDistance": {
          "type": "number"
        },
        "sitesDistance": {
          "type": "number"
        },
        "connected": {
          "type": "boolean"
        },
        "model": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "antenna": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            "UF_NANOG",
            "UF_LOCO",
            "UF_WIFI",
            "UF_INSTANT",
            "UF_WIFI6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UISP-R-LXC",
            "alpinev2r",
            "alpinev2",
            "mt7621",
            "cn91xxr",
            "UNMSS",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "UISPFIBEROLTXGS",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "eswh",
            "esgh",
            "ES",
            "esx",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF60",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "aflturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SB",
            "UX",
            "UNKNOWN"
          ]
        },
        "linkScoreStatistics": {
          "$ref": "#/definitions/linkScoreStatistics"
        },
        "site": {
          "$ref": "#/definitions/site5"
        },
        "attributes": {
          "$ref": "#/definitions/attributes1"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "downlinkUtilization": {
          "type": "number"
        },
        "uplinkUtilization": {
          "type": "number"
        },
        "downlinkRate": {
          "type": "number"
        },
        "uplinkRate": {
          "type": "number"
        }
      }
    },
    "stations3": {
      "type": "array",
      "minItems": 0,
      "items": {
        "$ref": "#/definitions/Model169"
      }
    },
    "f7ac9cad-ea28-4390-93c8-7add010e8ee31": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "model": {
          "type": "string"
        },
        "antenna": {
          "type": "string"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "linkScoreStatistics": {
          "$ref": "#/definitions/linkScoreStatistics"
        },
        "site": {
          "$ref": "#/definitions/site5"
        },
        "attributes": {
          "$ref": "#/definitions/attributes1"
        },
        "hasAirmaxMStations": {
          "type": "boolean",
          "description": "Access point has airmax M series stations"
        },
        "firmware": {
          "$ref": "#/definitions/DeviceFirmware1"
        },
        "firmwareVersion": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            "UF_NANOG",
            "UF_LOCO",
            "UF_WIFI",
            "UF_INSTANT",
            "UF_WIFI6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UISP-R-LXC",
            "alpinev2r",
            "alpinev2",
            "mt7621",
            "cn91xxr",
            "UNMSS",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "UISPFIBEROLTXGS",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "eswh",
            "esgh",
            "ES",
            "esx",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF60",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "aflturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SB",
            "UX",
            "UNKNOWN"
          ]
        },
        "downlinkRate": {
          "type": "number"
        },
        "uplinkRate": {
          "type": "number"
        },
        "stations": {
          "$ref": "#/definitions/stations3"
        }
      },
      "required": [
        "stations"
      ]
    },
    "data1": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      }
    },
    "Model170": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/data1"
        },
        "result": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "ConnectOtherDevice": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "ip": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "hostname": {
          "type": "string"
        },
        "snmpCommunity": {
          "type": "string"
        },
        "enablePing": {
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "role",
        "hostname",
        "enablePing"
      ]
    },
    "ConnectUbntDevice": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "httpsPort": {
          "type": "integer",
          "default": 443,
          "minimum": 0,
          "maximum": 65535
        },
        "useUnstableFirmware": {
          "type": "boolean",
          "default": false
        },
        "replaceExistingBlackBox": {
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "ip",
        "username",
        "password"
      ]
    },
    "deviceIds4": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "MaintenanceModeSchema": {
      "type": "object",
      "properties": {
        "deviceIds": {
          "$ref": "#/definitions/deviceIds4"
        }
      }
    },
    "Model171": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "x-format": {
            "guid": true
          }
        },
        "duration": {
          "type": "string"
        }
      }
    },
    "Model172": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "siteId"
      ]
    },
    "dnsServers4": {
      "type": "array",
      "description": "Array of IP addresses of DNS servers as IPv4 or IPv6",
      "example": [
        [
          "8.8.8.8"
        ]
      ],
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "optional",
            "version": [
              "ipv4"
            ]
          }
        },
        "x-alternatives": [
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv4"
                ]
              }
            }
          },
          {
            "type": "string",
            "x-format": {
              "ip": {
                "cidr": "optional",
                "version": [
                  "ipv6"
                ]
              }
            }
          }
        ]
      }
    },
    "Model173": {
      "type": "object",
      "properties": {
        "interface": {
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "gateway": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          }
        },
        "dnsServers": {
          "$ref": "#/definitions/dnsServers4"
        }
      },
      "required": [
        "interface"
      ]
    },
    "deviceIds5": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "Model174": {
      "type": "object",
      "properties": {
        "deviceIds": {
          "$ref": "#/definitions/deviceIds5"
        }
      },
      "required": [
        "deviceIds"
      ]
    },
    "deviceIds6": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "Model175": {
      "type": "object",
      "properties": {
        "deviceIds": {
          "$ref": "#/definitions/deviceIds6"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "httpsPort": {
          "type": "integer",
          "default": 443,
          "minimum": 0,
          "maximum": 65535
        },
        "useUnstableFirmware": {
          "type": "boolean",
          "default": false
        },
        "replaceExistingBlackBox": {
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "deviceIds",
        "username",
        "password"
      ]
    },
    "AuthenticateDeviceByTokenSchema": {
      "type": "object",
      "properties": {
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "token": {
          "type": "string"
        }
      }
    },
    "Model176": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "smtp1": {
      "type": "object",
      "properties": {
        "gmailUsername": {
          "type": "string",
          "x-format": {
            "email": true
          }
        },
        "gmailPassword": {
          "type": "string"
        },
        "customSmtpHostname": {
          "type": "string",
          "x-format": {
            "hostname": true
          }
        },
        "customSmtpPort": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "customSmtpSecurityMode": {
          "type": "string",
          "enum": [
            "Plain text",
            "SSL",
            "TLS"
          ]
        },
        "tlsAllowUnauthorized": {
          "type": "boolean"
        },
        "customSmtpAuthEnabled": {
          "type": "boolean"
        },
        "customSmtpUsername": {
          "type": "string"
        },
        "customSmtpPassword": {
          "type": "string"
        },
        "customSmtpSender": {
          "type": "string",
          "x-format": {
            "email": true
          }
        },
        "type": {
          "type": "string",
          "enum": [
            "smtp",
            "gmail",
            "nosmtp"
          ]
        }
      },
      "required": [
        "gmailUsername",
        "gmailPassword",
        "customSmtpHostname",
        "customSmtpPort",
        "tlsAllowUnauthorized",
        "customSmtpAuthEnabled",
        "customSmtpUsername",
        "customSmtpPassword"
      ]
    },
    "Model177": {
      "type": "object",
      "properties": {
        "to": {
          "type": "string",
          "x-format": {
            "email": true
          }
        },
        "smtp": {
          "$ref": "#/definitions/smtp1"
        }
      },
      "required": [
        "to"
      ]
    },
    "Model178": {
      "type": "object",
      "properties": {
        "finishedAt": {
          "type": "integer",
          "description": "Timestamp in milliseconds when the setup was finished.",
          "example": 1557222409000,
          "minimum": 0
        }
      }
    },
    "Model179": {
      "type": "object",
      "properties": {
        "startedAt": {
          "type": "integer",
          "description": "Timestamp in milliseconds when the setup was initiated.",
          "example": 1557222409000,
          "minimum": 0
        }
      }
    },
    "Model180": {
      "type": "object",
      "properties": {
        "stars": {
          "type": "number",
          "description": "Star rating from 0 to 5.",
          "example": 5,
          "minimum": 0,
          "maximum": 5
        },
        "note": {
          "type": "string"
        }
      }
    },
    "Model181": {
      "type": "object",
      "properties": {
        "stationMac": {
          "type": "string",
          "description": "MAC addres of tested station",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "ispName": {
          "type": "string",
          "example": "Czechia ISP - Ostrava"
        },
        "publicIp": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            }
          ]
        },
        "downloadRateBytes": {
          "type": "number",
          "example": 44834803561
        },
        "uploadRateBytes": {
          "type": "number",
          "example": 8385
        },
        "endpoint": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "One of [INTERNET, LOCAL_DEVICE]",
          "example": "INTERNET",
          "enum": [
            "INTERNET",
            "LOCAL_DEVICE"
          ]
        },
        "serverName": {
          "type": "string",
          "example": "uisp.com"
        },
        "downloadSpeedBytes": {
          "type": "number",
          "example": 125000000
        },
        "uploadSpeedBytes": {
          "type": "number",
          "example": 625000000
        },
        "platform": {
          "type": "string",
          "example": "One of [App, Web]",
          "enum": [
            "Web",
            "App"
          ]
        }
      }
    },
    "Model182": {
      "type": "array",
      "minItems": 1,
      "x-constraint": {
        "unique": true
      },
      "items": {
        "type": "string",
        "description": "IP subnet in cidr notation",
        "example": "192.168.1.0/24"
      }
    },
    "SiteNotificationsUpdate": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/ListOfSiteIds"
        },
        "type": {
          "type": "string",
          "description": "What notification system should used by these sites.",
          "example": "system",
          "enum": [
            "system",
            "none"
          ]
        }
      },
      "required": [
        "ids",
        "type"
      ]
    },
    "SiteBindings": {
      "type": "object",
      "properties": {
        "siteId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ucrmId": {
          "type": "string",
          "example": "123"
        }
      },
      "required": [
        "siteId",
        "ucrmId"
      ]
    },
    "ListOfSiteBindings": {
      "type": "array",
      "minItems": 0,
      "items": {
        "$ref": "#/definitions/SiteBindings"
      }
    },
    "Site1": {
      "type": "object",
      "description": "Result of unsuspend, updated site",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "identification": {
          "$ref": "#/definitions/SiteIdentificationDetail"
        },
        "description": {
          "$ref": "#/definitions/SiteDescription"
        },
        "lastSpeedReport": {
          "$ref": "#/definitions/SiteSpeedReport"
        },
        "notifications": {
          "$ref": "#/definitions/SiteNotifications"
        },
        "qos": {
          "$ref": "#/definitions/SiteTrafficShaping"
        },
        "ucrm": {
          "$ref": "#/definitions/SiteUcrmDescription"
        },
        "isMisconfigured": {
          "type": "boolean",
          "description": "Set to true if site is misconfigured",
          "example": true
        }
      }
    },
    "macs": {
      "type": "array",
      "description": "Array of MAC addresses that are to be pre-assigned to a given Subscriber",
      "example": [
        "00:00:00:00:00:01",
        "00:00:00:00:00:02"
      ],
      "items": {
        "type": "string",
        "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
      }
    },
    "ips2": {
      "type": "array",
      "description": "Array of IP addresses that are to be pre-assigned to a given Subscriber",
      "example": [
        "2.2.2.2/24",
        "3.3.3.3/24"
      ],
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "Preregister Subscriber schema": {
      "type": "object",
      "properties": {
        "macs": {
          "$ref": "#/definitions/macs"
        },
        "ips": {
          "$ref": "#/definitions/ips2"
        }
      },
      "required": [
        "macs",
        "ips"
      ]
    },
    "Site2": {
      "type": "object",
      "description": "Result of suspend, updated site",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "identification": {
          "$ref": "#/definitions/SiteIdentificationDetail"
        },
        "description": {
          "$ref": "#/definitions/SiteDescription"
        },
        "lastSpeedReport": {
          "$ref": "#/definitions/SiteSpeedReport"
        },
        "notifications": {
          "$ref": "#/definitions/SiteNotifications"
        },
        "qos": {
          "$ref": "#/definitions/SiteTrafficShaping"
        },
        "ucrm": {
          "$ref": "#/definitions/SiteUcrmDescription"
        },
        "isMisconfigured": {
          "type": "boolean",
          "description": "Set to true if site is misconfigured",
          "example": true
        }
      }
    },
    "Model183": {
      "type": "object",
      "properties": {
        "ssoAccessToken": {
          "type": "string"
        }
      },
      "required": [
        "ssoAccessToken"
      ]
    },
    "Two Factor Login": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Token from successful login."
        },
        "verificationCode": {
          "type": "string",
          "description": "6 digit code from Authenticator.",
          "x-constraint": {
            "length": 6
          }
        },
        "password": {
          "type": "string",
          "description": "Ignored, kept for backward compatibility."
        },
        "sessionTimeout": {
          "type": "number",
          "description": "Ignored, kept for backward compatibility."
        }
      },
      "required": [
        "token",
        "verificationCode"
      ]
    },
    "SsoRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code from successful SSO authentication."
        },
        "state": {
          "type": "string",
          "description": "State previously sent to SSO. Same value must be in nms-sso-login cookie."
        }
      },
      "required": [
        "code",
        "state"
      ]
    },
    "details": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        }
      }
    },
    "Error1": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number",
          "minimum": 400,
          "maximum": 599
        },
        "error": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "validation": {
          "$ref": "#/definitions/validation",
          "x-alternatives": [
            {
              "$ref": "#/x-alt-definitions/parent"
            },
            {
              "$ref": "#/x-alt-definitions/addressComponents"
            }
          ]
        },
        "details": {
          "$ref": "#/definitions/details"
        }
      },
      "required": [
        "statusCode",
        "error"
      ]
    },
    "PasswordResetRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-format": {
            "email": true
          }
        }
      },
      "required": [
        "email"
      ]
    },
    "PasswordResetAction": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "description": "Password reset token."
        },
        "password": {
          "type": "string",
          "description": "New password.",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": [
        "token",
        "password"
      ]
    },
    "PasswordStrength": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": [
        "password"
      ]
    },
    "Model184": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "i": {
          "type": "number"
        },
        "j": {
          "type": "number"
        },
        "guesses": {
          "type": "number"
        },
        "guesses_log10": {
          "type": "number"
        }
      },
      "required": [
        "pattern",
        "token",
        "i",
        "j",
        "guesses",
        "guesses_log10"
      ]
    },
    "base_matches": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model184"
      }
    },
    "Model185": {
      "type": "object",
      "properties": {
        "pattern": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "i": {
          "type": "number"
        },
        "j": {
          "type": "number"
        },
        "guesses": {
          "type": "number"
        },
        "guesses_log10": {
          "type": "number"
        },
        "repeat": {
          "type": "number"
        },
        "base_guesses": {
          "type": "number"
        },
        "base_matches": {
          "$ref": "#/definitions/base_matches"
        }
      },
      "required": [
        "pattern",
        "token",
        "i",
        "j",
        "guesses",
        "guesses_log10"
      ]
    },
    "sequence": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model185"
      }
    },
    "crack_times_seconds": {
      "type": "object",
      "properties": {
        "online_throttling_100_per_hour": {
          "type": "number"
        },
        "online_no_throttling_10_per_second": {
          "type": "number"
        },
        "offline_slow_hashing_1e4_per_second": {
          "type": "number"
        },
        "offline_fast_hashing_1e10_per_second": {
          "type": "number"
        }
      },
      "required": [
        "online_throttling_100_per_hour",
        "online_no_throttling_10_per_second",
        "offline_slow_hashing_1e4_per_second",
        "offline_fast_hashing_1e10_per_second"
      ]
    },
    "crack_times_display": {
      "type": "object",
      "properties": {
        "online_throttling_100_per_hour": {
          "type": "string"
        },
        "online_no_throttling_10_per_second": {
          "type": "string"
        },
        "offline_slow_hashing_1e4_per_second": {
          "type": "string"
        },
        "offline_fast_hashing_1e10_per_second": {
          "type": "string"
        }
      },
      "required": [
        "online_throttling_100_per_hour",
        "online_no_throttling_10_per_second",
        "offline_slow_hashing_1e4_per_second",
        "offline_fast_hashing_1e10_per_second"
      ]
    },
    "suggestions": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "feedback": {
      "type": "object",
      "properties": {
        "warning": {
          "type": "string"
        },
        "suggestions": {
          "$ref": "#/definitions/suggestions"
        }
      }
    },
    "PasswordStrengthMetadata": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string"
        },
        "guesses": {
          "type": "number"
        },
        "guesses_log10": {
          "type": "number"
        },
        "sequence": {
          "$ref": "#/definitions/sequence"
        },
        "calc_time": {
          "type": "number"
        },
        "crack_times_seconds": {
          "$ref": "#/definitions/crack_times_seconds"
        },
        "crack_times_display": {
          "$ref": "#/definitions/crack_times_display"
        },
        "score": {
          "type": "number"
        },
        "feedback": {
          "$ref": "#/definitions/feedback"
        }
      },
      "required": [
        "password",
        "guesses",
        "guesses_log10",
        "calc_time",
        "score"
      ]
    },
    "SsoUserSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3"
        },
        "username": {
          "type": "string",
          "example": "JohnDoe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com",
          "x-format": {
            "email": true
          }
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "imageUrl": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "Model186": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/ids"
        }
      },
      "required": [
        "ids"
      ]
    },
    "VaultCredentialsUnlock": {
      "type": "object",
      "properties": {
        "passphrase": {
          "type": "string"
        }
      },
      "required": [
        "passphrase"
      ]
    },
    "Model187": {
      "type": "object",
      "properties": {
        "parentId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "parentId"
      ]
    },
    "macs1": {
      "type": "array",
      "items": {
        "type": "string",
        "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
      }
    },
    "PayloadSystemUnmsKeyHostnamePort": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "port": {
          "type": "integer",
          "description": "UISP port to migrate to.",
          "example": 443,
          "minimum": 0,
          "maximum": 65535
        },
        "macs": {
          "$ref": "#/definitions/macs1"
        }
      },
      "required": [
        "hostname",
        "port",
        "macs"
      ]
    },
    "PayloadSystemUnmsKey": {
      "type": "object",
      "properties": {
        "unmsKey": {
          "type": "string"
        },
        "deviceIds": {
          "$ref": "#/definitions/deviceIds"
        }
      },
      "required": [
        "unmsKey"
      ]
    },
    "internet": {
      "type": "object",
      "description": "Test connection to the Internet using UBNT speed test infrastructure.",
      "properties": {
        "url": {
          "type": "string",
          "description": "Url of the server to test against, the server is choosen by the caller from the server list\n      provided by directory server."
        },
        "token": {
          "type": "string",
          "description": "Valid token obtained from the directory server."
        }
      }
    },
    "Model188": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "IP address version (aka family).",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        }
      }
    },
    "device4": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model188"
      }
    },
    "native": {
      "type": "object",
      "properties": {
        "duration": {
          "type": "number",
          "description": "Time in ms, -1 means infinity speedtest."
        },
        "role": {
          "type": "string",
          "enum": [
            "master",
            "slave"
          ]
        },
        "device": {
          "$ref": "#/definitions/device4"
        }
      }
    },
    "Model189": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "internet",
          "enum": [
            "internet",
            "native"
          ]
        },
        "direction": {
          "type": "string",
          "example": "both",
          "enum": [
            "download",
            "upload",
            "both"
          ]
        },
        "internet": {
          "$ref": "#/definitions/internet"
        },
        "native": {
          "$ref": "#/definitions/native"
        }
      },
      "required": [
        "type",
        "direction"
      ]
    },
    "Model190": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "status": {
          "type": "string",
          "enum": [
            "running",
            "finished",
            "failed",
            "cancelled"
          ]
        }
      }
    },
    "Model191": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "mtu": {
          "type": "number",
          "minimum": 1
        },
        "pppoeId": {
          "type": "integer"
        },
        "password": {
          "type": "string",
          "minLength": 1,
          "maxLength": 20
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "interface",
        "mtu",
        "pppoeId",
        "password"
      ]
    },
    "Model192": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "static",
            "dynamic",
            "dhcp",
            "dhcpv6",
            "pppoe"
          ]
        },
        "cidr": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        }
      },
      "required": [
        "type",
        "cidr"
      ]
    },
    "addresses4": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model192"
      }
    },
    "Model193": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "interfaces11": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model193"
      }
    },
    "bridge": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "interfaces": {
          "$ref": "#/definitions/interfaces11"
        },
        "forwardingDelay": {
          "type": "integer"
        },
        "helloTime": {
          "type": "integer"
        },
        "maxAge": {
          "type": "integer"
        },
        "priority": {
          "type": "integer"
        },
        "stp": {
          "type": "boolean"
        },
        "aging": {
          "type": "integer"
        }
      },
      "required": [
        "id"
      ]
    },
    "Model194": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "bridgeId": {
          "type": "integer"
        },
        "addresses": {
          "$ref": "#/definitions/addresses4"
        },
        "proxyARP": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "mtu": {
          "type": "number",
          "minimum": 1
        },
        "bridge": {
          "$ref": "#/definitions/bridge"
        }
      },
      "required": [
        "bridgeId",
        "addresses",
        "mtu"
      ]
    },
    "Common success": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string"
        },
        "error": {
          "type": "number",
          "minimum": 0,
          "maximum": 0
        },
        "message": {
          "type": "string"
        },
        "statusCode": {
          "type": "number",
          "minimum": 200,
          "maximum": 200
        }
      },
      "required": [
        "message",
        "statusCode"
      ]
    },
    "poe": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "dc": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "id"
      ]
    },
    "SystemPowerCycle": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "dc",
            "poe"
          ]
        },
        "poe": {
          "$ref": "#/definitions/poe"
        },
        "dc": {
          "$ref": "#/definitions/dc"
        }
      },
      "required": [
        "type"
      ]
    },
    "IpLinkRedirect": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "x-constraint": {
            "length": 32
          },
          "x-format": {
            "hex": {
              "byteAligned": false
            }
          }
        },
        "httpsPort": {
          "type": "number",
          "minimum": 1
        }
      }
    },
    "RouterRouteUpsert": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "staticType": {
          "type": "string",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "distance": {
          "type": "number",
          "minimum": 1,
          "maximum": 255
        }
      },
      "required": [
        "destination",
        "gateway",
        "interface",
        "staticType",
        "distance"
      ]
    },
    "RouterRoutes": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        },
        "enabled": {
          "type": "boolean"
        },
        "fib": {
          "type": "boolean"
        },
        "gateway": {
          "type": "string"
        },
        "gatewayStatus": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "nextHop": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        },
        "staticType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "Model195": {
      "type": "object",
      "properties": {
        "psuId": {
          "type": "number"
        }
      }
    },
    "Model196": {
      "type": "object",
      "properties": {
        "interfaceName": {
          "type": "string"
        },
        "newInterfaceName": {
          "type": "string"
        }
      },
      "required": [
        "interfaceName",
        "newInterfaceName"
      ]
    },
    "Model197": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "static",
            "dynamic",
            "dhcp",
            "dhcpv6",
            "pppoe"
          ]
        },
        "cidr": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        }
      },
      "required": [
        "type",
        "cidr"
      ]
    },
    "addresses5": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model197"
      }
    },
    "Model198": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "mtu": {
          "type": "number",
          "minimum": 1
        },
        "vlanId": {
          "type": "integer"
        },
        "vlanEgressQoSMapExternal": {
          "type": "integer",
          "minimum": 0,
          "maximum": 7
        },
        "addresses": {
          "$ref": "#/definitions/addresses5"
        },
        "proxyARP": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "interface",
        "mtu",
        "vlanId",
        "addresses"
      ]
    },
    "Model199": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "static": {
          "type": "boolean"
        },
        "linkTrap": {
          "type": "boolean"
        },
        "stp": {
          "type": "boolean"
        },
        "dhcpSnooping": {
          "type": "boolean"
        },
        "loadBalance": {
          "type": "string",
          "enum": [
            "src_dst_mac",
            "src_mac_l2",
            "dst_mac_l2",
            "src_dst_mac_l2",
            "src_dst_mac_ip",
            "src_ip_port",
            "dst_ip_port",
            "src_dst_ip_port"
          ]
        },
        "ports": {
          "$ref": "#/definitions/ports"
        }
      },
      "required": [
        "id",
        "loadBalance",
        "ports"
      ]
    },
    "Model200": {
      "type": "object",
      "properties": {
        "ids": {
          "$ref": "#/definitions/ids"
        }
      },
      "required": [
        "ids"
      ]
    },
    "deleted": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "failed": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
        "x-format": {
          "guid": true
        }
      }
    },
    "BulkReportDeleteSchema": {
      "type": "object",
      "properties": {
        "deleted": {
          "$ref": "#/definitions/deleted"
        },
        "failed": {
          "$ref": "#/definitions/failed"
        }
      },
      "required": [
        "deleted",
        "failed"
      ]
    },
    "Model201": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "maxLength": 50
        },
        "modelName": {
          "type": "string",
          "maxLength": 50
        },
        "systemName": {
          "type": "string",
          "maxLength": 30
        },
        "vendorName": {
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "SiteBinding": {
      "type": "object",
      "properties": {
        "ucrmId": {
          "type": "string",
          "example": "123"
        }
      },
      "required": [
        "ucrmId"
      ]
    },
    "LocalInvitationRequest": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "New user password."
        },
        "invitationToken": {
          "type": "string",
          "description": "User invitation token."
        }
      },
      "required": [
        "password",
        "invitationToken"
      ]
    },
    "SsoInvitationRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "description": "Code from successful SSO authentication."
        },
        "state": {
          "type": "string",
          "description": "State previously sent to SSO. Same value must be in nms-sso-login cookie."
        },
        "invitationToken": {
          "type": "string",
          "description": "User invitation token."
        }
      },
      "required": [
        "code",
        "state"
      ]
    },
    "Model202": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "CreateDHCPServer": {
      "type": "object",
      "properties": {
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "lan",
          "minLength": 1,
          "maxLength": 63
        },
        "interface": {
          "type": "string",
          "description": "Interface IP v4 address in CIDR format.",
          "example": "192.168.2.0/24",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "interface",
        "leaseTime",
        "name",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPLease3": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "expiration": {
          "type": "number"
        },
        "hostname": {
          "type": "string"
        },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server.",
          "minLength": 1
        },
        "mac": {
          "type": "string"
        },
        "serverName": {
          "type": "string",
          "minLength": 1
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "address",
        "leaseId",
        "mac",
        "serverName"
      ]
    },
    "CreateDHCPServer1": {
      "type": "object",
      "properties": {
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "lan",
          "minLength": 1,
          "maxLength": 63
        },
        "interface": {
          "type": "string",
          "description": "Interface id.",
          "example": "eth0"
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "interface",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPServerList3": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPServer1"
      }
    },
    "RouterRouteUpsert1": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "staticType": {
          "type": "string",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        }
      },
      "required": [
        "destination",
        "gateway",
        "interface",
        "staticType",
        "distance"
      ]
    },
    "DHCPLease4": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "expiration": {
          "type": "number"
        },
        "hostname": {
          "type": "string"
        },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server."
        },
        "mac": {
          "type": "string"
        },
        "serverName": {
          "type": "string",
          "minLength": 1
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "address",
        "mac",
        "serverName"
      ]
    },
    "CreateDHCPServer2": {
      "type": "object",
      "properties": {
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "lan",
          "minLength": 1,
          "maxLength": 63
        },
        "interface": {
          "type": "string",
          "description": "Interface id.",
          "example": "eth0"
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "interface",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPServerList4": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPServer2"
      }
    },
    "RouterRouteUpsert2": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "staticType": {
          "type": "string",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        }
      },
      "required": [
        "destination",
        "gateway",
        "interface",
        "staticType",
        "distance"
      ]
    },
    "DHCPLease5": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "expiration": {
          "type": "number"
        },
        "hostname": {
          "type": "string"
        },
        "leaseId": {
          "type": "string",
          "description": "Unique per dhcp server."
        },
        "mac": {
          "type": "string"
        },
        "serverName": {
          "type": "string",
          "minLength": 1
        },
        "type": {
          "type": "string"
        }
      },
      "required": [
        "address",
        "mac",
        "serverName"
      ]
    },
    "pairA": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "lengthFrom": {
          "type": "number"
        },
        "lengthTo": {
          "type": "number"
        }
      },
      "required": [
        "state",
        "lengthFrom",
        "lengthTo"
      ]
    },
    "pairB": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "lengthFrom": {
          "type": "number"
        },
        "lengthTo": {
          "type": "number"
        }
      },
      "required": [
        "state",
        "lengthFrom",
        "lengthTo"
      ]
    },
    "pairC": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "lengthFrom": {
          "type": "number"
        },
        "lengthTo": {
          "type": "number"
        }
      },
      "required": [
        "state",
        "lengthFrom",
        "lengthTo"
      ]
    },
    "pairD": {
      "type": "object",
      "properties": {
        "state": {
          "type": "string"
        },
        "lengthFrom": {
          "type": "number"
        },
        "lengthTo": {
          "type": "number"
        }
      },
      "required": [
        "state",
        "lengthFrom",
        "lengthTo"
      ]
    },
    "pairs": {
      "type": "object",
      "properties": {
        "pairA": {
          "$ref": "#/definitions/pairA"
        },
        "pairB": {
          "$ref": "#/definitions/pairB"
        },
        "pairC": {
          "$ref": "#/definitions/pairC"
        },
        "pairD": {
          "$ref": "#/definitions/pairD"
        }
      }
    },
    "Data coming from cable test on ES devices": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "lengthFrom": {
          "type": "number"
        },
        "lengthTo": {
          "type": "number"
        },
        "pairs": {
          "$ref": "#/definitions/pairs"
        }
      },
      "required": [
        "status",
        "lengthFrom",
        "lengthTo"
      ]
    },
    "Model203": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "staticType": {
          "type": "string",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "distance": {
          "type": "number",
          "minimum": 1,
          "maximum": 255
        }
      },
      "required": [
        "destination",
        "gateway",
        "interface",
        "staticType",
        "distance"
      ]
    },
    "networks": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "string",
        "x-format": {
          "ip": {
            "cidr": "required"
          }
        }
      }
    },
    "OspfArea": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "id": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "networks": {
          "$ref": "#/definitions/networks"
        },
        "type": {
          "type": "string",
          "enum": [
            "normal",
            "nssa",
            "stub"
          ]
        }
      },
      "required": [
        "id",
        "networks",
        "type"
      ]
    },
    "Model204": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "id": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "networks": {
          "$ref": "#/definitions/networks"
        },
        "type": {
          "type": "string",
          "enum": [
            "normal",
            "nssa",
            "stub"
          ]
        }
      }
    },
    "Model205": {
      "type": "object",
      "properties": {
        "receiver": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      },
      "required": [
        "receiver"
      ]
    },
    "ImageOrder": {
      "type": "object",
      "properties": {
        "currentOrder": {
          "type": "number"
        },
        "nextOrder": {
          "type": "number"
        }
      },
      "required": [
        "currentOrder",
        "nextOrder"
      ]
    },
    "RouterRoute1": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "staticType": {
          "type": "string",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "distance": {
          "type": "number",
          "minimum": 1,
          "maximum": 255
        }
      },
      "required": [
        "destination",
        "gateway",
        "interface",
        "staticType"
      ]
    },
    "Model206": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "id": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "networks": {
          "$ref": "#/definitions/networks"
        },
        "type": {
          "type": "string",
          "enum": [
            "normal",
            "nssa",
            "stub"
          ]
        }
      }
    },
    "Model207": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source1"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface"
        },
        "chain": {
          "type": "string"
        },
        "translation": {
          "$ref": "#/definitions/translation"
        }
      },
      "required": [
        "ipVersion",
        "target",
        "chain"
      ]
    },
    "Model208": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "key"
      ]
    },
    "authKeysMD51": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model208"
      }
    },
    "Model209": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cost": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "authKey": {
          "type": "string"
        },
        "authKeysMD5": {
          "$ref": "#/definitions/authKeysMD51"
        }
      },
      "required": [
        "cost",
        "auth",
        "authKey"
      ]
    },
    "RouterRoute2": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "staticType": {
          "type": "string",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        }
      },
      "required": [
        "destination",
        "gateway",
        "interface",
        "staticType"
      ]
    },
    "Model210": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "id": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "networks": {
          "$ref": "#/definitions/networks"
        },
        "type": {
          "type": "string",
          "enum": [
            "normal",
            "nssa",
            "stub"
          ]
        }
      }
    },
    "Model211": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification7"
        },
        "description": {
          "type": "string"
        },
        "entries": {
          "$ref": "#/definitions/entries"
        }
      },
      "required": [
        "entries"
      ]
    },
    "Model212": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source2"
        },
        "destination": {
          "$ref": "#/definitions/destination1"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface3"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface3"
        },
        "chain": {
          "type": "string"
        },
        "translation": {
          "$ref": "#/definitions/translation"
        }
      },
      "required": [
        "ipVersion",
        "target",
        "chain"
      ]
    },
    "Model213": {
      "type": "object",
      "properties": {
        "composeId": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Model146"
        }
      }
    },
    "Model214": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "key"
      ]
    },
    "authKeysMD52": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model214"
      }
    },
    "Model215": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cost": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "authKey": {
          "type": "string"
        },
        "authKeysMD5": {
          "$ref": "#/definitions/authKeysMD52"
        }
      },
      "required": [
        "cost",
        "auth",
        "authKey"
      ]
    },
    "RouterRoute3": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "staticType": {
          "type": "string",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        }
      },
      "required": [
        "destination",
        "gateway",
        "interface",
        "staticType"
      ]
    },
    "Model216": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "id": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "networks": {
          "$ref": "#/definitions/networks"
        },
        "type": {
          "type": "string",
          "enum": [
            "normal",
            "nssa",
            "stub"
          ]
        }
      }
    },
    "Model217": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/definitions/identification8"
        },
        "description": {
          "type": "string"
        },
        "entries": {
          "$ref": "#/definitions/entries"
        }
      },
      "required": [
        "entries"
      ]
    },
    "data2": {
      "type": "object",
      "properties": {
        "statusCode": {
          "type": "number"
        }
      }
    },
    "Model218": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "#/definitions/data2"
        },
        "composeId": {
          "type": "string"
        }
      }
    },
    "Model219": {
      "type": "object",
      "properties": {
        "unmsKey": {
          "type": "string"
        }
      },
      "required": [
        "unmsKey"
      ]
    },
    "PayloadUnmsHostnameReachable": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "port": {
          "type": "integer",
          "example": "443",
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "Model220": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source1"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface1"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface1"
        },
        "applicationId": {
          "type": "integer",
          "minimum": 1
        },
        "categoryId": {
          "type": "integer",
          "minimum": 0
        },
        "connectionState": {
          "$ref": "#/definitions/connectionState"
        },
        "ipsecPolicy": {
          "type": "string",
          "enum": [
            "match_inbound_ipsec",
            "match_inbound_nonipsec"
          ]
        },
        "icmpType": {
          "type": "string"
        },
        "icmpv6Type": {
          "type": "string"
        },
        "rejectWith": {
          "type": "string",
          "enum": [
            "icmp_net_unreachable",
            "icmp_host_unreachable",
            "icmp_port_unreachable",
            "icmp_proto_unreachable",
            "icmp_net_prohibited",
            "icmp_host_prohibited",
            "icmp_admin_prohibited",
            "tcp_reset,"
          ]
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "connectionState"
      ]
    },
    "Model221": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source1"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface1"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface1"
        },
        "applicationId": {
          "type": "integer",
          "minimum": 1
        },
        "categoryId": {
          "type": "integer",
          "minimum": 0
        },
        "connectionState": {
          "$ref": "#/definitions/connectionState"
        },
        "ipsecPolicy": {
          "type": "string",
          "enum": [
            "match_inbound_ipsec",
            "match_inbound_nonipsec"
          ]
        },
        "icmpType": {
          "type": "string"
        },
        "icmpv6Type": {
          "type": "string"
        },
        "rejectWith": {
          "type": "string",
          "enum": [
            "icmp_net_unreachable",
            "icmp_host_unreachable",
            "icmp_port_unreachable",
            "icmp_proto_unreachable",
            "icmp_net_prohibited",
            "icmp_host_prohibited",
            "icmp_admin_prohibited",
            "tcp_reset,"
          ]
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "connectionState",
        "bytes",
        "packets"
      ]
    },
    "Model222": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model221"
      }
    },
    "Model223": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source1"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface1"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface1"
        },
        "tproxyMark": {
          "type": "string"
        },
        "tproxyOnPort": {
          "type": "string"
        },
        "tproxyOnIp": {
          "type": "string"
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "tproxyMark",
        "tproxyOnPort",
        "tproxyOnIp"
      ]
    },
    "Model224": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source1"
        },
        "destination": {
          "$ref": "#/definitions/destination"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface1"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface1"
        },
        "tproxyMark": {
          "type": "string"
        },
        "tproxyOnPort": {
          "type": "string"
        },
        "tproxyOnIp": {
          "type": "string"
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "tproxyMark",
        "tproxyOnPort",
        "tproxyOnIp",
        "bytes",
        "packets"
      ]
    },
    "Model225": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source2"
        },
        "destination": {
          "$ref": "#/definitions/destination1"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface2"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface2"
        },
        "applicationId": {
          "type": "integer",
          "minimum": 1
        },
        "categoryId": {
          "type": "integer",
          "minimum": 0
        },
        "connectionState": {
          "$ref": "#/definitions/connectionState"
        },
        "ipsecPolicy": {
          "type": "string",
          "enum": [
            "match_inbound_ipsec",
            "match_inbound_nonipsec"
          ]
        },
        "icmpType": {
          "type": "string"
        },
        "icmpv6Type": {
          "type": "string"
        },
        "rejectWith": {
          "type": "string",
          "enum": [
            "icmp_net_unreachable",
            "icmp_host_unreachable",
            "icmp_port_unreachable",
            "icmp_proto_unreachable",
            "icmp_net_prohibited",
            "icmp_host_prohibited",
            "icmp_admin_prohibited",
            "tcp_reset,"
          ]
        },
        "rateLimit": {
          "type": "string",
          "description": "The rate limit in the format \u003Cnumber\u003E/\u003CtimeUnit\u003E - how many packets match per time unit. Time unit can be \"s\" for seconds, \"m\" for minutes, \"h\" for hours, or \"d\" for days. If omitted no rate limiting will be applied.",
          "example": "12/h"
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "connectionState"
      ]
    },
    "Model226": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source2"
        },
        "destination": {
          "$ref": "#/definitions/destination1"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface2"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface2"
        },
        "applicationId": {
          "type": "integer",
          "minimum": 1
        },
        "categoryId": {
          "type": "integer",
          "minimum": 0
        },
        "connectionState": {
          "$ref": "#/definitions/connectionState"
        },
        "ipsecPolicy": {
          "type": "string",
          "enum": [
            "match_inbound_ipsec",
            "match_inbound_nonipsec"
          ]
        },
        "icmpType": {
          "type": "string"
        },
        "icmpv6Type": {
          "type": "string"
        },
        "rejectWith": {
          "type": "string",
          "enum": [
            "icmp_net_unreachable",
            "icmp_host_unreachable",
            "icmp_port_unreachable",
            "icmp_proto_unreachable",
            "icmp_net_prohibited",
            "icmp_host_prohibited",
            "icmp_admin_prohibited",
            "tcp_reset,"
          ]
        },
        "rateLimit": {
          "type": "string",
          "description": "The rate limit in the format \u003Cnumber\u003E/\u003CtimeUnit\u003E - how many packets match per time unit. Time unit can be \"s\" for seconds, \"m\" for minutes, \"h\" for hours, or \"d\" for days. If omitted no rate limiting will be applied.",
          "example": "12/h"
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "connectionState",
        "bytes",
        "packets"
      ]
    },
    "rules4": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model226"
      }
    },
    "Model227": {
      "type": "object",
      "properties": {
        "rules": {
          "$ref": "#/definitions/rules4"
        },
        "composeId": {
          "type": "string"
        }
      },
      "required": [
        "rules"
      ]
    },
    "Model228": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source2"
        },
        "destination": {
          "$ref": "#/definitions/destination1"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface2"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface2"
        },
        "tproxyMark": {
          "type": "string"
        },
        "tproxyOnPort": {
          "type": "string"
        },
        "tproxyOnIp": {
          "type": "string"
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "tproxyMark",
        "tproxyOnPort",
        "tproxyOnIp"
      ]
    },
    "Model229": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "description": {
          "type": "string"
        },
        "log": {
          "type": "boolean"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        },
        "source": {
          "$ref": "#/definitions/source2"
        },
        "destination": {
          "$ref": "#/definitions/destination1"
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "both",
            "v4only",
            "v6only"
          ]
        },
        "negateInInterface": {
          "type": "boolean"
        },
        "negateOutInterface": {
          "type": "boolean"
        },
        "protocol": {
          "type": "string"
        },
        "target": {
          "type": "string"
        },
        "inInterface": {
          "$ref": "#/definitions/inInterface2"
        },
        "outInterface": {
          "$ref": "#/definitions/outInterface2"
        },
        "tproxyMark": {
          "type": "string"
        },
        "tproxyOnPort": {
          "type": "string"
        },
        "tproxyOnIp": {
          "type": "string"
        },
        "bytes": {
          "type": "integer",
          "minimum": 0
        },
        "packets": {
          "type": "integer",
          "minimum": 0
        }
      },
      "required": [
        "ipVersion",
        "protocol",
        "target",
        "tproxyMark",
        "tproxyOnPort",
        "tproxyOnIp",
        "bytes",
        "packets"
      ]
    },
    "EditUser": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "pattern": "[@{}()\u003C\u003E/+*'\";=%]+"
        },
        "email": {
          "type": "string",
          "x-format": {
            "email": true
          }
        },
        "currentPassword": {
          "type": "string",
          "minLength": 4,
          "maxLength": 64
        },
        "newPassword": {
          "type": "string",
          "minLength": 4,
          "maxLength": 64
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "presentationMode": {
          "type": "boolean"
        },
        "forceChangePassword": {
          "type": "boolean"
        },
        "tableConfig": {
          "$ref": "#/definitions/tableConfig"
        },
        "preferences": {
          "$ref": "#/definitions/preferences"
        },
        "lastLogItemId": {
          "type": "string"
        },
        "sessionTimeout": {
          "type": "integer",
          "minimum": 1
        },
        "keepMeSignedIn": {
          "type": "boolean",
          "description": "Whether session should be cleared when browser window is closed.",
          "example": true
        },
        "alerts": {
          "type": "boolean"
        },
        "notification": {
          "$ref": "#/definitions/User push notifications settings object."
        },
        "role": {
          "type": "string",
          "description": "Ignored, user cannot change his own role."
        },
        "ucrmRole": {
          "type": "string"
        },
        "homeScreen": {
          "type": "string",
          "enum": [
            "/nms",
            "/crm"
          ]
        },
        "ucrmId": {
          "type": "string",
          "example": "123"
        }
      },
      "required": [
        "forceChangePassword",
        "alerts",
        "notification"
      ]
    },
    "NmsUpdateSettings": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "example": "Europe/Prague",
          "enum": [
            "Africa/Abidjan",
            "Africa/Accra",
            "Africa/Addis_Ababa",
            "Africa/Algiers",
            "Africa/Asmara",
            "Africa/Asmera",
            "Africa/Bamako",
            "Africa/Bangui",
            "Africa/Banjul",
            "Africa/Bissau",
            "Africa/Blantyre",
            "Africa/Brazzaville",
            "Africa/Bujumbura",
            "Africa/Cairo",
            "Africa/Casablanca",
            "Africa/Ceuta",
            "Africa/Conakry",
            "Africa/Dakar",
            "Africa/Dar_es_Salaam",
            "Africa/Djibouti",
            "Africa/Douala",
            "Africa/El_Aaiun",
            "Africa/Freetown",
            "Africa/Gaborone",
            "Africa/Harare",
            "Africa/Johannesburg",
            "Africa/Juba",
            "Africa/Kampala",
            "Africa/Kigali",
            "Africa/Kinshasa",
            "Africa/Lagos",
            "Africa/Libreville",
            "Africa/Lome",
            "Africa/Luanda",
            "Africa/Lubumbashi",
            "Africa/Lusaka",
            "Africa/Malabo",
            "Africa/Maputo",
            "Africa/Maseru",
            "Africa/Mbabane",
            "Africa/Mogadishu",
            "Africa/Monrovia",
            "Africa/Nairobi",
            "Africa/Ndjamena",
            "Africa/Niamey",
            "Africa/Nouakchott",
            "Africa/Ouagadougou",
            "Africa/Porto-Novo",
            "Africa/Sao_Tome",
            "Africa/Timbuktu",
            "Africa/Tripoli",
            "Africa/Tunis",
            "Africa/Windhoek",
            "America/Adak",
            "America/Anchorage",
            "America/Anguilla",
            "America/Antigua",
            "America/Araguaina",
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Catamarca",
            "America/Argentina/ComodRivadavia",
            "America/Argentina/Cordoba",
            "America/Argentina/Jujuy",
            "America/Argentina/La_Rioja",
            "America/Argentina/Mendoza",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Salta",
            "America/Argentina/San_Juan",
            "America/Argentina/San_Luis",
            "America/Argentina/Tucuman",
            "America/Argentina/Ushuaia",
            "America/Aruba",
            "America/Asuncion",
            "America/Atikokan",
            "America/Atka",
            "America/Bahia",
            "America/Bahia_Banderas",
            "America/Barbados",
            "America/Belem",
            "America/Belize",
            "America/Blanc-Sablon",
            "America/Boa_Vista",
            "America/Bogota",
            "America/Boise",
            "America/Buenos_Aires",
            "America/Cambridge_Bay",
            "America/Campo_Grande",
            "America/Cancun",
            "America/Caracas",
            "America/Catamarca",
            "America/Cayenne",
            "America/Cayman",
            "America/Chicago",
            "America/Chihuahua",
            "America/Ciudad_Juarez",
            "America/Coral_Harbour",
            "America/Cordoba",
            "America/Costa_Rica",
            "America/Creston",
            "America/Cuiaba",
            "America/Curacao",
            "America/Danmarkshavn",
            "America/Dawson",
            "America/Dawson_Creek",
            "America/Denver",
            "America/Detroit",
            "America/Dominica",
            "America/Edmonton",
            "America/Eirunepe",
            "America/El_Salvador",
            "America/Ensenada",
            "America/Fort_Nelson",
            "America/Fort_Wayne",
            "America/Fortaleza",
            "America/Glace_Bay",
            "America/Godthab",
            "America/Goose_Bay",
            "America/Grand_Turk",
            "America/Grenada",
            "America/Guadeloupe",
            "America/Guatemala",
            "America/Guayaquil",
            "America/Guyana",
            "America/Halifax",
            "America/Hermosillo",
            "America/Indiana/Indianapolis",
            "America/Indiana/Knox",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Tell_City",
            "America/Indiana/Vevay",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indianapolis",
            "America/Inuvik",
            "America/Iqaluit",
            "America/Jamaica",
            "America/Jujuy",
            "America/Juneau",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Knox_IN",
            "America/Kralendijk",
            "America/La_Paz",
            "America/Lima",
            "America/Los_Angeles",
            "America/Louisville",
            "America/Lower_Princes",
            "America/Maceio",
            "America/Managua",
            "America/Manaus",
            "America/Marigot",
            "America/Martinique",
            "America/Matamoros",
            "America/Mazatlan",
            "America/Mendoza",
            "America/Menominee",
            "America/Merida",
            "America/Metlakatla",
            "America/Mexico_City",
            "America/Miquelon",
            "America/Moncton",
            "America/Monterrey",
            "America/Montevideo",
            "America/Montreal",
            "America/Montserrat",
            "America/Nassau",
            "America/New_York",
            "America/Nipigon",
            "America/Nome",
            "America/Noronha",
            "America/North_Dakota/Beulah",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/Nuuk",
            "America/Ojinaga",
            "America/Panama",
            "America/Pangnirtung",
            "America/Paramaribo",
            "America/Phoenix",
            "America/Port-au-Prince",
            "America/Port_of_Spain",
            "America/Porto_Acre",
            "America/Porto_Velho",
            "America/Puerto_Rico",
            "America/Punta_Arenas",
            "America/Rainy_River",
            "America/Rankin_Inlet",
            "America/Recife",
            "America/Regina",
            "America/Resolute",
            "America/Rio_Branco",
            "America/Rosario",
            "America/Santa_Isabel",
            "America/Santarem",
            "America/Santiago",
            "America/Santo_Domingo",
            "America/Sao_Paulo",
            "America/Scoresbysund",
            "America/Shiprock",
            "America/Sitka",
            "America/St_Barthelemy",
            "America/St_Johns",
            "America/St_Kitts",
            "America/St_Lucia",
            "America/St_Thomas",
            "America/St_Vincent",
            "America/Swift_Current",
            "America/Tegucigalpa",
            "America/Thule",
            "America/Thunder_Bay",
            "America/Tijuana",
            "America/Toronto",
            "America/Tortola",
            "America/Vancouver",
            "America/Virgin",
            "America/Whitehorse",
            "America/Winnipeg",
            "America/Yakutat",
            "America/Yellowknife",
            "Antarctica/Casey",
            "Antarctica/Davis",
            "Antarctica/DumontDUrville",
            "Antarctica/Macquarie",
            "Antarctica/Mawson",
            "Antarctica/McMurdo",
            "Antarctica/Palmer",
            "Antarctica/Rothera",
            "Antarctica/South_Pole",
            "Antarctica/Syowa",
            "Antarctica/Troll",
            "Antarctica/Vostok",
            "Arctic/Longyearbyen",
            "Asia/Aden",
            "Asia/Almaty",
            "Asia/Amman",
            "Asia/Anadyr",
            "Asia/Aqtau",
            "Asia/Aqtobe",
            "Asia/Ashgabat",
            "Asia/Ashkhabad",
            "Asia/Atyrau",
            "Asia/Baghdad",
            "Asia/Bahrain",
            "Asia/Baku",
            "Asia/Bangkok",
            "Asia/Barnaul",
            "Asia/Beirut",
            "Asia/Bishkek",
            "Asia/Brunei",
            "Asia/Calcutta",
            "Asia/Chita",
            "Asia/Choibalsan",
            "Asia/Chongqing",
            "Asia/Chungking",
            "Asia/Colombo",
            "Asia/Dacca",
            "Asia/Dhaka",
            "Asia/Dili",
            "Asia/Dubai",
            "Asia/Dushanbe",
            "Asia/Famagusta",
            "Asia/Gaza",
            "Asia/Harbin",
            "Asia/Hebron",
            "Asia/Ho_Chi_Minh",
            "Asia/Hong_Kong",
            "Asia/Hovd",
            "Asia/Irkutsk",
            "Asia/Istanbul",
            "Asia/Jakarta",
            "Asia/Jayapura",
            "Asia/Jerusalem",
            "Asia/Kabul",
            "Asia/Kamchatka",
            "Asia/Karachi",
            "Asia/Kashgar",
            "Asia/Kathmandu",
            "Asia/Katmandu",
            "Asia/Khandyga",
            "Asia/Kolkata",
            "Asia/Krasnoyarsk",
            "Asia/Kuala_Lumpur",
            "Asia/Kuching",
            "Asia/Kuwait",
            "Asia/Macao",
            "Asia/Macau",
            "Asia/Magadan",
            "Asia/Makassar",
            "Asia/Manila",
            "Asia/Muscat",
            "Asia/Nicosia",
            "Asia/Novokuznetsk",
            "Asia/Novosibirsk",
            "Asia/Omsk",
            "Asia/Oral",
            "Asia/Phnom_Penh",
            "Asia/Pontianak",
            "Asia/Qatar",
            "Asia/Qostanay",
            "Asia/Qyzylorda",
            "Asia/Rangoon",
            "Asia/Riyadh",
            "Asia/Saigon",
            "Asia/Sakhalin",
            "Asia/Samarkand",
            "Asia/Seoul",
            "Asia/Shanghai",
            "Asia/Singapore",
            "Asia/Srednekolymsk",
            "Asia/Taipei",
            "Asia/Tashkent",
            "Asia/Tbilisi",
            "Asia/Tel_Aviv",
            "Asia/Thimbu",
            "Asia/Thimphu",
            "Asia/Tokyo",
            "Asia/Tomsk",
            "Asia/Ujung_Pandang",
            "Asia/Ulaanbaatar",
            "Asia/Ulan_Bator",
            "Asia/Urumqi",
            "Asia/Ust-Nera",
            "Asia/Vientiane",
            "Asia/Vladivostok",
            "Asia/Yakutsk",
            "Asia/Yangon",
            "Asia/Yekaterinburg",
            "Asia/Yerevan",
            "Atlantic/Azores",
            "Atlantic/Bermuda",
            "Atlantic/Canary",
            "Atlantic/Cape_Verde",
            "Atlantic/Faeroe",
            "Atlantic/Faroe",
            "Atlantic/Jan_Mayen",
            "Atlantic/Madeira",
            "Atlantic/Reykjavik",
            "Atlantic/South_Georgia",
            "Atlantic/St_Helena",
            "Atlantic/Stanley",
            "Australia/ACT",
            "Australia/Adelaide",
            "Australia/Brisbane",
            "Australia/Broken_Hill",
            "Australia/Canberra",
            "Australia/Currie",
            "Australia/Darwin",
            "Australia/Eucla",
            "Australia/Hobart",
            "Australia/LHI",
            "Australia/Lindeman",
            "Australia/Lord_Howe",
            "Australia/Melbourne",
            "Australia/NSW",
            "Australia/North",
            "Australia/Perth",
            "Australia/Queensland",
            "Australia/South",
            "Australia/Sydney",
            "Australia/Tasmania",
            "Australia/Victoria",
            "Australia/West",
            "Australia/Yancowinna",
            "Brazil/Acre",
            "Brazil/DeNoronha",
            "Brazil/East",
            "Brazil/West",
            "CET",
            "CST6CDT",
            "Canada/Atlantic",
            "Canada/Central",
            "Canada/Eastern",
            "Canada/Mountain",
            "Canada/Newfoundland",
            "Canada/Pacific",
            "Canada/Saskatchewan",
            "Canada/Yukon",
            "Chile/Continental",
            "Chile/EasterIsland",
            "EET",
            "EST",
            "EST5EDT",
            "Egypt",
            "Eire",
            "Etc/GMT",
            "Etc/GMT+0",
            "Etc/GMT+1",
            "Etc/GMT+10",
            "Etc/GMT+11",
            "Etc/GMT+12",
            "Etc/GMT+2",
            "Etc/GMT+3",
            "Etc/GMT+4",
            "Etc/GMT+5",
            "Etc/GMT+6",
            "Etc/GMT+7",
            "Etc/GMT+8",
            "Etc/GMT+9",
            "Etc/GMT-0",
            "Etc/GMT-1",
            "Etc/GMT-10",
            "Etc/GMT-11",
            "Etc/GMT-12",
            "Etc/GMT-13",
            "Etc/GMT-14",
            "Etc/GMT-2",
            "Etc/GMT-3",
            "Etc/GMT-4",
            "Etc/GMT-5",
            "Etc/GMT-6",
            "Etc/GMT-7",
            "Etc/GMT-8",
            "Etc/GMT-9",
            "Etc/GMT0",
            "Etc/Greenwich",
            "Etc/UCT",
            "Etc/UTC",
            "Etc/Universal",
            "Etc/Zulu",
            "Europe/Amsterdam",
            "Europe/Andorra",
            "Europe/Astrakhan",
            "Europe/Athens",
            "Europe/Belfast",
            "Europe/Belgrade",
            "Europe/Berlin",
            "Europe/Bratislava",
            "Europe/Brussels",
            "Europe/Bucharest",
            "Europe/Budapest",
            "Europe/Busingen",
            "Europe/Chisinau",
            "Europe/Copenhagen",
            "Europe/Dublin",
            "Europe/Gibraltar",
            "Europe/Guernsey",
            "Europe/Helsinki",
            "Europe/Isle_of_Man",
            "Europe/Istanbul",
            "Europe/Jersey",
            "Europe/Kaliningrad",
            "Europe/Kiev",
            "Europe/Kirov",
            "Europe/Kyiv",
            "Europe/Lisbon",
            "Europe/Ljubljana",
            "Europe/London",
            "Europe/Luxembourg",
            "Europe/Madrid",
            "Europe/Malta",
            "Europe/Mariehamn",
            "Europe/Minsk",
            "Europe/Monaco",
            "Europe/Moscow",
            "Europe/Nicosia",
            "Europe/Oslo",
            "Europe/Paris",
            "Europe/Podgorica",
            "Europe/Prague",
            "Europe/Riga",
            "Europe/Rome",
            "Europe/Samara",
            "Europe/San_Marino",
            "Europe/Sarajevo",
            "Europe/Saratov",
            "Europe/Simferopol",
            "Europe/Skopje",
            "Europe/Sofia",
            "Europe/Stockholm",
            "Europe/Tallinn",
            "Europe/Tirane",
            "Europe/Tiraspol",
            "Europe/Ulyanovsk",
            "Europe/Uzhgorod",
            "Europe/Vaduz",
            "Europe/Vatican",
            "Europe/Vienna",
            "Europe/Vilnius",
            "Europe/Volgograd",
            "Europe/Warsaw",
            "Europe/Zagreb",
            "Europe/Zaporozhye",
            "Europe/Zurich",
            "GB",
            "GB-Eire",
            "GMT",
            "GMT+0",
            "GMT-0",
            "GMT0",
            "Greenwich",
            "HST",
            "Hongkong",
            "Iceland",
            "Indian/Antananarivo",
            "Indian/Chagos",
            "Indian/Christmas",
            "Indian/Cocos",
            "Indian/Comoro",
            "Indian/Kerguelen",
            "Indian/Mahe",
            "Indian/Maldives",
            "Indian/Mauritius",
            "Indian/Mayotte",
            "Indian/Reunion",
            "Israel",
            "Jamaica",
            "Japan",
            "Kwajalein",
            "Libya",
            "MET",
            "MST",
            "MST7MDT",
            "Mexico/BajaNorte",
            "Mexico/BajaSur",
            "Mexico/General",
            "NZ",
            "NZ-CHAT",
            "Navajo",
            "PRC",
            "PST8PDT",
            "Pacific/Apia",
            "Pacific/Auckland",
            "Pacific/Bougainville",
            "Pacific/Chatham",
            "Pacific/Chuuk",
            "Pacific/Easter",
            "Pacific/Efate",
            "Pacific/Enderbury",
            "Pacific/Fakaofo",
            "Pacific/Fiji",
            "Pacific/Funafuti",
            "Pacific/Galapagos",
            "Pacific/Gambier",
            "Pacific/Guadalcanal",
            "Pacific/Guam",
            "Pacific/Honolulu",
            "Pacific/Johnston",
            "Pacific/Kanton",
            "Pacific/Kiritimati",
            "Pacific/Kosrae",
            "Pacific/Kwajalein",
            "Pacific/Majuro",
            "Pacific/Marquesas",
            "Pacific/Midway",
            "Pacific/Nauru",
            "Pacific/Niue",
            "Pacific/Norfolk",
            "Pacific/Noumea",
            "Pacific/Pago_Pago",
            "Pacific/Palau",
            "Pacific/Pitcairn",
            "Pacific/Pohnpei",
            "Pacific/Ponape",
            "Pacific/Port_Moresby",
            "Pacific/Rarotonga",
            "Pacific/Saipan",
            "Pacific/Samoa",
            "Pacific/Tahiti",
            "Pacific/Tarawa",
            "Pacific/Tongatapu",
            "Pacific/Truk",
            "Pacific/Wake",
            "Pacific/Wallis",
            "Pacific/Yap",
            "Poland",
            "Portugal",
            "ROC",
            "ROK",
            "Singapore",
            "Turkey",
            "UCT",
            "US/Alaska",
            "US/Aleutian",
            "US/Arizona",
            "US/Central",
            "US/East-Indiana",
            "US/Eastern",
            "US/Hawaii",
            "US/Indiana-Starke",
            "US/Michigan",
            "US/Mountain",
            "US/Pacific",
            "US/Samoa",
            "UTC",
            "Universal",
            "W-SU",
            "WET",
            "Zulu"
          ]
        },
        "homePage": {
          "type": "string",
          "example": "unms",
          "enum": [
            "unms",
            "ucrm"
          ]
        },
        "hostname": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "autoBackups": {
          "type": "boolean",
          "example": true
        },
        "deviceAutoBackups": {
          "type": "boolean",
          "example": true
        },
        "discoveryAutoConfiguration": {
          "type": "boolean",
          "example": true
        },
        "discoveryAllowUnsecuredChannels": {
          "type": "boolean",
          "example": false
        },
        "discoveryAllowLocalScan": {
          "type": "boolean",
          "example": false
        },
        "discoveryAllowRemoteScan": {
          "type": "boolean",
          "example": false
        },
        "discoverySnmpCommunity": {
          "type": "string",
          "example": "public"
        },
        "discoveryHideBlackBox": {
          "type": "boolean",
          "example": false
        },
        "discoveryNotification": {
          "type": "boolean",
          "example": true
        },
        "discoveryBlacklist": {
          "$ref": "#/definitions/discoveryBlacklist"
        },
        "mapsProvider": {
          "type": "string",
          "example": "OpenStreetMap",
          "enum": [
            "GoogleMaps",
            "OpenStreetMap"
          ]
        },
        "googleMapsApiKey": {
          "type": "string"
        },
        "devicePingAddressMode": {
          "type": "string",
          "enum": [
            "auto",
            "custom"
          ]
        },
        "devicePingAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional"
                }
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 30000,
          "minimum": 10000,
          "maximum": 300000
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds.",
          "example": 5000,
          "minimum": 2000,
          "maximum": 300000
        },
        "useLetsEncrypt": {
          "type": "boolean",
          "example": true
        },
        "allowLoggingToSentry": {
          "type": "boolean",
          "example": true
        },
        "allowLoggingToLogentries": {
          "type": "boolean",
          "example": true
        },
        "deviceTransmissionProfile": {
          "type": "string",
          "example": "auto",
          "enum": [
            "auto",
            "custom"
          ]
        },
        "deviceTransmissionFrequencies": {
          "$ref": "#/definitions/deviceTransmissionFrequencies"
        },
        "defaultGracePeriod": {
          "type": "integer",
          "example": 30000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "restartGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "upgradeGracePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "outageMailablePeriod": {
          "type": "integer",
          "example": 300000,
          "minimum": 0,
          "maximum": 86400000
        },
        "dateFormat": {
          "type": "string",
          "example": "D MMM YYYY",
          "enum": [
            "D MMM YYYY",
            "Do MMM YYYY",
            "DD MMM YYYY",
            "MMM D, YYYY",
            "MMM Do, YYYY",
            "MMM DD, YYYY",
            "YYYY-MM-DD",
            "DD-MM-YYYY",
            "D.M.YYYY",
            "DD.MM.YYYY",
            "D/M/YYYY",
            "DD/MM/YYYY",
            "M/D/YYYY",
            "MM/DD/YYYY"
          ]
        },
        "timeFormat": {
          "type": "string",
          "example": "h:mm a",
          "enum": [
            "H:mm",
            "h:mm a"
          ]
        },
        "allowAutoUpdateUbntFirmwares": {
          "type": "boolean",
          "example": true
        },
        "allowBetaFirmwares": {
          "type": "boolean",
          "example": false
        },
        "deviceUpdateNotification": {
          "type": "boolean",
          "example": false
        },
        "ucrmEnabled": {
          "type": "boolean",
          "example": false
        },
        "isIsp": {
          "type": "boolean",
          "example": true
        },
        "country": {
          "type": "string",
          "example": "CZ",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "deviceNumberOfBackups": {
          "type": "integer",
          "example": 30,
          "minimum": 1,
          "maximum": 100
        },
        "tableDensity": {
          "type": "string"
        },
        "trafficShapingAdjustment": {
          "type": "integer",
          "example": 5,
          "minimum": 1,
          "maximum": 100
        },
        "defaultQosPropagation": {
          "type": "string",
          "enum": [
            "all",
            "gateway"
          ]
        },
        "migrationModeEnabled": {
          "type": "boolean",
          "description": "When true all new device connections and connected devices will change UISP Key.",
          "example": false
        },
        "migrationForceModeEnabled": {
          "type": "boolean",
          "description": "When true reachability check will be skipped.",
          "example": false
        },
        "migrationWithBackupEnabled": {
          "type": "boolean",
          "description": "When false UISP Key must be present.",
          "example": false
        },
        "migrationUispKey": {
          "type": "string",
          "description": "UISP Key.",
          "example": "example.com"
        },
        "migrationHostname": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "hostname": true
              }
            },
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^([0-9a-zA-Z]){1}([0-9a-zA-Z-])+$"
            }
          ]
        },
        "migrationPort": {
          "type": "integer",
          "description": "UISP port to migrate to.",
          "minimum": 1,
          "maximum": 65535
        },
        "maintenanceWindowFromTime": {
          "type": "integer",
          "description": "Hour when maintenance window start.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowToTime": {
          "type": "integer",
          "description": "Hour when maintenance window end.",
          "minimum": 0,
          "maximum": 24
        },
        "maintenanceWindowFriday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowMonday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSaturday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowSunday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowThursday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowTuesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "maintenanceWindowWednesday": {
          "type": "boolean",
          "description": "Allow automatically upgrade firmware in this day.",
          "example": true
        },
        "parallelUpgradeLimit": {
          "type": "integer",
          "description": "Maximum number of devices that can be upgraded in parallel",
          "minimum": 1,
          "maximum": 100
        },
        "wifiManIsEnabled": {
          "type": "boolean"
        },
        "wifiManUrlAddressForSpeedTest": {
          "type": "string",
          "example": "https://my-uisp.com",
          "x-format": {
            "uri": {
              "scheme": [
                "https",
                "http"
              ]
            }
          }
        },
        "allowNewDashboard": {
          "type": "boolean",
          "example": false
        },
        "allowNewDevices": {
          "type": "boolean",
          "description": "Set to true to show alpha version of devices screen",
          "example": false
        },
        "allowNewFirmware": {
          "type": "boolean",
          "description": "Set to true to show alpha version of firmware upgrade screen",
          "example": false
        },
        "allowNewStatistics": {
          "type": "boolean",
          "description": "Set to true to show alpha version of statistics overview screen",
          "example": false
        },
        "autoUpdatePlatforms": {
          "$ref": "#/definitions/autoUpdatePlatforms"
        }
      },
      "required": [
        "timezone",
        "homePage",
        "hostname",
        "autoBackups",
        "deviceAutoBackups",
        "discoveryAutoConfiguration",
        "discoveryAllowUnsecuredChannels",
        "discoveryAllowLocalScan",
        "discoveryAllowRemoteScan",
        "discoverySnmpCommunity",
        "discoveryHideBlackBox",
        "discoveryNotification",
        "mapsProvider",
        "googleMapsApiKey",
        "devicePingAddressMode",
        "devicePingAddress",
        "devicePingIntervalNormal",
        "devicePingIntervalOutage",
        "useLetsEncrypt",
        "allowLoggingToSentry",
        "allowLoggingToLogentries",
        "deviceTransmissionProfile",
        "defaultGracePeriod",
        "restartGracePeriod",
        "upgradeGracePeriod",
        "outageMailablePeriod",
        "dateFormat",
        "timeFormat",
        "allowAutoUpdateUbntFirmwares",
        "allowBetaFirmwares",
        "ucrmEnabled",
        "isIsp",
        "country",
        "defaultQosPropagation",
        "migrationModeEnabled",
        "migrationForceModeEnabled",
        "migrationWithBackupEnabled",
        "migrationUispKey",
        "migrationHostname",
        "migrationPort"
      ]
    },
    "Model230": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "example": "0.13.0"
        }
      },
      "required": [
        "version"
      ]
    },
    "SiteIdentificationDetail2": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": [
            "site",
            "endpoint"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        },
        "parent": {
          "$ref": "#/definitions/parent4"
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status"
      ]
    },
    "SiteDescription1": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Nepal"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description."
        },
        "contact": {
          "$ref": "#/definitions/SiteDescriptionContact"
        },
        "location": {
          "$ref": "#/definitions/SiteDescriptionLocation"
        },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 8848
        },
        "endpoints": {
          "$ref": "#/definitions/SiteEndpointsList"
        },
        "deviceCount": {
          "type": "number",
          "description": "Number of devices in this site.",
          "example": 1
        },
        "deviceOutageCount": {
          "type": "number",
          "description": "Number of devices in this site in outage.",
          "example": 1
        },
        "deviceListStatus": {
          "type": "string",
          "description": "Deprecated. Use site.identification.status instead.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM client bound with this site. Null if no UCRM client is bound to this site.",
          "example": "135"
        },
        "ipAddresses": {
          "$ref": "#/definitions/ipAddresses"
        },
        "sla": {
          "type": "number",
          "example": 0.4
        }
      }
    },
    "SiteSpeedReport1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ispName": {
          "type": "string",
          "example": "Czechia ISP - Ostrava"
        },
        "publicIp": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            }
          ]
        },
        "downloadRateBytes": {
          "type": "number",
          "example": 44834803561
        },
        "uploadRateBytes": {
          "type": "number",
          "example": 8385
        },
        "endpoint": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "One of [INTERNET, LOCAL_DEVICE]",
          "example": "INTERNET"
        },
        "serverName": {
          "type": "string",
          "example": "uisp.com"
        },
        "downloadSpeedBytes": {
          "type": "number",
          "example": 125000000
        },
        "uploadSpeedBytes": {
          "type": "number",
          "example": 625000000
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "platform": {
          "type": "string",
          "example": "Web"
        },
        "model": {
          "type": "string",
          "example": "iPhone X"
        },
        "system": {
          "type": "string",
          "example": "iOS"
        },
        "vendor": {
          "type": "string",
          "example": "Apple"
        }
      }
    },
    "SiteUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "identification": {
          "$ref": "#/definitions/SiteIdentificationDetail2"
        },
        "description": {
          "$ref": "#/definitions/SiteDescription1"
        },
        "lastSpeedReport": {
          "$ref": "#/definitions/SiteSpeedReport1"
        },
        "notifications": {
          "$ref": "#/definitions/SiteNotifications"
        },
        "qos": {
          "$ref": "#/definitions/SiteTrafficShaping2"
        },
        "isMisconfigured": {
          "type": "boolean",
          "description": "Set to true if site is misconfigured",
          "example": true
        }
      },
      "required": [
        "identification",
        "description"
      ]
    },
    "VerifyPasswordAction": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 64
        },
        "totpAuthEnabled": {
          "type": "boolean"
        }
      },
      "required": [
        "password",
        "totpAuthEnabled"
      ]
    },
    "EditUserPreferences": {
      "type": "object",
      "properties": {
        "mapConfig": {
          "$ref": "#/definitions/mapConfig"
        },
        "tableConfig": {
          "$ref": "#/definitions/tableConfig"
        },
        "preferences": {
          "$ref": "#/definitions/preferences"
        },
        "alerts": {
          "type": "boolean"
        }
      }
    },
    "EnableTotpAuth": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "minLength": 4,
          "maxLength": 64
        },
        "verificationCode": {
          "type": "string"
        },
        "totpAuthEnabled": {
          "type": "boolean"
        },
        "totpAuthSecret": {
          "type": "string"
        }
      },
      "required": [
        "password",
        "verificationCode",
        "totpAuthEnabled",
        "totpAuthSecret"
      ]
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "username": {
          "type": "string",
          "description": "Username used for login.",
          "example": "admin",
          "pattern": "[@{}()\u003C\u003E/+*'\";=%]+"
        },
        "email": {
          "type": "string",
          "description": "User's email.",
          "example": "admin@example.com",
          "x-format": {
            "email": true
          }
        },
        "firstName": {
          "type": "string",
          "description": "User's first name.",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "description": "User's last name.",
          "example": "Doe"
        },
        "role": {
          "type": "string",
          "description": "Users's role in Network.",
          "example": "admin",
          "enum": [
            "superadmin",
            "admin",
            "guest",
            "anonymous",
            "installer"
          ]
        },
        "ucrmRole": {
          "type": "string",
          "description": "Users's role ID in CRM."
        },
        "homeScreen": {
          "type": "string",
          "example": "/nms",
          "enum": [
            "/nms",
            "/crm"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether user is allowed to login or not.",
          "example": true
        },
        "totpAuthEnabled": {
          "type": "boolean",
          "description": "Whether two-factor authentication is enabled or not.",
          "example": false
        },
        "ucrmId": {
          "type": "string",
          "description": "Ignored, kept for backward compatibility.",
          "example": "123"
        }
      },
      "required": [
        "id",
        "email",
        "role",
        "totpAuthEnabled"
      ]
    },
    "Model231": {
      "type": "object",
      "properties": {
        "file": {
          "type": "string",
          "format": "binary"
        }
      },
      "required": [
        "file"
      ]
    },
    "Model232": {
      "type": "object",
      "properties": {
        "allowUnmsBetaVersion": {
          "type": "boolean"
        }
      }
    },
    "SsoUserSchema1": {
      "type": "object",
      "description": "SSO user data obtained through \"POST /nms/api/v2.1/user/sso/verify\" API.",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3"
        },
        "username": {
          "type": "string",
          "example": "JohnDoe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com",
          "x-format": {
            "email": true
          }
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "imageUrl": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "EnableSso": {
      "type": "object",
      "properties": {
        "password": {
          "type": "string",
          "description": "UISP user password.",
          "minLength": 4,
          "maxLength": 64
        },
        "verificationCode": {
          "type": "string",
          "description": "UISP user 2FA verification code. Not required when 2FA is not enabled for the account.",
          "x-constraint": {
            "length": 6
          }
        },
        "ssoUser": {
          "$ref": "#/definitions/SsoUserSchema1"
        }
      },
      "required": [
        "password",
        "ssoUser"
      ]
    },
    "Model233": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Device name",
          "example": "UBNTe7961646",
          "minLength": 1
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to true if device is enabled",
          "example": true
        },
        "adminPassword": {
          "type": "string",
          "description": "Admin password",
          "example": "secredPass_123",
          "minLength": 4,
          "maxLength": 64
        }
      },
      "required": [
        "name",
        "enabled"
      ]
    },
    "meta1": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "maxLength": 30
        },
        "note": {
          "type": "string",
          "maxLength": 300
        },
        "maintenance": {
          "type": "boolean"
        },
        "customIpAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        }
      },
      "required": [
        "maintenance"
      ]
    },
    "PayloadUnmsSettings": {
      "type": "object",
      "properties": {
        "overrideGlobal": {
          "type": "boolean"
        },
        "devicePingAddress": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional"
                }
              }
            },
            {
              "type": "string"
            }
          ]
        },
        "devicePingIntervalNormal": {
          "type": "number",
          "description": "In milliseconds.",
          "minimum": 10000,
          "maximum": 300000
        },
        "devicePingIntervalOutage": {
          "type": "number",
          "description": "In milliseconds.",
          "minimum": 2000,
          "maximum": 300000
        },
        "deviceTransmissionFrequency": {
          "type": "string",
          "enum": [
            "minimal",
            "low",
            "medium",
            "high",
            "realtime"
          ]
        },
        "deviceGracePeriodOutage": {
          "type": "integer",
          "example": 300000,
          "minimum": 30000,
          "maximum": 2592000000
        },
        "meta": {
          "$ref": "#/definitions/meta1"
        }
      },
      "required": [
        "overrideGlobal"
      ]
    },
    "login4": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "admin2": {
      "type": "object",
      "properties": {
        "login": {
          "$ref": "#/definitions/login4"
        }
      }
    },
    "Model234": {
      "type": "object",
      "properties": {
        "admin": {
          "$ref": "#/definitions/admin2"
        }
      }
    },
    "login5": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "admin3": {
      "type": "object",
      "properties": {
        "login": {
          "$ref": "#/definitions/login5"
        }
      }
    },
    "Model235": {
      "type": "object",
      "properties": {
        "admin": {
          "$ref": "#/definitions/admin3"
        }
      }
    },
    "redistributeDefaultRoute1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "redistributeStatic": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "number",
          "minimum": 1,
          "maximum": 16
        }
      },
      "required": [
        "enabled",
        "metric"
      ]
    },
    "redistributeConnected": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "number",
          "minimum": 1,
          "maximum": 16
        }
      },
      "required": [
        "enabled",
        "metric"
      ]
    },
    "Model236": {
      "type": "object",
      "properties": {
        "router": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute1"
        },
        "redistributeStatic": {
          "$ref": "#/definitions/redistributeStatic"
        },
        "redistributeConnected": {
          "$ref": "#/definitions/redistributeConnected"
        }
      },
      "required": [
        "router",
        "redistributeDefaultRoute",
        "redistributeStatic",
        "redistributeConnected"
      ]
    },
    "login6": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "admin4": {
      "type": "object",
      "properties": {
        "login": {
          "$ref": "#/definitions/login6"
        }
      }
    },
    "Model237": {
      "type": "object",
      "properties": {
        "admin": {
          "$ref": "#/definitions/admin4"
        }
      }
    },
    "login7": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "admin5": {
      "type": "object",
      "properties": {
        "login": {
          "$ref": "#/definitions/login7"
        }
      }
    },
    "Model238": {
      "type": "object",
      "properties": {
        "admin": {
          "$ref": "#/definitions/admin5"
        }
      }
    },
    "redistributeDefaultRoute2": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "Model239": {
      "type": "object",
      "properties": {
        "router": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute2"
        },
        "redistributeStatic": {
          "$ref": "#/definitions/redistributeStatic"
        },
        "redistributeConnected": {
          "$ref": "#/definitions/redistributeConnected"
        }
      },
      "required": [
        "router",
        "redistributeDefaultRoute",
        "redistributeStatic",
        "redistributeConnected"
      ]
    },
    "redistributeDefaultRoute3": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      },
      "required": [
        "enabled"
      ]
    },
    "redistributeStatic1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "number",
          "minimum": 1,
          "maximum": 65535
        }
      },
      "required": [
        "enabled",
        "metric"
      ]
    },
    "redistributeConnected1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "metric": {
          "type": "number",
          "minimum": 1,
          "maximum": 65535
        }
      },
      "required": [
        "enabled",
        "metric"
      ]
    },
    "Model240": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "router": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "redistributeDefaultRoute": {
          "$ref": "#/definitions/redistributeDefaultRoute3"
        },
        "redistributeStatic": {
          "$ref": "#/definitions/redistributeStatic1"
        },
        "redistributeConnected": {
          "$ref": "#/definitions/redistributeConnected1"
        }
      },
      "required": [
        "router",
        "redistributeDefaultRoute",
        "redistributeStatic",
        "redistributeConnected"
      ]
    },
    "login8": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "minLength": 1
        },
        "password": {
          "type": "string",
          "minLength": 1
        }
      },
      "required": [
        "username",
        "password"
      ]
    },
    "admin6": {
      "type": "object",
      "properties": {
        "login": {
          "$ref": "#/definitions/login8"
        }
      }
    },
    "Model241": {
      "type": "object",
      "properties": {
        "admin": {
          "$ref": "#/definitions/admin6"
        }
      }
    },
    "Model242": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "key"
      ]
    },
    "authKeysMD53": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model242"
      }
    },
    "Model243": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cost": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "authKey": {
          "type": "string"
        },
        "authKeysMD5": {
          "$ref": "#/definitions/authKeysMD53"
        }
      },
      "required": [
        "cost",
        "auth",
        "authKey"
      ]
    },
    "UpdateDHCPServer": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "lan",
          "minLength": 1,
          "maxLength": 63
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface IP v4 address in CIDR format.",
          "example": "192.168.2.0/24",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "interface",
        "leaseTime",
        "name",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "Model244": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model128"
      }
    },
    "Model245": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "key"
      ]
    },
    "authKeysMD54": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model245"
      }
    },
    "Model246": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cost": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "authKey": {
          "type": "string"
        },
        "authKeysMD5": {
          "$ref": "#/definitions/authKeysMD54"
        }
      },
      "required": [
        "id",
        "cost",
        "auth",
        "authKey"
      ]
    },
    "UpdateDHCPServer1": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "lan",
          "minLength": 1,
          "maxLength": 63
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface id.",
          "example": "eth0"
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "interface",
        "name",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPServerList5": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPServer1"
      }
    },
    "Model247": {
      "type": "object",
      "properties": {
        "composeId": {
          "type": "string"
        },
        "data": {
          "$ref": "#/definitions/Model144"
        }
      }
    },
    "UpdateDHCPServer2": {
      "type": "object",
      "properties": {
        "available": {
          "type": "number",
          "description": "Available leases in DHCP pool.",
          "example": 90,
          "minimum": 0
        },
        "dns1": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "dns2": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv4"
                  ]
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "optional",
                  "version": [
                    "ipv6"
                  ]
                }
              }
            }
          ]
        },
        "domain": {
          "type": "string",
          "description": "Domain name.",
          "example": "lan",
          "minLength": 1,
          "maxLength": 63
        },
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE to enable DHCP server.",
          "example": true
        },
        "interface": {
          "type": "string",
          "description": "Interface id.",
          "example": "eth0"
        },
        "leaseTime": {
          "type": "number",
          "description": "DHCP lease time in seconds.",
          "example": 86400
        },
        "name": {
          "type": "string",
          "description": "DHCP server custom name.",
          "example": "Main DHCP server",
          "minLength": 1
        },
        "ipVersion": {
          "type": "string",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "poolSize": {
          "type": "number",
          "description": "Total range of leases in DHCP pool.",
          "example": 100,
          "minimum": 0
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool end in CIDR format.",
          "example": "192.168.2.250/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51/24",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "router": {
          "type": "string",
          "description": "Router IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "unifiController": {
          "type": "string",
          "description": "Unifi controller IP v4 address.",
          "example": "192.168.2.1",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      },
      "required": [
        "interface",
        "name",
        "rangeEnd",
        "rangeStart"
      ]
    },
    "DHCPServerList6": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/DHCPServer2"
      }
    },
    "Model248": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "key": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "key"
      ]
    },
    "authKeysMD55": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model248"
      }
    },
    "Model249": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "cost": {
          "type": "integer",
          "minimum": 0,
          "maximum": 65535
        },
        "auth": {
          "type": "string",
          "enum": [
            "md5",
            "plaintext-password",
            "off"
          ]
        },
        "authKey": {
          "type": "string"
        },
        "authKeysMD5": {
          "$ref": "#/definitions/authKeysMD55"
        }
      },
      "required": [
        "id",
        "cost",
        "auth",
        "authKey"
      ]
    },
    "Model250": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model146"
      }
    },
    "Model251": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model146"
      }
    },
    "PayloadDeviceStation": {
      "type": "object",
      "properties": {
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        }
      }
    },
    "Model252": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Model253": {
      "type": "object",
      "properties": {
        "alertsEnabled": {
          "type": "boolean"
        },
        "alerts": {
          "type": "string"
        }
      },
      "required": [
        "alertsEnabled",
        "alerts"
      ]
    },
    "Model254": {
      "type": "object",
      "properties": {
        "email": {
          "type": "boolean"
        },
        "push": {
          "type": "boolean"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name",
        "description"
      ]
    },
    "notificationTypes1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model254"
      }
    },
    "Model255": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "notificationTypes": {
          "$ref": "#/definitions/notificationTypes1"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "sections1": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Model255"
      }
    },
    "Model256": {
      "type": "object",
      "properties": {
        "alertsEnabled": {
          "type": "boolean"
        },
        "sections": {
          "$ref": "#/definitions/sections1"
        }
      },
      "required": [
        "alertsEnabled"
      ]
    },
    "ImageData": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    }
  },
  "x-alt-definitions": {
    "parent": {
      "type": "object"
    },
    "outage": {
      "type": "object",
      "properties": {
        "email": {
          "type": "boolean"
        },
        "push": {
          "type": "boolean"
        }
      }
    },
    "User push notifications settings object.": {
      "type": "object",
      "properties": {
        "outage": {
          "$ref": "#/x-alt-definitions/outage"
        },
        "power-source-error": {
          "$ref": "#/x-alt-definitions/outage"
        },
        "gateway-netflow-error": {
          "$ref": "#/x-alt-definitions/outage"
        },
        "dfs-channel-change": {
          "$ref": "#/x-alt-definitions/outage"
        }
      }
    },
    "tableConfig": {
      "type": "object"
    },
    "mapConfig": {
      "type": "object",
      "properties": {
        "showClientSites": {
          "type": "boolean"
        }
      }
    },
    "preferences": {
      "type": "object"
    },
    "UserLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.8345584421122,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.46358,
          "minimum": -180,
          "maximum": 180
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the location was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "latitude",
        "longitude",
        "updated"
      ]
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "example": "admin"
        },
        "email": {
          "type": "string",
          "example": "email@example.com",
          "x-format": {
            "email": true
          }
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "imageUrl": {
          "type": "string"
        },
        "alerts": {
          "type": "boolean"
        },
        "notification": {
          "$ref": "#/x-alt-definitions/User%20push%20notifications%20settings%20object."
        },
        "totpAuthEnabled": {
          "type": "boolean"
        },
        "isSsoLoginEnabled": {
          "type": "boolean"
        },
        "isLocalLoginEnabled": {
          "type": "boolean"
        },
        "isOfflinePasswordsGenerated": {
          "type": "boolean"
        },
        "role": {
          "type": "string",
          "description": "Role of this user in UISP. 'anonymous' if user is only allowed to access CRM.",
          "example": "admin",
          "enum": [
            "superadmin",
            "admin",
            "guest",
            "anonymous",
            "installer"
          ]
        },
        "presentationMode": {
          "type": "boolean",
          "description": "Obsolete.",
          "example": false
        },
        "forceChangePassword": {
          "type": "boolean"
        },
        "tableConfig": {
          "$ref": "#/x-alt-definitions/tableConfig"
        },
        "mapConfig": {
          "$ref": "#/x-alt-definitions/mapConfig"
        },
        "preferences": {
          "$ref": "#/x-alt-definitions/preferences"
        },
        "lastLogItemId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/x-alt-definitions/UserLocation"
        },
        "sessionTimeout": {
          "type": "integer",
          "description": "Session expiration in milliseconds, max 30 days.",
          "example": 3600000,
          "minimum": 1
        },
        "keepMeSignedIn": {
          "type": "boolean",
          "description": "Whether session should be cleared when browser window is closed.",
          "example": true
        },
        "lastNewsSeenDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last news check time in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "lastReleaseNotesSeen": {
          "type": "string",
          "description": "Last seen version of release notes.",
          "example": "1.0.0-alpha"
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM user that is bound with this user.",
          "example": "123"
        },
        "ucrmRole": {
          "type": "string",
          "description": "Role of this user in UCRM. 'null' if user is not allowed to access UCRM.",
          "example": "1"
        },
        "homeScreen": {
          "type": "string",
          "description": "Where should the user be redirected after login.",
          "example": "/nms",
          "enum": [
            "/nms",
            "/crm"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the user can log in or not.",
          "example": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the user was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "alerts",
        "notification",
        "isSsoLoginEnabled",
        "isLocalLoginEnabled",
        "isOfflinePasswordsGenerated",
        "forceChangePassword",
        "location",
        "keepMeSignedIn",
        "lastNewsSeenDate",
        "lastReleaseNotesSeen",
        "ucrmId",
        "ucrmRole",
        "homeScreen",
        "enabled",
        "updated"
      ]
    },
    "SsoUserSchema": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3"
        },
        "username": {
          "type": "string",
          "example": "JohnDoe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com",
          "x-format": {
            "email": true
          }
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "imageUrl": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "Model1": {
      "type": "object",
      "properties": {
        "clients": {
          "type": "number",
          "description": "Number of clients of a device",
          "example": 1,
          "minimum": 0
        },
        "model": {
          "type": "string",
          "description": "Device model",
          "example": "UX",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "name": {
          "type": "string",
          "description": "Device name",
          "example": "Garden router"
        },
        "version": {
          "type": "string",
          "description": "Firmware version of the device",
          "example": "UX1.2.3"
        },
        "wiFiExperience": {
          "type": "number",
          "description": "WiFI speed",
          "example": 1000
        }
      }
    },
    "meshing": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model1"
      }
    },
    "uplink": {
      "type": "object",
      "properties": {
        "rxBytes": {
          "type": "integer",
          "description": "Received bytes.",
          "example": 926000
        },
        "rxRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 456
        },
        "txBytes": {
          "type": "integer",
          "description": "Sent bytes.",
          "example": 926000
        },
        "txRate": {
          "type": "integer",
          "description": "Current upload speed in bps.",
          "example": 456
        }
      }
    },
    "ux": {
      "type": "object",
      "properties": {
        "meshing": {
          "$ref": "#/x-alt-definitions/meshing"
        },
        "uplink": {
          "$ref": "#/x-alt-definitions/uplink"
        },
        "cloudDeviceToken": {
          "type": "string",
          "description": "Device token is a string uniquely identifying a device",
          "example": "987asdfPOSD9dPXY58hxohex9Q0842sUEZgURMNZvaBCZCQROzgxjbIhJWi7fta8se"
        }
      },
      "required": [
        "cloudDeviceToken"
      ]
    },
    "prerelease": {
      "type": "array",
      "items": {
        "type": "string",
        "x-alternatives": [
          {
            "type": "string"
          },
          {
            "type": "number"
          }
        ]
      }
    },
    "current": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number"
        },
        "minor": {
          "type": "number"
        },
        "order": {
          "type": "string"
        },
        "patch": {
          "type": "number"
        },
        "prerelease": {
          "$ref": "#/x-alt-definitions/prerelease"
        }
      },
      "required": [
        "major",
        "minor",
        "order",
        "patch"
      ]
    },
    "latest": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number"
        },
        "minor": {
          "type": "number"
        },
        "order": {
          "type": "string"
        },
        "patch": {
          "type": "number"
        },
        "prerelease": {
          "$ref": "#/x-alt-definitions/prerelease"
        }
      },
      "required": [
        "major",
        "minor",
        "order",
        "patch"
      ]
    },
    "latestOnCurrentMajorVersion": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number"
        },
        "minor": {
          "type": "number"
        },
        "order": {
          "type": "string"
        },
        "patch": {
          "type": "number"
        },
        "prerelease": {
          "$ref": "#/x-alt-definitions/prerelease"
        }
      },
      "required": [
        "major",
        "minor",
        "order",
        "patch"
      ]
    },
    "latestOver": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number"
        },
        "minor": {
          "type": "number"
        },
        "order": {
          "type": "string"
        },
        "patch": {
          "type": "number"
        },
        "prerelease": {
          "$ref": "#/x-alt-definitions/prerelease"
        }
      },
      "required": [
        "major",
        "minor",
        "order",
        "patch"
      ]
    },
    "semver": {
      "type": "object",
      "properties": {
        "current": {
          "$ref": "#/x-alt-definitions/current"
        },
        "latest": {
          "$ref": "#/x-alt-definitions/latest"
        },
        "latestOnCurrentMajorVersion": {
          "$ref": "#/x-alt-definitions/latestOnCurrentMajorVersion"
        },
        "latestOver": {
          "$ref": "#/x-alt-definitions/latestOver"
        }
      }
    },
    "DeviceFirmware": {
      "type": "object",
      "properties": {
        "compatible": {
          "type": "boolean",
          "description": "If firmware is compatible with UISP"
        },
        "current": {
          "type": "string",
          "description": "Current firmware version"
        },
        "latest": {
          "type": "string",
          "description": "Latest known firmware version"
        },
        "latestOnCurrentMajorVersion": {
          "type": "string",
          "description": "Latest known firmware version on current major version"
        },
        "latestOver": {
          "type": "string",
          "description": "Upgrade this firmware version as first if target\n  firmware is higher than latestOver. (AirCube must be updated over 2.8.0 fw)"
        },
        "semver": {
          "$ref": "#/x-alt-definitions/semver"
        },
        "upgradeRecommendedToVersion": {
          "type": "string",
          "description": "Recommended firmware version to upgrade to."
        },
        "prospective": {
          "type": "string",
          "description": "Latest firmware version, even if not supported by UISP yet"
        }
      },
      "required": [
        "current",
        "latest",
        "latestOnCurrentMajorVersion",
        "latestOver",
        "semver",
        "upgradeRecommendedToVersion",
        "prospective"
      ]
    },
    "apDevice": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string",
          "enum": [
            "AC",
            "M",
            "G60",
            "AX"
          ]
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "firmware": {
          "$ref": "#/x-alt-definitions/DeviceFirmware"
        },
        "siteId": {
          "type": "string"
        }
      },
      "required": [
        "series"
      ]
    },
    "Model2": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "frequencyBands": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/x-alt-definitions/Model2"
      }
    },
    "polling": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        }
      }
    },
    "signalChain": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "signalRemoteChain": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "availableTxPowerRange": {
      "type": "object",
      "properties": {
        "min": {
          "type": "integer",
          "example": 0
        },
        "max": {
          "type": "integer",
          "example": 19
        }
      }
    },
    "location": {
      "type": "object",
      "description": "DeviceLocation",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.8345584421122,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.46358,
          "minimum": -180,
          "maximum": 180
        }
      }
    },
    "[DEPRECATED]DeviceAirmax - partially moved properties to interface or station.": {
      "type": "object",
      "properties": {
        "antenna": {
          "type": "string"
        },
        "apDevice": {
          "$ref": "#/x-alt-definitions/apDevice"
        },
        "apMac": {
          "type": "string"
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "ccq": {
          "type": "number"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "countryCode": {
          "type": "integer",
          "minimum": 0
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "frequencyBands": {
          "$ref": "#/x-alt-definitions/frequencyBands"
        },
        "frequencyCenter": {
          "type": "string"
        },
        "noiseFloor": {
          "type": "string"
        },
        "polling": {
          "$ref": "#/x-alt-definitions/polling"
        },
        "receiveChains": {
          "type": "number"
        },
        "remoteSignal": {
          "type": "number"
        },
        "remoteSignal60g": {
          "type": "number"
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "series": {
          "type": "string",
          "enum": [
            "AC",
            "M",
            "G60",
            "AX"
          ]
        },
        "signalChain": {
          "$ref": "#/x-alt-definitions/signalChain"
        },
        "signalRemoteChain": {
          "$ref": "#/x-alt-definitions/signalRemoteChain"
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "stationName": {
          "type": "string"
        },
        "stationsCount": {
          "type": "number"
        },
        "transmitChains": {
          "type": "number"
        },
        "transmitPower": {
          "type": "number"
        },
        "wds": {
          "type": "boolean"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "tddFraming": {
          "type": "string"
        },
        "wlanRxBytes": {
          "type": "number"
        },
        "wlanTxBytes": {
          "type": "number"
        },
        "gpsSignal": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "availableTxPowerRange": {
          "$ref": "#/x-alt-definitions/availableTxPowerRange"
        },
        "location": {
          "$ref": "#/x-alt-definitions/location"
        },
        "cableLength": {
          "type": "number",
          "description": "Cable Length from eth0 interface in meters. When below values is null cable is long less then 20m."
        },
        "cableSnr": {
          "type": "number",
          "description": "Average signal-to-noise ratio on eth0 interface in dB"
        },
        "rxCinr": {
          "type": "number",
          "description": "Carrier to Interference-plus-Noise Ratio in dB on wireless"
        }
      },
      "required": [
        "authentication",
        "channelWidth",
        "countryCode",
        "security",
        "series"
      ]
    },
    "Model3": {
      "type": "array",
      "items": {
        "type": "number"
      }
    },
    "frequencyBands1": {
      "type": "array",
      "description": "List of frequency bands in [key(freq),value(anze)] format.",
      "example": "[[5097, 7], [5102, 7]]",
      "items": {
        "$ref": "#/x-alt-definitions/Model3"
      }
    },
    "apDevice1": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string",
          "enum": [
            "LTU",
            "classic",
            "G60"
          ]
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "firmware": {
          "$ref": "#/x-alt-definitions/DeviceFirmware"
        },
        "siteId": {
          "type": "string"
        }
      },
      "required": [
        "series"
      ]
    },
    "[DEPRECATED]DeviceAirFiber - partially moved properties to interface or station.": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string",
          "enum": [
            "LTU",
            "classic",
            "G60"
          ]
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "bridgeMode": {
          "type": "string",
          "enum": [
            "hw",
            "sw"
          ]
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "antenna": {
          "type": "string"
        },
        "frequencyBands": {
          "$ref": "#/x-alt-definitions/frequencyBands1"
        },
        "frequencyCenter": {
          "type": "string"
        },
        "noiseFloor": {
          "type": "string"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "countryCode": {
          "type": "integer",
          "minimum": 0
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "remoteSignal": {
          "type": "string"
        },
        "transmitPower": {
          "type": "number",
          "x-alternatives": [
            {
              "type": "number"
            },
            {
              "type": "string",
              "enum": [
                "-"
              ]
            }
          ]
        },
        "transmitEirp": {
          "type": "number"
        },
        "transmitChains": {
          "type": "number"
        },
        "receiveChains": {
          "type": "number"
        },
        "transmitDutyCycle": {
          "type": "number"
        },
        "apMac": {
          "type": "string"
        },
        "apDevice": {
          "$ref": "#/x-alt-definitions/apDevice1"
        },
        "stationName": {
          "type": "string"
        },
        "signalChain": {
          "$ref": "#/x-alt-definitions/signalChain"
        },
        "signalRemoteChain": {
          "$ref": "#/x-alt-definitions/signalRemoteChain"
        },
        "stationsCount": {
          "type": "number"
        },
        "frameLength": {
          "type": "number"
        }
      },
      "required": [
        "ssid"
      ]
    },
    "apDevice2": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "firmware": {
          "$ref": "#/x-alt-definitions/DeviceFirmware"
        },
        "siteId": {
          "type": "string"
        }
      }
    },
    "Wifi": {
      "type": "object",
      "properties": {
        "authentication": {
          "type": "string",
          "enum": [
            "psk",
            "psk2",
            "ent",
            "none"
          ]
        },
        "available": {
          "type": "boolean"
        },
        "channel": {
          "type": "number"
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width",
          "minimum": 0
        },
        "country": {
          "type": "string",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "enabled": {
          "type": "boolean"
        },
        "encryption": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "frequency": {
          "type": "number",
          "description": "Frequency",
          "example": 5400,
          "minimum": 0
        },
        "isChannelAuto": {
          "type": "boolean"
        },
        "key": {
          "type": "string"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "mode": {
          "type": "string",
          "enum": [
            "ap",
            "mesh"
          ]
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "stationsCount": {
          "type": "number"
        },
        "txPower": {
          "type": "number"
        }
      }
    },
    "Model4": {
      "type": "object",
      "properties": {
        "mac": {
          "type": "string"
        },
        "hostname": {
          "type": "string"
        },
        "ip": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "timeout": {
          "type": "number"
        }
      }
    },
    "dhcpLeases": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model4"
      }
    },
    "DeviceAirCube": {
      "type": "object",
      "properties": {
        "wifiMode": {
          "type": "string",
          "enum": [
            "ap",
            "mesh"
          ]
        },
        "apDevice": {
          "$ref": "#/x-alt-definitions/apDevice2"
        },
        "mgmtIp": {
          "type": "string",
          "description": "Management IP address.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "wanIp": {
          "type": "string",
          "description": "WAN IP address.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "lanIp": {
          "type": "string",
          "description": "LAN IP address.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "poe": {
          "type": "boolean"
        },
        "wifi2Ghz": {
          "$ref": "#/x-alt-definitions/Wifi"
        },
        "wifi5Ghz": {
          "$ref": "#/x-alt-definitions/Wifi"
        },
        "dhcpLeases": {
          "$ref": "#/x-alt-definitions/dhcpLeases"
        }
      }
    },
    "apDevice3": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "firmware": {
          "$ref": "#/x-alt-definitions/DeviceFirmware"
        },
        "siteId": {
          "type": "string"
        }
      }
    },
    "DeviceAttributes": {
      "type": "object",
      "properties": {
        "series": {
          "type": "string"
        },
        "isAxCompatible": {
          "type": "boolean"
        },
        "ssid": {
          "type": "string",
          "description": "SSID"
        },
        "secondarySsid": {
          "type": "string",
          "description": "Secondary SSID"
        },
        "gatewayId": {
          "type": "string"
        },
        "hasGatewayInterfaceAvailable": {
          "type": "boolean"
        },
        "isGatewaySupported": {
          "type": "boolean",
          "example": true
        },
        "apDevice": {
          "$ref": "#/x-alt-definitions/apDevice3"
        },
        "country": {
          "type": "string",
          "example": "United States",
          "enum": [
            "Unknown",
            "Licensed",
            "Licensed (5170-6200 MHz)",
            "Canada Licensed",
            "Afghanistan",
            "Åland Islands",
            "Albania",
            "Algeria",
            "American Samoa",
            "Andorra",
            "Angola",
            "Anguilla",
            "Antarctica",
            "Antigua and Barbuda",
            "Argentina",
            "Armenia",
            "Aruba",
            "Australia",
            "Austria",
            "Azerbaijan",
            "Bahamas",
            "Bahrain",
            "Bangladesh",
            "Barbados",
            "Belarus",
            "Belgium",
            "Belize",
            "Benin",
            "Bermuda",
            "Bhutan",
            "Bolivia",
            "Bonaire, Sint Eustatius and Saba",
            "Bosnia and Herzegovina",
            "Botswana",
            "Bouvet Island",
            "Brazil",
            "British Indian Ocean Territory",
            "Brunei Darussalam",
            "Bulgaria",
            "Burkina Faso",
            "Burundi",
            "Cabo Verde",
            "Cambodia",
            "Cameroon",
            "Canada",
            "Cayman Islands",
            "Central Africa Republic",
            "Chad  ",
            "Chile",
            "China",
            "Christmas Island",
            "Cocos Islands",
            "Colombia",
            "Comoros",
            "Cook Islands",
            "Costa Rica",
            "Côte d'Ivoire",
            "Croatia",
            "Curaçao",
            "Cyprus",
            "Czech Republic",
            "Democratic Republic of the Congo",
            "Denmark",
            "Djibouti",
            "Dominica",
            "Dominican Republic",
            "Ecuador",
            "Egypt",
            "El Salvador",
            "Equatorial Guinea",
            "Eritrea",
            "Estonia",
            "Eswatini",
            "Ethiopia",
            "Falkland Islands",
            "Faroe Islands",
            "Fiji",
            "Finland",
            "France",
            "French Guiana",
            "French Polynesia",
            "French Southern Territories",
            "Gabon",
            "Gambia",
            "Georgia",
            "Germany",
            "Ghana",
            "Gibraltar",
            "Greece",
            "Greenland",
            "Grenada",
            "Guadeloupe",
            "Guam",
            "Guatemala",
            "Guernsey",
            "Guinea",
            "Guinea-Bissau",
            "Guyana",
            "Haiti",
            "Heard Island and McDonald Islands",
            "Honduras",
            "Hong Kong",
            "Hungary",
            "Iceland",
            "India",
            "Indonesia",
            "Iraq",
            "Ireland",
            "Isle of Man",
            "Israel",
            "Italy",
            "Jamaica",
            "Japan",
            "Jersey",
            "Jordan",
            "Kazakhstan",
            "Kenya",
            "Kiribati",
            "Kuwait",
            "Kyrgyzstan",
            "Lao People's Democratic Republic",
            "Latvia",
            "Lebanon",
            "Lesotho",
            "Liberia",
            "Libya",
            "Liechtenstein",
            "Lithuania",
            "Luxembourg",
            "Macau Sar",
            "Macedonia, Fyro",
            "Madagascar",
            "Malawi",
            "Malaysia",
            "Maldives",
            "Mali",
            "Malta",
            "Marshall Islands",
            "Martinique",
            "Mauritania",
            "Mauritius",
            "Mayotte",
            "Mexico",
            "Micronesia",
            "Moldova",
            "Monaco",
            "Mongolia",
            "Montenegro",
            "Montserrat",
            "Morocco",
            "Mozambique",
            "Myanmar",
            "Namibia",
            "Nauru",
            "Nepal",
            "Netherlands",
            "New Caledonia",
            "New Zealand",
            "Nicaragua",
            "Niger",
            "Nigeria",
            "Niue",
            "Norfolk Island",
            "Northern Mariana Islands",
            "Norway",
            "Oman",
            "Pakistan",
            "Palau",
            "Panama",
            "Papua New Guinea",
            "Paraguay",
            "Peru",
            "Philippines",
            "Pitcairn",
            "Poland",
            "Portugal",
            "Puerto Rico (U.S. territory)",
            "Qatar",
            "Republic of Korea",
            "Republic of Serbia",
            "Republic of Seychelles",
            "Republic of the Congo",
            "Reunion",
            "Romania",
            "Russia",
            "Rwanda",
            "Saint Barthélemy",
            "Saint Helena, Ascension and Tristan da Cunh",
            "Saint Kitts and Nevis",
            "Saint Lucia",
            "Saint Martin",
            "Saint Pierre Miquelon",
            "Saint Vincent Grenadiens",
            "Samoa",
            "San Marino",
            "Sao Tome and Principe",
            "Saudi Arabia",
            "Senegal",
            "Sierra Leone",
            "Singapore",
            "Sint Maarten",
            "Slovakia",
            "Slovenia",
            "Solomon Islands",
            "Somalia",
            "South Africa",
            "South Georgia and the South Sandwich Islands",
            "South Sudan",
            "Spain",
            "Sri Lanka",
            "State of Palestine",
            "Suriname",
            "Svalbard and Jan Mayen",
            "Sweden",
            "Switzerland",
            "Taiwan",
            "Tajikistan",
            "Tanzania",
            "Thailand",
            "Timor-Leste",
            "Togo",
            "Tokelau",
            "Tonga",
            "Trinidad and Tobago",
            "Tunisia",
            "Turkey",
            "Turkmenistan",
            "Turks Caicos",
            "Tuvalu",
            "Uganda",
            "Ukraine",
            "United Arab Emirates",
            "United Kingdom",
            "United States",
            "Uruguay",
            "Uzbekistan",
            "Vanuatu",
            "Vatican City State",
            "Venezuela",
            "Vietnam",
            "Virgin Islands (British)",
            "Virgin Islands (U.S.)",
            "Wallis Futuna",
            "Western Sahara",
            "Yemen",
            "Zambia",
            "Zimbabwe"
          ]
        },
        "countryCode": {
          "type": "number",
          "example": 840,
          "minimum": 0
        },
        "dyingGasp": {
          "type": "boolean",
          "description": "Set to true if ONU is disconnected due to power outage",
          "example": true
        },
        "signalLevel": {
          "type": "number",
          "description": "Signal level from 0 (no signal) to 4 (very strong signal). Null when unknown. Applicable for UISP-LTE and UISP-P-Pro with USB LTE Dongle",
          "example": 3,
          "minimum": 0
        },
        "signalStrength": {
          "type": "number",
          "description": "Actual signal strength in dBm. Null when unknown.",
          "example": -85
        },
        "regStatus": {
          "type": "string",
          "description": "Actual registration status of mobile network",
          "enum": [
            "unknown",
            "not_registered",
            "searching",
            "registered",
            "connected",
            "denied"
          ]
        },
        "parentId": {
          "type": "string",
          "description": "Parent device id, applicable for ONU devices",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "operator": {
          "type": "string",
          "description": "Operator name",
          "example": "T-Mobile CZ"
        },
        "pinStatus": {
          "type": "string",
          "description": "SIM card PIN status",
          "example": "blocked",
          "enum": [
            "disabled",
            "required",
            "unlocked",
            "blocked",
            "unknown"
          ]
        },
        "technology": {
          "type": "string",
          "description": "SIM card technology used currently",
          "example": "lte",
          "enum": [
            "gsm",
            "umts",
            "tdscdma",
            "lte",
            "cdma"
          ]
        },
        "pinAttemptsRemaining": {
          "type": "integer",
          "description": "Number of remaining allowed attempts to set or change PIN",
          "example": 3,
          "minimum": 0
        },
        "cardStatus": {
          "type": "string",
          "description": "SIM card status",
          "example": "present",
          "enum": [
            "unknown",
            "absent",
            "present"
          ]
        },
        "imei": {
          "type": "string",
          "description": "LTE modem IMEI number",
          "example": "353634110111687"
        },
        "smsQuotaCurrent": {
          "type": "integer",
          "minimum": 0
        },
        "smsQuotaMaximal": {
          "type": "integer",
          "minimum": 0
        },
        "backupNetAddress": {
          "type": "string"
        },
        "backupNetQuotaCurrent": {
          "type": "integer",
          "minimum": 0
        },
        "backupNetQuotaMaximal": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "visibleBy": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "description": "Device type",
          "example": "erouter",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "type",
        "model",
        "name"
      ]
    },
    "discovery": {
      "type": "object",
      "properties": {
        "configured": {
          "type": "boolean"
        },
        "error": {
          "type": "string"
        },
        "protocol": {
          "type": "string"
        },
        "snmpCommunity": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "isProcessing": {
          "type": "boolean"
        },
        "visibleBy": {
          "$ref": "#/x-alt-definitions/visibleBy"
        }
      }
    },
    "features": {
      "type": "object",
      "properties": {
        "has60GhzRadio": {
          "type": "boolean",
          "description": "Has 60Ghz radio.",
          "example": true
        },
        "hasBackupAntenna": {
          "type": "boolean",
          "description": "Has antenna for backup.",
          "example": true
        },
        "isUdapiSpeedTestSupported": {
          "type": "boolean",
          "description": "If device supports speed test over UDAPI.",
          "example": true
        },
        "isUsingUdapiUpdaters": {
          "type": "boolean",
          "description": "Device supports UDAPI.",
          "example": true
        },
        "isSupportRouter": {
          "type": "boolean",
          "description": "The device can be configured to act as a network router.",
          "example": true
        }
      }
    },
    "vlans": {
      "type": "object",
      "properties": {
        "interface": {
          "$ref": "#/x-alt-definitions/parent"
        },
        "vlanId": {
          "$ref": "#/x-alt-definitions/parent"
        }
      }
    },
    "eswitch": {
      "type": "object",
      "properties": {
        "vlans": {
          "$ref": "#/x-alt-definitions/vlans"
        }
      }
    },
    "uisps": {
      "type": "object",
      "properties": {
        "vlans": {
          "$ref": "#/x-alt-definitions/vlans"
        }
      }
    },
    "DeviceFirmware1": {
      "type": "object",
      "properties": {
        "compatible": {
          "type": "boolean",
          "description": "If firmware is compatible with UISP"
        },
        "current": {
          "type": "string",
          "description": "Current firmware version"
        },
        "latest": {
          "type": "string",
          "description": "Latest known firmware version"
        },
        "latestOnCurrentMajorVersion": {
          "type": "string",
          "description": "Latest known firmware version on current major version"
        },
        "latestOver": {
          "type": "string",
          "description": "Upgrade this firmware version as first if target\n  firmware is higher than latestOver. (AirCube must be updated over 2.8.0 fw)"
        },
        "semver": {
          "$ref": "#/x-alt-definitions/semver"
        },
        "upgradeRecommendedToVersion": {
          "type": "string",
          "description": "Recommended firmware version to upgrade to."
        },
        "prospective": {
          "type": "string",
          "description": "Latest firmware version, even if not supported by UISP yet"
        }
      },
      "required": [
        "current",
        "latest",
        "latestOnCurrentMajorVersion",
        "latestOver",
        "upgradeRecommendedToVersion",
        "prospective"
      ]
    },
    "site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Site ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "name": {
          "type": "string",
          "description": "Site name.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": [
            "site",
            "endpoint"
          ]
        },
        "parent": {
          "$ref": "#/x-alt-definitions/parent"
        }
      },
      "required": [
        "id",
        "status",
        "type"
      ]
    },
    "DeviceIdentification": {
      "type": "object",
      "description": "Read-only identification attributes.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UISP."
        },
        "category": {
          "type": "string",
          "enum": [
            "optical",
            "wired",
            "wireless",
            "accessories"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "UISP device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "udapiVersion": {
          "type": "string",
          "description": "In string format."
        },
        "bridgeVersion": {
          "type": "string",
          "description": "In string format."
        },
        "subsystemId": {
          "type": "string",
          "description": "Device subsystem ID in string format."
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UISP Fiber OLT."
        },
        "systemName": {
          "type": "string",
          "description": "OS",
          "example": "Linux"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "vendorName": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "name": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UISP Fiber NanoG",
            "UISP Fiber Loco",
            "UISP Fiber Wifi",
            "UISP Fiber Instant",
            "UISP Fiber Wifi6",
            "UISP Fiber XG",
            "UISP Fiber XGS",
            "UISP Router LXC",
            "UISPRPro",
            "UISPConsole",
            "UISPR",
            "UISPRPlus",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UNMSS",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "UISPFiberOltXgs",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "AF60",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "lturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SunMax",
            "UX",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "serialNumber": {
          "type": "string"
        },
        "site": {
          "$ref": "#/x-alt-definitions/site"
        },
        "started": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom",
            "maintenance",
            "incompatible",
            "unmonitored",
            "unassigned",
            "misconfigured",
            "preregistration"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "wanInterfaceId": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "ipAddressList": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "Custom IP address in IPv4 or IPv6 format.",
        "example": "192.168.1.22",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "latestBackup": {
      "type": "object",
      "description": "Latest backup info.",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Latest backup timestamp.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "id": {
          "type": "string",
          "description": "Latest backup ID."
        }
      },
      "required": [
        "timestamp",
        "id"
      ]
    },
    "DeviceMeta": {
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "maxLength": 30
        },
        "customIpAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "failedMessageDecryption": {
          "type": "boolean"
        },
        "failedDecryptionAt": {
          "type": "string",
          "format": "date-time"
        },
        "maintenance": {
          "type": "boolean"
        },
        "maintenanceEnabledAt": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "note": {
          "type": "string",
          "maxLength": 300
        },
        "restartTimestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "firmwareCompatibility": {
          "type": "string",
          "enum": [
            "obsolete",
            "compatible",
            "prospective",
            "upgradable"
          ]
        },
        "activeAction": {
          "type": "string",
          "enum": [
            "restarting",
            "removing",
            "updatingFirmware",
            "generatingSupportFile"
          ]
        }
      },
      "required": [
        "failedMessageDecryption",
        "maintenance",
        "restartTimestamp",
        "firmwareCompatibility"
      ]
    },
    "Model5": {
      "type": "object",
      "properties": {
        "psuType": {
          "type": "string"
        },
        "connected": {
          "type": "boolean"
        },
        "maxChargingPower": {
          "type": "number",
          "description": "Power reserved for charging in W."
        },
        "voltage": {
          "type": "number",
          "description": "Voltage in V.",
          "minimum": 0
        },
        "power": {
          "type": "number",
          "description": "Power consumption in W.",
          "minimum": 0
        },
        "batteryCapacity": {
          "type": "number",
          "description": "Battery capacity in percentage (only for battery).",
          "minimum": 0,
          "maximum": 100
        },
        "batteryTime": {
          "type": "number",
          "description": "Battery remaining time in seconds (only for battery).",
          "minimum": 0
        },
        "batteryType": {
          "type": "string",
          "description": "Battery type from UDAPI (lead-acid or li-ion)."
        },
        "batteryCapacityConfigured": {
          "type": "number",
          "description": "Configured battery capacity in mAh (only for battery).",
          "minimum": 0
        },
        "batteryCapacityEstimated": {
          "type": "number",
          "description": "Estimated battery capacity in mAh, null when the capacity is not known yet (only for battery).",
          "minimum": 0
        }
      }
    },
    "psu": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model5"
      }
    },
    "dfsLockouts": {
      "type": "array",
      "description": "DFS frequency lockouts.",
      "items": {
        "type": "number"
      }
    },
    "outputPowers": {
      "type": "array",
      "description": "Power consumption of each output port in W.",
      "items": {
        "type": "number"
      }
    },
    "linkScore": {
      "type": "object",
      "properties": {
        "score": {
          "type": "number",
          "description": "Score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "scoreMax": {
          "type": "number",
          "description": "Score max 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeScore": {
          "type": "number",
          "description": "Score airTime 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "uplinkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "downlinkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScoreHint": {
          "type": "string",
          "description": "Hint for better score."
        },
        "theoreticalTotalCapacity": {
          "type": "integer"
        },
        "theoreticalDownlinkCapacity": {
          "type": "integer"
        },
        "theoreticalUplinkCapacity": {
          "type": "integer"
        }
      }
    },
    "antenna": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "gain": {
          "type": "number"
        },
        "name": {
          "type": "string"
        },
        "builtIn": {
          "type": "boolean"
        },
        "cableLoss": {
          "type": "number"
        }
      }
    },
    "wirelessActiveInterfaceIds": {
      "type": "array",
      "description": "Main active radios currently used to send/receive traffic.",
      "example": [
        [
          "wlan0"
        ]
      ],
      "items": {
        "type": "string"
      }
    },
    "Main lan interface speed": {
      "type": "object",
      "description": "Available speed of main lan interface",
      "properties": {
        "interfaceId": {
          "type": "string"
        },
        "availableSpeed": {
          "type": "string"
        }
      }
    },
    "DeviceOverview": {
      "type": "object",
      "description": "Read-only basic device/client overview attributes.",
      "properties": {
        "batteryCapacity": {
          "type": "number",
          "description": "Device battery (batteries) capacity in percentage.",
          "minimum": 0,
          "maximum": 100
        },
        "batteryTime": {
          "type": "number",
          "description": "Device remaining time in seconds when running on battery (batteries).",
          "minimum": 0
        },
        "psu": {
          "$ref": "#/x-alt-definitions/psu"
        },
        "biasCurrent": {
          "type": "number",
          "description": "Nullable property in milliamperes."
        },
        "canUpgrade": {
          "type": "boolean",
          "description": "TRUE if device can be upgraded."
        },
        "consumption": {
          "type": "number",
          "description": "Power consumption in Wh."
        },
        "cpu": {
          "type": "number",
          "description": "Current cpu load."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "distance": {
          "type": "number",
          "description": "Nullable property in meters.Either distance between sites or distance returned from device AP."
        },
        "downlinkUtilization": {
          "type": "number"
        },
        "uplinkUtilization": {
          "type": "number"
        },
        "frequency": {
          "type": "number",
          "description": "Nullable prop; current frequency (only for airmax devices)."
        },
        "dfsLockouts": {
          "$ref": "#/x-alt-definitions/dfsLockouts"
        },
        "isLocateRunning": {
          "type": "boolean",
          "description": "TRUE if device is in locate mode."
        },
        "lastSeen": {
          "type": "string",
          "format": "date-time",
          "description": "Last seen timestamp in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "powerStatus": {
          "type": "number"
        },
        "outputPower": {
          "type": "number",
          "description": "Device power consumption in W."
        },
        "outputPowers": {
          "$ref": "#/x-alt-definitions/outputPowers"
        },
        "maximalPower": {
          "type": "number",
          "description": "Maximum power the device can currently provide in W."
        },
        "runningOnBattery": {
          "type": "boolean",
          "description": "TRUE if device is running on battery"
        },
        "ram": {
          "type": "number",
          "description": "Current memory usage."
        },
        "signal": {
          "type": "number",
          "description": "Nullable prop; current signal level (only for airmax devices), for example -55 dBm.",
          "example": "-55"
        },
        "signalMax": {
          "type": "number",
          "description": "Theoretical max local signal level.",
          "example": "-55"
        },
        "remoteSignalMax": {
          "type": "number",
          "description": "Theoretical max remote signal level.",
          "example": "-55"
        },
        "stationsCount": {
          "type": "number",
          "description": "Count of stations (only for airmax and aircube)."
        },
        "linkStationsCount": {
          "type": "number",
          "description": "Count of stations monitoring in this link (only for airMax, airFiber, Wave and aircube)."
        },
        "linkActiveStationsCount": {
          "type": "number",
          "description": "Count of active stations (only for airMax, airFiber, Wave and aircube)."
        },
        "status": {
          "type": "string",
          "description": "Read-only value generated by UISP."
        },
        "keyExchangeStatus": {
          "type": "string",
          "enum": [
            "pending",
            "complete"
          ]
        },
        "temperature": {
          "type": "number"
        },
        "uptime": {
          "type": "number",
          "description": "Uptime in seconds."
        },
        "serviceUptime": {
          "type": "number"
        },
        "serviceTime": {
          "type": "number"
        },
        "voltage": {
          "type": "number",
          "description": "System input voltage in V."
        },
        "linkScore": {
          "$ref": "#/x-alt-definitions/linkScore"
        },
        "outageScore": {
          "type": "number"
        },
        "linkOutageScore": {
          "type": "number"
        },
        "downlinkCapacity": {
          "type": "integer"
        },
        "uplinkCapacity": {
          "type": "integer"
        },
        "totalCapacity": {
          "type": "integer"
        },
        "theoreticalTotalCapacity": {
          "type": "integer"
        },
        "theoreticalUplinkCapacity": {
          "type": "integer"
        },
        "theoreticalDownlinkCapacity": {
          "type": "integer"
        },
        "antenna": {
          "$ref": "#/x-alt-definitions/antenna"
        },
        "channelWidth": {
          "type": "number"
        },
        "transmitPower": {
          "type": "number"
        },
        "wirelessMode": {
          "type": "string",
          "enum": [
            "ap",
            "ap-ptp",
            "ap-ptmp",
            "ap-ptmp-airmax",
            "ap-ptmp-airmax-mixed",
            "ap-ptmp-airmax-ac",
            "sta",
            "sta-ptp",
            "sta-ptmp",
            "aprepeater",
            "repeater",
            "mesh"
          ]
        },
        "wirelessActiveInterfaceIds": {
          "$ref": "#/x-alt-definitions/wirelessActiveInterfaceIds"
        },
        "mainInterfaceSpeed": {
          "$ref": "#/x-alt-definitions/Main%20lan%20interface%20speed"
        }
      }
    },
    "prerelease1": {
      "type": "array",
      "items": {
        "type": "string",
        "example": "alpha",
        "x-alternatives": [
          {
            "type": "string",
            "example": "alpha"
          },
          {
            "type": "number",
            "example": 1
          }
        ]
      }
    },
    "firmware": {
      "type": "object",
      "properties": {
        "major": {
          "type": "number",
          "example": 1
        },
        "minor": {
          "type": "number",
          "example": 10
        },
        "patch": {
          "type": "number",
          "example": 8
        },
        "prerelease": {
          "$ref": "#/x-alt-definitions/prerelease1"
        },
        "order": {
          "type": "string",
          "example": "65546.8.0"
        },
        "upgradeRecommendedToVersion": {
          "type": "string"
        }
      },
      "required": [
        "major",
        "minor",
        "patch"
      ]
    },
    "DeviceUpgrade": {
      "type": "object",
      "properties": {
        "firmware": {
          "$ref": "#/x-alt-definitions/firmware"
        },
        "firmwareVersion": {
          "type": "string"
        },
        "progress": {
          "type": "number"
        },
        "status": {
          "type": "string"
        },
        "upgradeInMaintenanceWindow": {
          "type": "boolean",
          "description": "Schedule upgrade over maintenance window."
        }
      },
      "required": [
        "firmware",
        "firmwareVersion",
        "progress",
        "status"
      ]
    },
    "DeviceLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "example": 49.8345584421122,
          "minimum": -90,
          "maximum": 90
        },
        "longitude": {
          "type": "number",
          "example": 13.46358,
          "minimum": -180,
          "maximum": 180
        },
        "altitude": {
          "type": "number",
          "description": "Meters above the ground.",
          "example": 240
        },
        "elevation": {
          "type": "number",
          "description": "Meters above the sea level.",
          "example": 20
        },
        "heading": {
          "type": "number",
          "description": "\n    Value in degrees. The value is based on map, e.g. without magnetic declination.\n    Ignored on udpate when magneticHeading is present. North is 0 degrees, East is 90, South is 180, West is 270.\n  ",
          "example": 88
        },
        "magneticHeading": {
          "type": "number",
          "description": "\n    Value in degrees. Compass heading (magnetic north).\n    It’s what you’re changing when you spin the dish around on a mast.\n    North is 0 degrees, East is 90, South is 180, West is 270.\n  ",
          "example": 0
        },
        "tilt": {
          "type": "number",
          "description": "Tilt angle in degrees.",
          "example": 20,
          "minimum": -180,
          "maximum": 180
        },
        "roll": {
          "type": "number",
          "description": "Rotation angle in degrees.",
          "example": 0,
          "minimum": -180,
          "maximum": 180
        }
      },
      "required": [
        "latitude",
        "longitude",
        "altitude",
        "elevation",
        "magneticHeading",
        "tilt",
        "roll"
      ]
    },
    "DeviceUplinkDevice": {
      "type": "object",
      "properties": {
        "identification": {
          "$ref": "#/x-alt-definitions/DeviceIdentification"
        }
      }
    },
    "configuration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "example": "applied",
          "enum": [
            "applying",
            "applied"
          ]
        },
        "hash": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "Model6": {
      "type": "object",
      "properties": {
        "cidr": {
          "type": "string",
          "example": "192.168.1.100/24",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "origin": {
          "type": "string",
          "example": "dhcp",
          "enum": [
            "dhcp",
            "slaac",
            "link-local",
            "static",
            "ppp"
          ]
        },
        "type": {
          "type": "string",
          "example": "dynamic",
          "enum": [
            "dynamic",
            "static",
            "pppoe",
            "dhcp",
            "dhcpv6"
          ]
        },
        "version": {
          "type": "string",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        }
      },
      "required": [
        "cidr",
        "type"
      ]
    },
    "addresses": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model6"
      }
    },
    "InterfaceIdentification": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Nullable string.",
          "example": "Uplink"
        },
        "displayName": {
          "type": "string",
          "description": "Computed display name from name and description",
          "example": "eth0"
        },
        "mac": {
          "type": "string",
          "example": "fc:ec:da:03:bb:a8",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "connectedMac": {
          "type": "string",
          "example": "fc:ec:da:03:bb:a8",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "macOverride": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Interface name.",
          "example": "eth0"
        },
        "position": {
          "type": "number",
          "description": "Physical port position.",
          "example": 0
        },
        "type": {
          "type": "string",
          "example": "eth"
        }
      }
    },
    "ports": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "stp": {
      "type": "object",
      "properties": {
        "edgePort": {
          "type": "string",
          "enum": [
            "auto",
            "enable",
            "disable"
          ]
        },
        "enabled": {
          "type": "boolean"
        },
        "pathCost": {
          "type": "number"
        },
        "state": {
          "type": "string",
          "enum": [
            "disabled",
            "discarding",
            "listening",
            "learning",
            "forwarding"
          ]
        },
        "portPriority": {
          "type": "number"
        }
      }
    },
    "lag": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string"
        },
        "vlanNative": {
          "type": "number"
        },
        "includeVlans": {
          "type": "string"
        },
        "ports": {
          "$ref": "#/x-alt-definitions/ports"
        },
        "loadBalance": {
          "type": "string"
        },
        "linkTrap": {
          "type": "boolean"
        },
        "dhcpSnooping": {
          "type": "boolean"
        },
        "static": {
          "type": "boolean"
        },
        "stp": {
          "$ref": "#/x-alt-definitions/stp"
        }
      }
    },
    "Model7": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "key": {
          "type": "string"
        }
      }
    },
    "authKeysMD5": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model7"
      }
    },
    "ospfConfig": {
      "type": "object",
      "properties": {
        "auth": {
          "type": "string"
        },
        "authKey": {
          "type": "string"
        },
        "authKeysMD5": {
          "$ref": "#/x-alt-definitions/authKeysMD5"
        },
        "cost": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "InterfaceOspf": {
      "type": "object",
      "properties": {
        "ospfCapable": {
          "type": "boolean",
          "example": true
        },
        "ospfConfig": {
          "$ref": "#/x-alt-definitions/ospfConfig"
        }
      },
      "required": [
        "ospfConfig"
      ]
    },
    "capacities": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          {
            "override": true
          },
          "off"
        ]
      }
    },
    "InterfacePoe": {
      "type": "object",
      "properties": {
        "capacities": {
          "$ref": "#/x-alt-definitions/capacities"
        },
        "output": {
          "type": "string",
          "example": "off",
          "enum": [
            "off",
            "active",
            "24v",
            "27v",
            "48v",
            "54v",
            "24v-4pair",
            "27v-4pair",
            "54v-4pair",
            "pthru"
          ]
        }
      }
    },
    "capacities1": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          {
            "override": true
          },
          "auto"
        ]
      }
    },
    "InterfaceSpeeds": {
      "type": "object",
      "properties": {
        "capacities": {
          "$ref": "#/x-alt-definitions/capacities1"
        },
        "speed": {
          "type": "string",
          "example": "auto",
          "pattern": "^autodetect|auto|\\d+-(half|full)$"
        }
      }
    },
    "loadBalanceValues": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "capabilities": {
      "type": "object",
      "properties": {
        "supportAutoEdge": {
          "type": "boolean"
        },
        "supportCableTest": {
          "type": "boolean"
        },
        "supportReset": {
          "type": "boolean"
        },
        "loadBalanceValues": {
          "$ref": "#/x-alt-definitions/loadBalanceValues"
        }
      }
    },
    "InterfaceStatistics": {
      "type": "object",
      "properties": {
        "dropped": {
          "type": "number",
          "example": 0
        },
        "errors": {
          "type": "number",
          "example": 0
        },
        "rxbytes": {
          "type": "number",
          "example": 7487858302
        },
        "rxrate": {
          "type": "number",
          "example": 3440
        },
        "txbytes": {
          "type": "number",
          "example": 368737600
        },
        "txrate": {
          "type": "number",
          "example": 736
        },
        "poePower": {
          "type": "number",
          "example": 736
        },
        "rxMcs": {
          "type": "number",
          "example": 1
        },
        "txMcs": {
          "type": "number",
          "example": 1
        }
      }
    },
    "InterfaceStatus": {
      "type": "object",
      "properties": {
        "currentSpeed": {
          "type": "string",
          "example": "1000-full"
        },
        "description": {
          "type": "string",
          "example": "1 Gbps - Full Duplex"
        },
        "plugged": {
          "type": "boolean",
          "example": true
        },
        "speed": {
          "type": "string",
          "example": "auto"
        },
        "status": {
          "type": "string",
          "example": "active"
        }
      }
    },
    "vid": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Model8": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "pvid": {
          "type": "string"
        },
        "vid": {
          "$ref": "#/x-alt-definitions/vid"
        },
        "displayName": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "hasAddress": {
          "type": "boolean"
        },
        "hasSubInterface": {
          "type": "boolean"
        },
        "isBridged": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "enabled",
        "hasAddress",
        "hasSubInterface",
        "isBridged"
      ]
    },
    "ports1": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model8"
      }
    },
    "switch": {
      "type": "object",
      "properties": {
        "ports": {
          "$ref": "#/x-alt-definitions/ports1"
        },
        "vlanCapable": {
          "type": "boolean"
        },
        "vlanEnabled": {
          "type": "boolean"
        }
      },
      "required": [
        "ports",
        "vlanCapable",
        "vlanEnabled"
      ]
    },
    "switchedPorts": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model8"
      }
    },
    "vlan": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "egressQoSMapExternal": {
          "type": "integer",
          "minimum": 0,
          "maximum": 7
        },
        "parent": {
          "type": "string"
        }
      }
    },
    "pingWatchdog": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "enabled": {
          "type": "boolean"
        },
        "failureCount": {
          "type": "number"
        },
        "interval": {
          "type": "number"
        },
        "offDelay": {
          "type": "number"
        },
        "startDelay": {
          "type": "number"
        }
      }
    },
    "speedLimit": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "rx": {
          "type": "number",
          "minimum": 0,
          "maximum": 1000000
        },
        "tx": {
          "type": "number",
          "minimum": 0,
          "maximum": 1000000
        }
      }
    },
    "port": {
      "type": "object",
      "description": "Properties specific for ports on ES and TS devices.",
      "properties": {
        "dhcpSnooping": {
          "type": "boolean"
        },
        "flowControl": {
          "type": "boolean"
        },
        "isolated": {
          "type": "boolean"
        },
        "pingWatchdog": {
          "$ref": "#/x-alt-definitions/pingWatchdog"
        },
        "speedLimit": {
          "$ref": "#/x-alt-definitions/speedLimit"
        },
        "routed": {
          "type": "boolean"
        },
        "stp": {
          "$ref": "#/x-alt-definitions/stp"
        }
      }
    },
    "dfsLockouts1": {
      "type": "array",
      "description": "DFS lockout frequencies",
      "example": [
        [5440, 5460]
      ],
      "items": {
        "type": "number"
      }
    },
    "antenna1": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "gain": {
          "type": "number"
        },
        "cableLoss": {
          "type": "number"
        }
      }
    },
    "wireless": {
      "type": "object",
      "properties": {
        "ssid": {
          "type": "string",
          "description": "SSID",
          "example": "ubnt.com"
        },
        "frequency": {
          "type": "number",
          "description": "Frequency in MHz, on which radio is listening.",
          "example": 5400,
          "minimum": 0
        },
        "frequencyBand": {
          "type": "string",
          "enum": [
            "2.4GHz",
            "3GHz",
            "4GHz",
            "5GHz",
            "11GHz",
            "24GHz",
            "60GHz"
          ]
        },
        "channelWidth": {
          "type": "integer",
          "description": "Channel width in MHz radio is operating on.",
          "example": 40,
          "minimum": 0
        },
        "dfsTimeRemaining": {
          "type": "number",
          "description": "DFS wait time remaining.",
          "example": 0
        },
        "dfsTimeTotal": {
          "type": "number",
          "description": "DFS expected total wait time.",
          "example": 0
        },
        "dfsLockouts": {
          "$ref": "#/x-alt-definitions/dfsLockouts1"
        },
        "key": {
          "type": "string",
          "description": "Pre shared key"
        },
        "security": {
          "type": "string",
          "enum": [
            "wep",
            "wpa",
            "wpa-psk",
            "wpa2",
            "wpa2-eap",
            "enabled",
            "none"
          ]
        },
        "transmitPower": {
          "type": "number"
        },
        "transmitEirp": {
          "type": "number"
        },
        "frameLength": {
          "type": "number",
          "minimum": 0
        },
        "dlRatio": {
          "type": "integer",
          "description": "Downlink ratio in percentage. To calculate Uplink percentage substract DlRatio out of a hundered.",
          "example": 67
        },
        "noiseFloor": {
          "type": "integer",
          "description": "Wireless noise level in dBm",
          "example": -84
        },
        "minTxPower": {
          "type": "number"
        },
        "maxTxPower": {
          "type": "number"
        },
        "waveAiEnabled": {
          "type": "boolean",
          "example": true
        },
        "serviceUptime": {
          "type": "number"
        },
        "antenna": {
          "$ref": "#/x-alt-definitions/antenna1"
        }
      },
      "required": [
        "ssid",
        "frequency",
        "channelWidth",
        "dfsTimeRemaining",
        "dfsTimeTotal",
        "dfsLockouts",
        "key",
        "security",
        "frameLength",
        "dlRatio",
        "noiseFloor"
      ]
    },
    "DeviceIdentification1": {
      "type": "object",
      "description": "Read-only identification attributes.",
      "properties": {
        "authorized": {
          "type": "boolean",
          "description": "Device is added to UISP."
        },
        "category": {
          "type": "string",
          "enum": [
            "optical",
            "wired",
            "wireless",
            "accessories"
          ]
        },
        "displayName": {
          "type": "string",
          "description": "UISP device alias or real name."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "In SemVer format."
        },
        "udapiVersion": {
          "type": "string",
          "description": "In string format."
        },
        "bridgeVersion": {
          "type": "string",
          "description": "In string format."
        },
        "subsystemId": {
          "type": "string",
          "description": "Device subsystem ID in string format."
        },
        "hostname": {
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Device ID.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ip": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Full names, for example UISP Fiber OLT."
        },
        "systemName": {
          "type": "string",
          "description": "OS",
          "example": "Linux"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "vendorName": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "name": {
          "type": "string"
        },
        "platformId": {
          "type": "string",
          "description": "Short name, for example e600."
        },
        "platformName": {
          "type": "string",
          "enum": [
            "UISP Fiber NanoG",
            "UISP Fiber Loco",
            "UISP Fiber Wifi",
            "UISP Fiber Instant",
            "UISP Fiber Wifi6",
            "UISP Fiber XG",
            "UISP Fiber XGS",
            "UISP Router LXC",
            "UISPRPro",
            "UISPConsole",
            "UISPR",
            "UISPRPlus",
            "UISPS",
            "UISPSPlus",
            "UISPSPro",
            "UNMSS",
            "UISPLTE",
            "UISPLTEEU",
            "UISPLTEUS",
            "UISPP",
            "UISPFiberOltXgs",
            "e50",
            "e100",
            "e200",
            "e300",
            "e600",
            "e1000",
            "u50",
            "u100",
            "u200",
            "u300",
            "u1000",
            "ESWH",
            "ESGH",
            "ES",
            "ESX",
            "EP",
            "EPX",
            "SW",
            "ACB",
            "AFI",
            "WA",
            "2WA",
            "XC",
            "2XC",
            "XW",
            "XM",
            "TI",
            "GBE",
            "RAX",
            "AirGW",
            "AirGWP",
            "AF",
            "AF02",
            "AF06",
            "AF07",
            "AF08",
            "AF09",
            "AF60",
            "af5xhd",
            "afltu",
            "afltu-ptp",
            "lturocket",
            "GP",
            "XR",
            "GMP",
            "MGMP",
            "GMC",
            "SunMax",
            "UX",
            "UNKNOWN"
          ]
        },
        "role": {
          "type": "string",
          "enum": [
            "ap",
            "gateway",
            "gpon",
            "convertor",
            "other",
            "ptp",
            "router",
            "server",
            "station",
            "switch",
            "ups",
            "wireless",
            "wired",
            "homeWiFi",
            "wirelessDevice"
          ]
        },
        "serialNumber": {
          "type": "string"
        },
        "site": {
          "$ref": "#/x-alt-definitions/site"
        },
        "started": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "type": "string",
          "description": "Status of the station.",
          "example": "active",
          "enum": [
            "active",
            "connecting",
            "discovered",
            "inactive",
            "disabled",
            "disconnected",
            "unauthorized",
            "proposed",
            "unknown",
            "unplaced",
            "custom",
            "maintenance",
            "incompatible",
            "unmonitored",
            "unassigned",
            "misconfigured",
            "preregistration"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "onu",
            "olt",
            "uispp",
            "uispr",
            "uisps",
            "uispLte",
            "erouter",
            "eswitch",
            "epower",
            "airCube",
            "airMax",
            "airFiber",
            "toughSwitch",
            "solarBeam",
            "wave",
            "blackBox",
            "uisprlxc",
            "express"
          ]
        },
        "wanInterfaceId": {
          "type": "string"
        },
        "updated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "id"
      ]
    },
    "rxChain": {
      "type": "array",
      "description": "Wireless signal level in dBm for each antenna chain.",
      "example": [
        [30, 40]
      ],
      "items": {
        "type": "integer"
      }
    },
    "rxChainIdeal": {
      "type": "array",
      "description": "Wireless ideal signal level in dBm for each antenna chain.",
      "example": [
        [30, 40]
      ],
      "items": {
        "type": "integer"
      }
    },
    "txChain": {
      "type": "array",
      "description": "Wireless signal level in dBm for each antenna chain.",
      "example": [
        [30, 40]
      ],
      "items": {
        "type": "integer"
      }
    },
    "txChainIdeal": {
      "type": "array",
      "description": "Wireless ideal signal level in dBm for each antenna chain.",
      "example": [
        [30, 40]
      ],
      "items": {
        "type": "integer"
      }
    },
    "statistics": {
      "type": "object",
      "properties": {
        "linkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "score": {
          "type": "number",
          "description": "Score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "scoreMax": {
          "type": "number",
          "description": "Score max 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "airTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "airTimeScore": {
          "type": "number",
          "description": "Score airTime 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "uplinkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "downlinkScore": {
          "type": "number",
          "description": "Result score 0 - 1, for example 0.33 is 33%.",
          "minimum": 0,
          "maximum": 1
        },
        "linkScoreHint": {
          "type": "string",
          "description": "Hint for better score."
        },
        "theoreticalTotalCapacity": {
          "type": "integer",
          "description": "Theoretical total capacity."
        },
        "theoreticalDownlinkCapacity": {
          "type": "integer",
          "description": "Theoretical downlink capacity."
        },
        "theoreticalUplinkCapacity": {
          "type": "integer",
          "description": "Theoretical uplink capacity."
        }
      }
    },
    "DeviceFirmware2": {
      "type": "object",
      "properties": {
        "compatible": {
          "type": "boolean",
          "description": "If firmware is compatible with UISP"
        },
        "current": {
          "type": "string",
          "description": "Current firmware version"
        },
        "latest": {
          "type": "string",
          "description": "Latest known firmware version"
        },
        "latestOnCurrentMajorVersion": {
          "type": "string",
          "description": "Latest known firmware version on current major version"
        },
        "latestOver": {
          "type": "string",
          "description": "Upgrade this firmware version as first if target\n  firmware is higher than latestOver. (AirCube must be updated over 2.8.0 fw)"
        },
        "semver": {
          "$ref": "#/x-alt-definitions/semver"
        },
        "upgradeRecommendedToVersion": {
          "type": "string",
          "description": "Recommended firmware version to upgrade to."
        },
        "prospective": {
          "type": "string",
          "description": "Latest firmware version, even if not supported by UISP yet"
        }
      },
      "required": [
        "current",
        "latest",
        "latestOnCurrentMajorVersion",
        "latestOver",
        "upgradeRecommendedToVersion",
        "prospective"
      ]
    },
    "Station": {
      "type": "object",
      "properties": {
        "connected": {
          "type": "boolean"
        },
        "connectionTime": {
          "type": "integer"
        },
        "deviceIdentification": {
          "$ref": "#/x-alt-definitions/DeviceIdentification1"
        },
        "distance": {
          "type": "integer",
          "description": "Distance in meters.",
          "example": 100
        },
        "downlinkCapacity": {
          "type": "integer"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "latency": {
          "type": "integer",
          "description": "Latency in milliseconds.",
          "example": 10
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "interfaceId": {
          "type": "string",
          "description": "Interface name, where the station is connected.",
          "example": "wlan0"
        },
        "name": {
          "type": "string",
          "example": "lab-ISM5-1"
        },
        "model": {
          "type": "string",
          "description": "Short names, for example UF-OLT.",
          "enum": [
            "UF-Nano",
            "UF-Loco",
            "UF-Wifi",
            "UF-Instant",
            "UF-Wifi6",
            "UISP-FIBER-XG",
            "UISP-FIBER-XGS",
            "UF-OLT",
            "UF-OLT4",
            "UISP-FIBER-OLT-XGS",
            "UISP-R-LXC-24",
            "UISP-R-Pro",
            "UISP-Console",
            "UISP-R-Lite",
            "UISP-R",
            "UISP-R-Plus",
            "UNMS-S-Lite",
            "UISP-S-Lite",
            "UISP-S-Pro",
            "UISP-S",
            "UISP-S-Plus",
            "UISP-LTE",
            "UISP-LTE-EU",
            "UISP-LTE-US",
            "ER-X",
            "ER-X-SFP",
            "ERLite-3",
            "ERPoe-5",
            "ERPro-8",
            "ER-8",
            "ER-8-XG",
            "ER-4",
            "ER-6P",
            "ER-12",
            "ER-12P",
            "ER-10X",
            "EP-R8",
            "EP-R6",
            "EP-S16",
            "ES-12F",
            "ES-16-150W",
            "ES-24-250W",
            "ES-24-500W",
            "ES-24-Lite",
            "ES-48-500W",
            "ES-48-750W",
            "ES-48-Lite",
            "ES-8-150W",
            "ES-16-XG",
            "ES-10XP",
            "ES-10X",
            "ES-18X",
            "ES-26X",
            "EP-54V-150W",
            "EP-24V-72W",
            "EP-54V-72W",
            "UISP-P",
            "UISP-P-Pro",
            "TSW-PoE",
            "TSW-PoE PRO",
            "ACB-AC",
            "ACB-ISP",
            "ACB-LOCO",
            "AF11FX",
            "AF24",
            "AF24HD",
            "AF2X",
            "AF3X",
            "AF4X",
            "AF5",
            "AF5U",
            "AF5X",
            "AF-5XHD",
            "AF-LTU",
            "LTU-Lite",
            "AF-LTU5",
            "LTU-Rocket",
            "LTU-LR",
            "LTU-XR",
            "LTU-Instant",
            "AF60",
            "AF60-LR",
            "AF60XG",
            "AF60HD",
            "AF60-XR",
            "Wave-AP",
            "WaveAP",
            "Wave-LR",
            "Wave-Nano",
            "Wave-AP-Micro",
            "Wave-Pro",
            "Wave-Pico",
            "GBE-LR",
            "GBE",
            "GBE-Plus",
            "GBE-AP",
            "R2N",
            "R2T",
            "R5N",
            "R6N",
            "R36-GPS",
            "RM3-GPS",
            "R2N-GPS",
            "R5N-GPS",
            "R9N-GPS",
            "R5T-GPS",
            "RM3",
            "R36",
            "R9N",
            "N2N",
            "N5N",
            "N6N",
            "NS3",
            "N36",
            "N9N",
            "N9S",
            "LM2",
            "LM5",
            "B2N",
            "B2T",
            "B5N",
            "B5T",
            "BAC",
            "AG2",
            "AG2-HP",
            "AG5",
            "AG5-HP",
            "p2N",
            "p5N",
            "M25",
            "P2B-400",
            "P5B-300",
            "P5B-300-ISO",
            "P5B-400",
            "P5B-400-ISO",
            "P5B-620",
            "LB5-120",
            "LB5",
            "N5B",
            "N5B-16",
            "N5B-19",
            "N5B-300",
            "N5B-400",
            "N5B-Client",
            "N2B",
            "N2B-13",
            "N2B-400",
            "PAP",
            "LAP-HP",
            "LAP",
            "AGW",
            "AGW-LR",
            "AGW-Pro",
            "AGW-Installer",
            "PB5",
            "PB3",
            "P36",
            "PBM10",
            "NB5",
            "NB2",
            "NB3",
            "B36",
            "NB9",
            "SM5",
            "WM5",
            "IS-M5",
            "Loco5AC",
            "NS-5AC",
            "R5AC-PTMP",
            "R5AC-PTP",
            "R5AC-Lite",
            "R5AC-PRISM",
            "R2AC-Prism",
            "R2AC-Gen2",
            "RP-5AC-Gen2",
            "NBE-2AC-13",
            "NBE-5AC-16",
            "NBE-5AC-19",
            "NBE-5AC-Gen2",
            "PBE-5AC-300",
            "PBE-5AC-300-ISO",
            "PBE-5AC-400",
            "PBE-5AC-400-ISO",
            "PBE-5AC-500",
            "PBE-5AC-500-ISO",
            "PBE-5AC-620",
            "PBE-5AC-620-ISO",
            "PBE-2AC-400",
            "PBE-2AC-400-ISO",
            "PBE-5AC-X-Gen2",
            "PBE-5AC-Gen2",
            "PBE-5AC-ISO-Gen2",
            "PBE-5AC-400-ISO-Gen2",
            "LBE-5AC-16-120",
            "LAP-120",
            "LBE-5AC-23",
            "LBE-5AC-Gen2",
            "LBE-5AC-LR",
            "LBE-5AC-XR",
            "LBE-AX",
            "LAP-GPS",
            "IS-5AC",
            "PS-5AC",
            "PRI-AX",
            "PAX-OM",
            "SolarSwitch",
            "SolarPoint",
            "BulletAC-IP67",
            "B-DB-AC",
            "AFi-ALN-R",
            "UX",
            "UNKNOWN"
          ]
        },
        "modelName": {
          "type": "string",
          "description": "Custom model name",
          "example": "Thinkpad E15"
        },
        "systemName": {
          "type": "string",
          "description": "Custom OS name",
          "example": "Linux"
        },
        "radio": {
          "type": "string",
          "enum": [
            "2.4GHz",
            "3GHz",
            "4GHz",
            "5GHz",
            "11GHz",
            "24GHz",
            "60GHz"
          ]
        },
        "rxBytes": {
          "type": "integer",
          "description": "Received bytes.",
          "example": 926000
        },
        "rxMcs": {
          "type": "string",
          "description": "Local current MCS.",
          "example": 8
        },
        "rxMcsIndex": {
          "type": "string",
          "description": "Local MCS index.",
          "example": 8
        },
        "rxMcsIdeal": {
          "type": "string",
          "description": "Local ideal MCS.",
          "example": 8
        },
        "rxMcsIndexIdeal": {
          "type": "string",
          "description": "Local ideal MCS index.",
          "example": 8
        },
        "rxModulation": {
          "type": "string",
          "description": "Local Rx data rate.",
          "example": 8
        },
        "rxRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 456
        },
        "rxSignal": {
          "type": "integer",
          "description": "Local Signal in dBm.",
          "example": -44
        },
        "rxSignalIdeal": {
          "type": "integer",
          "description": "Local Expected Signal in dBm.",
          "example": -39
        },
        "rxChain": {
          "$ref": "#/x-alt-definitions/rxChain"
        },
        "rxChainIdeal": {
          "$ref": "#/x-alt-definitions/rxChainIdeal"
        },
        "rxChainMask": {
          "type": "integer",
          "example": 2
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "txBytes": {
          "type": "integer",
          "description": "Transmitted/Sent bytes.",
          "example": 436000
        },
        "txMcs": {
          "type": "string",
          "description": "Remote current MCS.",
          "example": 8
        },
        "txMcsIndex": {
          "type": "string",
          "description": "Remote MCS index.",
          "example": 8
        },
        "txMcsIdeal": {
          "type": "string",
          "description": "Remote ideal MCS.",
          "example": 8
        },
        "txMcsIndexIdeal": {
          "type": "string",
          "description": "Remote ideal MCS index.",
          "example": 8
        },
        "txModulation": {
          "type": "string",
          "description": "Remote Rx data rate.",
          "example": 8
        },
        "txRate": {
          "type": "integer",
          "description": "Current download speed in bps.",
          "example": 325
        },
        "txSignal": {
          "type": "integer",
          "description": "Remote Signal in dBm.",
          "example": -39
        },
        "txSignalIdeal": {
          "type": "integer",
          "description": "Remote Expected Signal in dBm.",
          "example": -39
        },
        "txChain": {
          "$ref": "#/x-alt-definitions/txChain"
        },
        "txChainIdeal": {
          "$ref": "#/x-alt-definitions/txChainIdeal"
        },
        "txChainMask": {
          "type": "integer",
          "example": 2
        },
        "noiseFloor": {
          "type": "integer",
          "description": "Wireless noise level in dBm",
          "example": -84
        },
        "uplinkCapacity": {
          "type": "integer"
        },
        "uptime": {
          "type": "integer"
        },
        "vendor": {
          "type": "string",
          "example": "Ubiquiti Networks"
        },
        "vendorName": {
          "type": "string",
          "description": "Custom vendor name",
          "example": "Ubiquiti Networks"
        },
        "statistics": {
          "$ref": "#/x-alt-definitions/statistics"
        },
        "firmware": {
          "$ref": "#/x-alt-definitions/DeviceFirmware2"
        },
        "downlinkAirTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "uplinkAirTime": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        }
      },
      "required": [
        "rxChain",
        "rxChainMask",
        "txChain",
        "txChainMask",
        "noiseFloor"
      ]
    },
    "stations": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Station"
      }
    },
    "DeviceInterfaceSchema": {
      "type": "object",
      "properties": {
        "addresses": {
          "$ref": "#/x-alt-definitions/addresses"
        },
        "bridge": {
          "type": "string"
        },
        "canDisplayStatistics": {
          "type": "boolean",
          "example": true
        },
        "enabled": {
          "type": "boolean",
          "example": true
        },
        "identification": {
          "$ref": "#/x-alt-definitions/InterfaceIdentification"
        },
        "isSwitchedPort": {
          "type": "boolean"
        },
        "isBridgedPort": {
          "type": "boolean"
        },
        "lag": {
          "$ref": "#/x-alt-definitions/lag"
        },
        "mtu": {
          "type": "string"
        },
        "mssClamping": {
          "type": "boolean",
          "description": "Set to true to enable MSS clamping",
          "example": true
        },
        "ospf": {
          "$ref": "#/x-alt-definitions/InterfaceOspf"
        },
        "poe": {
          "$ref": "#/x-alt-definitions/InterfacePoe"
        },
        "speeds": {
          "$ref": "#/x-alt-definitions/InterfaceSpeeds"
        },
        "pppoe": {
          "type": "string"
        },
        "proxyARP": {
          "type": "string"
        },
        "sfp": {
          "type": "string"
        },
        "speed": {
          "type": "string",
          "example": "auto",
          "pattern": "^autodetect|auto|\\d+-(half|full)$"
        },
        "capabilities": {
          "$ref": "#/x-alt-definitions/capabilities"
        },
        "statistics": {
          "$ref": "#/x-alt-definitions/InterfaceStatistics"
        },
        "status": {
          "$ref": "#/x-alt-definitions/InterfaceStatus"
        },
        "switch": {
          "$ref": "#/x-alt-definitions/switch"
        },
        "switchedPorts": {
          "$ref": "#/x-alt-definitions/switchedPorts"
        },
        "visible": {
          "type": "boolean",
          "example": true
        },
        "vlan": {
          "$ref": "#/x-alt-definitions/vlan"
        },
        "port": {
          "$ref": "#/x-alt-definitions/port"
        },
        "dhcp6PDRequestSize": {
          "type": "number",
          "description": "Enables requesting of DHCPv6 Prefix Delegation.",
          "minimum": 48,
          "maximum": 64
        },
        "dhcp6PDUseFromInterface": {
          "type": "string",
          "description": "Assign IPv6 subnet to this interface."
        },
        "dhcp6PDUseSize": {
          "type": "number",
          "description": "Length of the subnet of the prefix assigned.",
          "minimum": 48,
          "maximum": 64
        },
        "wireless": {
          "$ref": "#/x-alt-definitions/wireless"
        },
        "stations": {
          "$ref": "#/x-alt-definitions/stations"
        }
      },
      "required": [
        "identification"
      ]
    },
    "DeviceInterfaceListSchema": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/DeviceInterfaceSchema"
      }
    },
    "DeviceStatusOverview": {
      "type": "object",
      "properties": {
        "ux": {
          "$ref": "#/x-alt-definitions/ux"
        },
        "airmax": {
          "$ref": "#/x-alt-definitions/%5BDEPRECATED%5DDeviceAirmax%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "airfiber": {
          "$ref": "#/x-alt-definitions/%5BDEPRECATED%5DDeviceAirFiber%20-%20partially%20moved%20properties%20to%20interface%20or%20station."
        },
        "aircube": {
          "$ref": "#/x-alt-definitions/DeviceAirCube"
        },
        "attributes": {
          "$ref": "#/x-alt-definitions/DeviceAttributes"
        },
        "discovery": {
          "$ref": "#/x-alt-definitions/discovery"
        },
        "features": {
          "$ref": "#/x-alt-definitions/features"
        },
        "enabled": {
          "type": "boolean"
        },
        "eswitch": {
          "$ref": "#/x-alt-definitions/eswitch"
        },
        "uisps": {
          "$ref": "#/x-alt-definitions/uisps"
        },
        "firmware": {
          "$ref": "#/x-alt-definitions/DeviceFirmware1"
        },
        "identification": {
          "$ref": "#/x-alt-definitions/DeviceIdentification"
        },
        "ipAddress": {
          "type": "string",
          "description": "Custom IP address in IPv4 or IPv6 format.",
          "example": "192.168.1.22",
          "x-format": {
            "ip": {
              "cidr": "optional"
            }
          }
        },
        "ipAddressList": {
          "$ref": "#/x-alt-definitions/ipAddressList"
        },
        "latestBackup": {
          "$ref": "#/x-alt-definitions/latestBackup"
        },
        "meta": {
          "$ref": "#/x-alt-definitions/DeviceMeta"
        },
        "mode": {
          "type": "string"
        },
        "overview": {
          "$ref": "#/x-alt-definitions/DeviceOverview"
        },
        "upgrade": {
          "$ref": "#/x-alt-definitions/DeviceUpgrade"
        },
        "location": {
          "$ref": "#/x-alt-definitions/DeviceLocation"
        },
        "uplinkDevice": {
          "$ref": "#/x-alt-definitions/DeviceUplinkDevice"
        },
        "configuration": {
          "$ref": "#/x-alt-definitions/configuration"
        },
        "interfaces": {
          "$ref": "#/x-alt-definitions/DeviceInterfaceListSchema"
        }
      },
      "required": [
        "enabled",
        "ipAddress"
      ]
    },
    "SearchResultMatch": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string",
          "description": "Identification of the matched string.",
          "example": "interfaces.addresses.cidr"
        },
        "field": {
          "type": "string",
          "description": "Where in the \"data\" is the matched string.",
          "example": "interfaces.2.addresses.7.cidr"
        },
        "value": {
          "type": "string",
          "description": "String that contains the match.",
          "example": "667 Acboa road, Pimprehills"
        },
        "position": {
          "type": "number",
          "description": "Position in the \"value\" where the match starts.",
          "example": 4
        },
        "length": {
          "type": "number",
          "description": "Length of the matched string.",
          "example": 3
        }
      }
    },
    "SearchResultMatches": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/SearchResultMatch"
      }
    },
    "Model9": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "device",
          "enum": [
            "device"
          ]
        },
        "data": {
          "$ref": "#/x-alt-definitions/DeviceStatusOverview"
        },
        "matches": {
          "$ref": "#/x-alt-definitions/SearchResultMatches"
        }
      },
      "required": [
        "type",
        "data",
        "matches"
      ]
    },
    "SiteIdentificationDetail": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": [
            "site",
            "endpoint"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        },
        "parent": {
          "$ref": "#/x-alt-definitions/parent"
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status"
      ]
    },
    "SiteDescriptionContact": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the contact person.",
          "example": "John Smith"
        },
        "phone": {
          "type": "string",
          "description": "Phone number of the contact person."
        },
        "email": {
          "type": "string",
          "description": "Email of the contact person.",
          "example": "email@example.com"
        }
      }
    },
    "SiteDescriptionLocation": {
      "type": "object",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "Site latitude.",
          "example": 86.922623,
          "minimum": -180,
          "maximum": 180
        },
        "latitude": {
          "type": "number",
          "description": "Site longitude.",
          "example": 27.986065,
          "minimum": -90,
          "maximum": 90
        }
      },
      "required": [
        "longitude",
        "latitude"
      ]
    },
    "SiteEndpointIdentification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "type": {
          "type": "string",
          "description": "Type of the site.",
          "example": "site",
          "enum": [
            "site",
            "endpoint"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the site.",
          "example": "Mount Everest"
        },
        "status": {
          "type": "string",
          "description": "Status of the site.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the site was last updated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "suspended": {
          "type": "boolean",
          "description": "Whether access to internet is disabled for this site or not.",
          "example": false
        },
        "parentId": {
          "type": "string",
          "description": "Parent siteId.",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        }
      },
      "required": [
        "id",
        "type",
        "name",
        "status",
        "parentId"
      ]
    },
    "SiteEndpointsList": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/SiteEndpointIdentification"
      }
    },
    "ipAddresses": {
      "type": "array",
      "description": "Devices IPs assigned to a site/client site.",
      "items": {
        "type": "string",
        "example": "192.168.10.12",
        "x-format": {
          "ip": {
            "cidr": "optional"
          }
        }
      }
    },
    "SiteDescription": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "description": "Address of the site.",
          "example": "Nepal"
        },
        "note": {
          "type": "string",
          "description": "Any additional site description."
        },
        "contact": {
          "$ref": "#/x-alt-definitions/SiteDescriptionContact"
        },
        "location": {
          "$ref": "#/x-alt-definitions/SiteDescriptionLocation"
        },
        "height": {
          "type": "number",
          "description": "Site structure height.",
          "example": 12
        },
        "elevation": {
          "type": "number",
          "description": "Site elevation without structure height.",
          "example": 8848
        },
        "endpoints": {
          "$ref": "#/x-alt-definitions/SiteEndpointsList"
        },
        "deviceCount": {
          "type": "number",
          "description": "Number of devices in this site.",
          "example": 1
        },
        "deviceOutageCount": {
          "type": "number",
          "description": "Number of devices in this site in outage.",
          "example": 1
        },
        "deviceListStatus": {
          "type": "string",
          "description": "Deprecated. Use site.identification.status instead.",
          "example": "active",
          "enum": [
            "active",
            "disconnected",
            "inactive",
            "unknown"
          ]
        },
        "regulatoryDomain": {
          "type": "string",
          "description": "Location of regulation.",
          "example": "ZW",
          "enum": [
            "XX",
            "XY",
            "XL",
            "XH",
            "XC",
            "AF",
            "AX",
            "AL",
            "DZ",
            "AS",
            "AD",
            "AO",
            "AI",
            "AQ",
            "AG",
            "AR",
            "AM",
            "AW",
            "AU",
            "AT",
            "AZ",
            "BS",
            "BH",
            "BD",
            "BB",
            "BY",
            "BE",
            "BZ",
            "BJ",
            "BM",
            "BT",
            "BO",
            "BQ",
            "BA",
            "BW",
            "BV",
            "BR",
            "IO",
            "BN",
            "BG",
            "BF",
            "BI",
            "CV",
            "KH",
            "CM",
            "CA",
            "KY",
            "CF",
            "TD",
            "CL",
            "CN",
            "CX",
            "CC",
            "CO",
            "KM",
            "CK",
            "CR",
            "CI",
            "HR",
            "CW",
            "CY",
            "CZ",
            "CD",
            "DK",
            "DJ",
            "DM",
            "DO",
            "EC",
            "EG",
            "SV",
            "GQ",
            "ER",
            "EE",
            "SZ",
            "ET",
            "FK",
            "FO",
            "FJ",
            "FI",
            "FR",
            "GF",
            "PF",
            "TF",
            "GA",
            "GM",
            "GE",
            "DE",
            "GH",
            "GI",
            "GR",
            "GL",
            "GD",
            "GP",
            "GU",
            "GT",
            "GG",
            "GN",
            "GW",
            "GY",
            "HT",
            "HM",
            "HN",
            "HK",
            "HU",
            "IS",
            "IN",
            "ID",
            "IQ",
            "IE",
            "IM",
            "IL",
            "IT",
            "JM",
            "JP",
            "JE",
            "JO",
            "KZ",
            "KE",
            "KI",
            "KW",
            "KG",
            "LA",
            "LV",
            "LB",
            "LS",
            "LR",
            "LY",
            "LI",
            "LT",
            "LU",
            "MO",
            "MK",
            "MG",
            "MW",
            "MY",
            "MV",
            "ML",
            "MT",
            "MH",
            "MQ",
            "MR",
            "MU",
            "YT",
            "MX",
            "FM",
            "MD",
            "MC",
            "MN",
            "ME",
            "MS",
            "MA",
            "MZ",
            "MM",
            "NA",
            "NR",
            "NP",
            "NL",
            "NC",
            "NZ",
            "NI",
            "NE",
            "NG",
            "NU",
            "NF",
            "MP",
            "NO",
            "OM",
            "PK",
            "PW",
            "PA",
            "PG",
            "PY",
            "PE",
            "PH",
            "PN",
            "PL",
            "PT",
            "PR",
            "QA",
            "KR",
            "RS",
            "SC",
            "CG",
            "RE",
            "RO",
            "RU",
            "RW",
            "BL",
            "SH",
            "KN",
            "LC",
            "MF",
            "PM",
            "VC",
            "WS",
            "SM",
            "ST",
            "SA",
            "SN",
            "SL",
            "SG",
            "SX",
            "SK",
            "SI",
            "SB",
            "SO",
            "ZA",
            "GS",
            "SS",
            "ES",
            "LK",
            "PS",
            "SR",
            "SJ",
            "SE",
            "CH",
            "TW",
            "TJ",
            "TZ",
            "TH",
            "TL",
            "TG",
            "TK",
            "TO",
            "TT",
            "TN",
            "TR",
            "TM",
            "TC",
            "TV",
            "UG",
            "UA",
            "AE",
            "GB",
            "US",
            "UY",
            "UZ",
            "VU",
            "VA",
            "VE",
            "VN",
            "VG",
            "VI",
            "WF",
            "EH",
            "YE",
            "ZM",
            "ZW"
          ]
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM client bound with this site. Null if no UCRM client is bound to this site.",
          "example": "135"
        },
        "ipAddresses": {
          "$ref": "#/x-alt-definitions/ipAddresses"
        },
        "sla": {
          "type": "number",
          "example": 0.4
        }
      }
    },
    "SiteSpeedReport": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "ispName": {
          "type": "string",
          "example": "Czechia ISP - Ostrava"
        },
        "publicIp": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "forbidden"
            }
          },
          "x-alternatives": [
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            },
            {
              "type": "string",
              "x-format": {
                "ip": {
                  "cidr": "forbidden"
                }
              }
            }
          ]
        },
        "downloadRateBytes": {
          "type": "number",
          "example": 44834803561
        },
        "uploadRateBytes": {
          "type": "number",
          "example": 8385
        },
        "endpoint": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "One of [INTERNET, LOCAL_DEVICE]",
          "example": "INTERNET"
        },
        "serverName": {
          "type": "string",
          "example": "uisp.com"
        },
        "downloadSpeedBytes": {
          "type": "number",
          "example": 125000000
        },
        "uploadSpeedBytes": {
          "type": "number",
          "example": 625000000
        },
        "createdAt": {
          "type": "string",
          "format": "date"
        },
        "platform": {
          "type": "string",
          "example": "Web"
        },
        "model": {
          "type": "string",
          "example": "iPhone X"
        },
        "system": {
          "type": "string",
          "example": "iOS"
        },
        "vendor": {
          "type": "string",
          "example": "Apple"
        }
      }
    },
    "Model10": {
      "type": "object",
      "description": "Users who will receive notifications. Notification type must be set to custom.",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string",
          "x-format": {
            "email": true
          }
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "users": {
      "type": "array",
      "minItems": 0,
      "items": {
        "$ref": "#/x-alt-definitions/Model10"
      }
    },
    "SiteNotifications": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "What notification system is used by this site.",
          "example": "system",
          "enum": [
            "system",
            "custom",
            "none"
          ]
        },
        "users": {
          "$ref": "#/x-alt-definitions/users"
        }
      },
      "required": [
        "type",
        "users"
      ]
    },
    "SiteTrafficShaping": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to TRUE if optional Traffic Shaping queue are activated.",
          "example": true
        },
        "propagation": {
          "type": "string",
          "description": "\n      Whether or not set Traffic Shaping on Client devices like, CPEs and ONUs.\n      Enabling this will lower your traffic in local network.\n    ",
          "enum": [
            "all",
            "gateway"
          ]
        },
        "downloadSpeed": {
          "type": "integer",
          "description": "Download speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "downloadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at downloadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "uploadSpeed": {
          "type": "integer",
          "description": "Upload speed limit in bps.",
          "example": 8388608,
          "enum": [0],
          "maximum": 100000000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "uploadBurstSize": {
          "type": "integer",
          "description": "Amount of bytes that can be sent at uploadSpeed in excess of the guaranteed rate.",
          "example": 512,
          "enum": [0],
          "maximum": 102400000000,
          "x-constraint": {
            "sign": "positive"
          }
        },
        "aggregation": {
          "type": "integer",
          "description": "\n      Number indicating how many times the guaranteed rate is less than the maximum allowed bandwidth.\n      Null for auto calculation by UISP.\n    ",
          "example": 2,
          "minimum": 1,
          "maximum": 10000
        }
      },
      "required": [
        "enabled",
        "downloadSpeed",
        "downloadBurstSize",
        "uploadSpeed",
        "uploadBurstSize",
        "aggregation"
      ]
    },
    "client": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "123"
        },
        "name": {
          "type": "string",
          "description": "CRM client's name.",
          "example": "John Smith"
        },
        "isLead": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "discount": {
      "type": "object",
      "properties": {
        "value": {
          "type": "number",
          "description": "Discount value.",
          "example": 299
        },
        "type": {
          "type": "string",
          "description": "Type of discount value.",
          "example": "Percent discount"
        },
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        }
      },
      "required": [
        "value",
        "type"
      ]
    },
    "Model11": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number"
        },
        "invoiceLabel": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "priceMonth1": {
          "type": "number"
        },
        "priceMonth2": {
          "type": "number"
        },
        "priceMonth3": {
          "type": "number"
        },
        "priceMonth6": {
          "type": "number"
        },
        "priceMonth12": {
          "type": "number"
        },
        "priceMonth24": {
          "type": "number"
        },
        "pricePerDay": {
          "type": "number"
        },
        "taxId": {
          "type": "number"
        },
        "taxable": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "name",
        "taxable"
      ]
    },
    "surcharges": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model11"
      }
    },
    "service": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "123"
        },
        "name": {
          "type": "string",
          "description": "Service name.",
          "example": "Building B"
        },
        "status": {
          "type": "number",
          "description": "Service status.",
          "example": 7,
          "enum": [0, 1, 2, 3, 4, 5, 6, 7]
        },
        "activeFrom": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the service was activated.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "tariffId": {
          "type": "string",
          "description": "ID of the tariff (service plan) used for this service.",
          "example": "1"
        },
        "trafficShapingOverrideEnabled": {
          "type": "boolean",
          "description": "Whether traffic shaping is overridden for this client.",
          "example": false
        },
        "totalPrice": {
          "type": "number",
          "description": "Service total price.",
          "example": 133
        },
        "currencyCode": {
          "type": "string",
          "example": "USD"
        },
        "servicePlanPeriod": {
          "type": "number",
          "description": "Pricing period in months.",
          "example": 1
        },
        "discount": {
          "$ref": "#/x-alt-definitions/discount"
        },
        "surcharges": {
          "$ref": "#/x-alt-definitions/surcharges"
        }
      },
      "required": [
        "id",
        "name",
        "status",
        "activeFrom",
        "tariffId",
        "trafficShapingOverrideEnabled"
      ]
    },
    "SiteUcrmChangeRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "123"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Time when the change request was created.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "serviceId": {
          "type": "number",
          "description": "ID of the service.",
          "example": 1
        },
        "targetServicePlanPeriodId": {
          "type": "number",
          "description": "ID of the target service plan.",
          "example": 1
        }
      },
      "required": [
        "id",
        "createdDate",
        "serviceId",
        "targetServicePlanPeriodId"
      ]
    },
    "periods": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/parent"
      }
    },
    "prepaidConfiguration": {
      "type": "object",
      "properties": {
        "pricePerDay": {
          "type": "number"
        }
      }
    },
    "Model12": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "servicePlanGroups": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model12"
      }
    },
    "SiteUcrmTargetService": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "CRM target service ID.",
          "example": 9
        },
        "servicePlanType": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "CRM target service name.",
          "example": "New target service"
        },
        "invoiceLabel": {
          "type": "string",
          "description": "Label for invoice.",
          "example": "Label l.t.d."
        },
        "downloadBurst": {
          "type": "number"
        },
        "uploadBurst": {
          "type": "number"
        },
        "downloadSpeed": {
          "type": "number",
          "description": "Service plan download speed.",
          "example": 299
        },
        "uploadSpeed": {
          "type": "number",
          "description": "Service plan upload speed.",
          "example": 299
        },
        "aggregation": {
          "type": "number"
        },
        "dataUsageLimit": {
          "type": "number"
        },
        "organizationId": {
          "type": "number",
          "description": "ID of organization.",
          "example": 9
        },
        "taxable": {
          "type": "boolean"
        },
        "taxId": {
          "type": "number"
        },
        "amountExemptFromTaxation": {
          "type": "number"
        },
        "setupFee": {
          "type": "number"
        },
        "earlyTerminationFee": {
          "type": "number"
        },
        "minimumContractLengthMonths": {
          "type": "number"
        },
        "periods": {
          "$ref": "#/x-alt-definitions/periods"
        },
        "public": {
          "type": "boolean"
        },
        "prepaid": {
          "type": "boolean"
        },
        "prepaidConfiguration": {
          "$ref": "#/x-alt-definitions/prepaidConfiguration"
        },
        "servicePlanGroups": {
          "$ref": "#/x-alt-definitions/servicePlanGroups"
        },
        "defaultServicePlanGroupId": {
          "type": "string"
        },
        "uploadSpeedLimited": {
          "type": "number"
        },
        "downloadSpeedLimited": {
          "type": "number"
        },
        "currencyCode": {
          "type": "string"
        },
        "archived": {
          "type": "boolean"
        }
      },
      "required": [
        "id",
        "servicePlanType",
        "name",
        "downloadSpeed",
        "uploadSpeed",
        "organizationId",
        "taxable",
        "public",
        "prepaid",
        "currencyCode"
      ]
    },
    "SiteUcrmDescription": {
      "type": "object",
      "properties": {
        "client": {
          "$ref": "#/x-alt-definitions/client"
        },
        "service": {
          "$ref": "#/x-alt-definitions/service"
        },
        "changeRequest": {
          "$ref": "#/x-alt-definitions/SiteUcrmChangeRequest"
        },
        "targetService": {
          "$ref": "#/x-alt-definitions/SiteUcrmTargetService"
        }
      }
    },
    "Site": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "identification": {
          "$ref": "#/x-alt-definitions/SiteIdentificationDetail"
        },
        "description": {
          "$ref": "#/x-alt-definitions/SiteDescription"
        },
        "lastSpeedReport": {
          "$ref": "#/x-alt-definitions/SiteSpeedReport"
        },
        "notifications": {
          "$ref": "#/x-alt-definitions/SiteNotifications"
        },
        "qos": {
          "$ref": "#/x-alt-definitions/SiteTrafficShaping"
        },
        "ucrm": {
          "$ref": "#/x-alt-definitions/SiteUcrmDescription"
        },
        "isMisconfigured": {
          "type": "boolean",
          "description": "Set to true if site is misconfigured",
          "example": true
        },
        "deviceCount": {
          "type": "number",
          "description": "Number of devices on this site.",
          "example": 2
        },
        "deviceOutageCount": {
          "type": "number",
          "description": "Number of devices in outage on this site.",
          "example": 2
        }
      },
      "required": [
        "identification",
        "description",
        "notifications",
        "qos",
        "deviceCount",
        "deviceOutageCount"
      ]
    },
    "Model13": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "site",
          "enum": [
            "site"
          ]
        },
        "data": {
          "$ref": "#/x-alt-definitions/Site"
        },
        "matches": {
          "$ref": "#/x-alt-definitions/SearchResultMatches"
        }
      },
      "required": [
        "type",
        "data",
        "matches"
      ]
    },
    "ntpClient": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "ntpClient1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true to enable NTP client",
          "example": true
        },
        "ntpServer1": {
          "type": "string",
          "description": "Primary NTP server.",
          "example": "1.1.1.1",
          "x-format": {
            "hostname": true
          }
        },
        "ntpServer2": {
          "type": "string",
          "description": "Secondary NTP server.",
          "example": "2.2.2.2",
          "x-format": {
            "hostname": true
          }
        }
      }
    },
    "sshServer": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "sshServer1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": true
        },
        "sshPort": {
          "type": "integer",
          "example": 22,
          "minimum": 0,
          "maximum": 65535
        },
        "passwordAuthentication": {
          "type": "boolean"
        }
      }
    },
    "systemLog": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "systemLog1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true to enable sending syslog to remote logging server.",
          "example": false
        },
        "level": {
          "type": "string",
          "description": "Level of logs to include.",
          "enum": [
            "emerg",
            "alert",
            "crit",
            "err",
            "warning",
            "notice",
            "info",
            "debug"
          ]
        },
        "port": {
          "type": "integer",
          "description": "Remote server port.",
          "example": 443,
          "minimum": 0,
          "maximum": 65535
        },
        "server": {
          "type": "string",
          "description": "Remote server hostname.",
          "example": "3.3.3.3",
          "x-format": {
            "hostname": true
          }
        }
      }
    },
    "telnetServer": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "telnetServer1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": false
        },
        "port": {
          "type": "integer",
          "example": 23,
          "minimum": 0,
          "maximum": 65535
        }
      }
    },
    "snmpAgent": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "snmpAgent1": {
      "type": "object",
      "properties": {
        "community": {
          "type": "string",
          "description": "User ID or password that allows access to device's statistics."
        },
        "contact": {
          "type": "string",
          "description": "SNMP server's contact person."
        },
        "enabled": {
          "type": "boolean",
          "example": false
        },
        "location": {
          "type": "string",
          "description": "SNMP server's location."
        }
      }
    },
    "webServer": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "webServer1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": true
        },
        "httpPort": {
          "type": "integer",
          "description": "Web UI HTTP port",
          "example": 80,
          "minimum": 0,
          "maximum": 65535
        },
        "httpsPort": {
          "type": "integer",
          "description": "Web UI HTTPS port",
          "example": 443,
          "minimum": 0,
          "maximum": 65535
        },
        "httpsEnabled": {
          "type": "boolean"
        },
        "sessionTimeout": {
          "type": "integer",
          "minimum": 1,
          "maximum": 1440
        }
      }
    },
    "dnsForwarder": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model14": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "macOverride": {
          "type": "string"
        },
        "mac": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "default": "ethernet",
          "enum": [
            "ethernet",
            "wireless",
            "pon",
            "switch",
            "bridge",
            "vlan",
            "pppoe",
            "port",
            "lag",
            "tunnel"
          ]
        }
      },
      "required": [
        "id"
      ]
    },
    "listenInterfaces": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model14"
      }
    },
    "Model15": {
      "type": "object",
      "properties": {
        "domainName": {
          "type": "string"
        },
        "serverIp": {
          "type": "string"
        },
        "sourceIp": {
          "type": "string"
        }
      }
    },
    "domainForwards": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model15"
      }
    },
    "address": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "version": {
          "type": "string",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "type": {
          "type": "string",
          "enum": [
            "dynamic",
            "static",
            "pppoe"
          ]
        },
        "origin": {
          "type": "string",
          "enum": [
            "dhcp",
            "slaac",
            "link-local",
            "static",
            "ppp"
          ]
        }
      },
      "required": [
        "address",
        "version"
      ]
    },
    "Model16": {
      "type": "object",
      "properties": {
        "hostName": {
          "type": "string"
        },
        "address": {
          "$ref": "#/x-alt-definitions/address"
        },
        "enableSpoofing": {
          "type": "boolean"
        },
        "registerNonQualified": {
          "type": "boolean"
        }
      },
      "required": [
        "hostName"
      ]
    },
    "hostRecords": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model16"
      }
    },
    "ipsets": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "dnsForwarder1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "example": true
        },
        "forwardBehavior": {
          "type": "string",
          "enum": [
            "allServers",
            "strictOrder",
            "standard"
          ]
        },
        "listenInterfaces": {
          "$ref": "#/x-alt-definitions/listenInterfaces"
        },
        "domainForwards": {
          "$ref": "#/x-alt-definitions/domainForwards"
        },
        "hostRecords": {
          "$ref": "#/x-alt-definitions/hostRecords"
        },
        "ipsets": {
          "$ref": "#/x-alt-definitions/ipsets"
        }
      }
    },
    "ddns": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "interface": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      },
      "required": [
        "id"
      ]
    },
    "Model17": {
      "type": "object",
      "properties": {
        "hostname": {
          "type": "string"
        },
        "interface": {
          "$ref": "#/x-alt-definitions/interface"
        },
        "service": {
          "type": "string",
          "enum": [
            "afraid",
            "nsupdate",
            "duckdns",
            "freemyip",
            "loopia",
            "dyndns",
            "dyn",
            "zoneedit",
            "no-ip",
            "easydns",
            "dnsomatic",
            "tunnelbroker",
            "sitelutions",
            "dnsexit",
            "changeip",
            "dhis",
            "google",
            "ovh",
            "dtdns",
            "duiadns",
            "ddnss",
            "dynv6",
            "spdyn",
            "strato",
            "cloudxns",
            "dnspod",
            "custom"
          ]
        },
        "checkIP": {
          "type": "boolean"
        },
        "customName": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "server": {
          "type": "string"
        },
        "serverPath": {
          "type": "string"
        }
      },
      "required": [
        "username",
        "password",
        "server"
      ]
    },
    "clients": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model17"
      }
    },
    "ddns1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "clients": {
          "$ref": "#/x-alt-definitions/clients"
        }
      }
    },
    "discovery1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "responder": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Respond to UBNT Device Discovery protocol requests. Device must have DISCOVERY_RESPONDER service capability (aka discovery server).",
          "example": true
        }
      }
    },
    "scanner": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable discovery scanner tool. Device must have DISCOVERY_SCANNER tool capability (aka discovery client).",
          "example": true
        },
        "passiveOnly": {
          "type": "boolean",
          "description": "Use only passive discovery protocols (MNDP, CDP and LLDP) and not active protocols (UBNT discovery).",
          "example": true
        }
      }
    },
    "discovery2": {
      "type": "object",
      "properties": {
        "responder": {
          "$ref": "#/x-alt-definitions/responder"
        },
        "scanner": {
          "$ref": "#/x-alt-definitions/scanner"
        }
      },
      "required": [
        "responder",
        "scanner"
      ]
    },
    "portForwarding": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "Model18": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if rule is enabled",
          "example": true
        },
        "comment": {
          "type": "string",
          "description": "Editable description",
          "example": "Editable description",
          "maxLength": 25
        },
        "protocol": {
          "type": "string",
          "description": "Forwarded protocols",
          "example": "tcpudp",
          "enum": [
            "tcpudp",
            "tcp",
            "udp"
          ]
        },
        "lanIp": {
          "type": "string",
          "description": "IPv4 address of the target LAN device",
          "example": "192.168.4.4",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "lanPortStart": {
          "type": "integer",
          "description": "First forwarded port on target device",
          "example": 65535,
          "minimum": 0,
          "maximum": 65535
        },
        "lanPortEnd": {
          "type": "integer",
          "description": "Last forwarded port on target device",
          "example": 65535,
          "minimum": 0,
          "maximum": 65535
        },
        "wanPortStart": {
          "type": "integer",
          "description": "First forwarded port on WAN",
          "example": 65535,
          "minimum": 0,
          "maximum": 65535
        },
        "wanPortEnd": {
          "type": "integer",
          "description": "Last forwarded port on WAN",
          "example": 65535,
          "minimum": 0,
          "maximum": 65535
        }
      },
      "required": [
        "enabled",
        "comment",
        "protocol",
        "lanIp",
        "lanPortStart",
        "lanPortEnd",
        "wanPortStart",
        "wanPortEnd"
      ]
    },
    "rules": {
      "type": "array",
      "description": "Port forwarding rules",
      "example": [
        [
          {
            "enabled": true,
            "comment": "some comment",
            "protocol": "tcpudp",
            "lanIp": "192.168.3.3",
            "lanPortStart": 333,
            "lanPortEnd": 334,
            "wanPortStart": 333,
            "wanPortEnd": 334
          }
        ]
      ],
      "minItems": 0,
      "items": {
        "$ref": "#/x-alt-definitions/Model18"
      }
    },
    "portForwarding1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true to enable port forwarding",
          "example": true
        },
        "rules": {
          "$ref": "#/x-alt-definitions/rules"
        }
      }
    },
    "lteModem": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "apn": {
      "type": "object",
      "description": "APN settings",
      "properties": {
        "name": {
          "type": "string",
          "description": "APN name",
          "example": "some APN name"
        },
        "pdp": {
          "type": "string",
          "description": "Packet data profile",
          "example": "ipv4",
          "enum": [
            "ipv4",
            "ipv6",
            "both"
          ]
        },
        "username": {
          "type": "string",
          "description": "Username for APN authentication",
          "example": "username"
        },
        "password": {
          "type": "string",
          "description": "Password for APN authentication",
          "example": "pa$$word"
        },
        "authType": {
          "type": "string",
          "description": "Authentication type",
          "example": "pap",
          "enum": [
            "pap",
            "chap"
          ]
        }
      }
    },
    "lteModem1": {
      "type": "object",
      "description": "Configuration of embedded LTE modem",
      "properties": {
        "isRoamingEnabled": {
          "type": "boolean",
          "description": "Set to true to enable roaming",
          "example": true
        },
        "mode": {
          "type": "string",
          "example": "lte",
          "enum": [
            "auto",
            "gsm_3g",
            "lte"
          ]
        },
        "operator": {
          "type": "string",
          "description": "Name of network operator to use. Format \u003CMCC\u003E-\u003CMNC\u003E. null for automatic selection.",
          "example": "230-01"
        },
        "operatorName": {
          "type": "string",
          "description": "Currently used operator's user friendly name",
          "example": "T-Mobile CZ"
        },
        "newPin": {
          "type": "string",
          "description": "New PIN for SIM card. Set to null if user is unlocking SIM card"
        },
        "currentPin": {
          "type": "string",
          "description": "PIN for SIM card. Either unlocks SIM card or changes current PIN.",
          "example": "0012"
        },
        "pin": {
          "type": "string",
          "description": "PIN for the SIM card - empty if card has PIN protection disabled. This field will be ignored in PUT if not sent or null. Attribute is write-only.",
          "minLength": 4,
          "maxLength": 8
        },
        "apn": {
          "$ref": "#/x-alt-definitions/apn"
        }
      }
    },
    "apn1": {
      "type": "object",
      "description": "APN settings",
      "properties": {
        "name": {
          "type": "string",
          "description": "APN name"
        },
        "username": {
          "type": "string",
          "description": "Username for APN authentication"
        },
        "password": {
          "type": "string",
          "description": "Password for APN authentication"
        },
        "authType": {
          "type": "string",
          "description": "Authentication type",
          "enum": [
            "pap",
            "chap"
          ]
        }
      }
    },
    "lteModem2": {
      "type": "object",
      "properties": {
        "pin": {
          "type": "string",
          "description": "PIN for the SIM card - empty if card has PIN protection disabled. This field will be ignored in PUT if not sent or null. Attribute is write-only.",
          "minLength": 4,
          "maxLength": 8
        },
        "apn": {
          "$ref": "#/x-alt-definitions/apn1"
        }
      }
    },
    "dhcpPool": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "dhcpPool1": {
      "type": "object",
      "properties": {
        "rangeStart": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        },
        "rangeEnd": {
          "type": "string",
          "description": "DHCP addresses pool start in CIDR format.",
          "example": "192.168.2.51",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4"
              ]
            }
          }
        }
      }
    },
    "mdns": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "interfaces": {
      "type": "array",
      "description": "Array of interfaces with mDNS enabled",
      "example": [
        [
          "1"
        ]
      ],
      "items": {
        "type": "string"
      }
    },
    "mdns1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if mDNS is enabled",
          "example": true
        },
        "interfaces": {
          "$ref": "#/x-alt-definitions/interfaces"
        }
      }
    },
    "upnp": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "string",
          "enum": [
            {
              "override": true
            },
            false]
        }
      }
    },
    "lanInterfaces": {
      "type": "array",
      "items": {
        "type": "string",
        "description": "WAN interface id",
        "example": "9"
      }
    },
    "Model19": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "description": "ACL rule id",
          "example": 1
        },
        "externalPort": {
          "type": "string",
          "description": "External port id",
          "example": "1"
        },
        "localPort": {
          "type": "string",
          "description": "Internal port id",
          "example": "1"
        },
        "source": {
          "type": "string",
          "description": "Source IPv4 or CIDR address",
          "example": "192.168.2.222"
        },
        "action": {
          "type": "string",
          "description": "Action to be taken",
          "example": "allow",
          "enum": [
            "allow",
            "deny"
          ]
        }
      }
    },
    "acl": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model19"
      }
    },
    "upnp1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Set to true if UPnP is enabled",
          "example": true
        },
        "natPmp": {
          "type": "boolean",
          "description": "Set to true if NAT-PMP is enabled",
          "example": true
        },
        "wanInterface": {
          "type": "string",
          "description": "WAN interface id",
          "example": "9"
        },
        "lanInterfaces": {
          "$ref": "#/x-alt-definitions/lanInterfaces"
        },
        "acl": {
          "$ref": "#/x-alt-definitions/acl"
        }
      }
    },
    "Model20": {
      "type": "object",
      "properties": {
        "center": {
          "type": "integer"
        },
        "control": {
          "type": "integer"
        },
        "ch": {
          "type": "integer"
        },
        "bw": {
          "type": "integer"
        },
        "maxEirp": {
          "type": "integer"
        },
        "dfs": {
          "type": "boolean"
        },
        "ptpOnly": {
          "type": "boolean"
        },
        "ptmpOnly": {
          "type": "boolean"
        },
        "indoorOnly": {
          "type": "boolean"
        }
      }
    },
    "channels": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model20"
      }
    },
    "Model21": {
      "type": "object",
      "properties": {
        "freqStart": {
          "type": "integer"
        },
        "freqEnd": {
          "type": "integer"
        },
        "width": {
          "type": "integer"
        },
        "maxEirp": {
          "type": "integer"
        },
        "maxCondPower": {
          "type": "integer"
        },
        "minAntGain": {
          "type": "integer"
        },
        "maxAntGain": {
          "type": "integer"
        },
        "dfs": {
          "type": "boolean"
        }
      }
    },
    "ptpAp": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model21"
      }
    },
    "ptpSta": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model21"
      }
    },
    "ptmpAp": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model21"
      }
    },
    "ptmpSta": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model21"
      }
    },
    "channels1": {
      "type": "object",
      "properties": {
        "ptpAp": {
          "$ref": "#/x-alt-definitions/ptpAp"
        },
        "ptpSta": {
          "$ref": "#/x-alt-definitions/ptpSta"
        },
        "ptmpAp": {
          "$ref": "#/x-alt-definitions/ptmpAp"
        },
        "ptmpSta": {
          "$ref": "#/x-alt-definitions/ptmpSta"
        }
      }
    },
    "Model22": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "version": {
          "type": "string",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        }
      }
    },
    "dnsServers": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model22"
      }
    },
    "dnsServers1": {
      "type": "object"
    },
    "Model23": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "mac": {
          "type": "string",
          "pattern": "^([0-9a-fA-F][0-9a-fA-F]:){5}([0-9a-fA-F][0-9a-fA-F])$|^([0-9a-fA-F]){12}$"
        },
        "comment": {
          "type": "string"
        }
      },
      "required": [
        "enabled",
        "mac"
      ]
    },
    "list": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model23"
      }
    },
    "list1": {
      "type": "object"
    },
    "RouterRoute": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        },
        "enabled": {
          "type": "boolean"
        },
        "fib": {
          "type": "boolean"
        },
        "gateway": {
          "type": "string"
        },
        "gatewayStatus": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "nextHop": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        },
        "staticType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "ListOfRouterRoutes": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/RouterRoute"
      }
    },
    "UispRRoute": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "True, if route should be applied; False, otherwise",
          "example": true
        },
        "inUse": {
          "type": "boolean",
          "description": "True, if the route actively acts in packet routing decisions; False, otherwise",
          "example": true
        },
        "ipVersion": {
          "type": "string",
          "description": "Route IP version.",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of the static route.",
          "example": "interface",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "id": {
          "type": "number",
          "description": "Static route unique placeholder identifier",
          "example": 1
        },
        "origin": {
          "type": "string",
          "description": "Defines the origin from which the route was installed.",
          "example": "DHCP",
          "enum": [
            "BGP",
            "Boot",
            "DHCP",
            "ISIS",
            "Kernel",
            "OSPF",
            "Other",
            "Placeholder",
            "PPPoE",
            "RA",
            "RIP",
            "Static"
          ]
        },
        "destination": {
          "type": "string",
          "description": "Destination address/network in CIDR notation.",
          "example": "1.2.3.0/24",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "gateway": {
          "type": "string",
          "description": "The \"next hop\" IP address.",
          "example": "1.2.3.0",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "interface": {
          "type": "string",
          "description": "Egress interface.",
          "example": "1"
        },
        "distance": {
          "type": "number",
          "description": "The distance is considered as a \"cost\" value.",
          "example": 1,
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Description; for documentation purposes only.",
          "example": "Custom description",
          "maxLength": 200
        },
        "gatewayStatus": {
          "type": "string",
          "description": "Gateway status.",
          "example": "reachable",
          "enum": [
            "reachable",
            "unreachable"
          ]
        },
        "mtu": {
          "type": "number",
          "description": "MTU of the route. Minimum 68 for IPv4 and 1280 for IPv6 routes",
          "example": 68
        },
        "table": {
          "type": "number",
          "description": "If set, identifies one of the 252 user routing tables to which this route belongs.\n        This field is leftunset for routes residing in the system's main routing table.",
          "example": 68
        }
      },
      "required": [
        "origin"
      ]
    },
    "ListOfRouterRoutes1": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/UispRRoute"
      }
    },
    "sets": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "autoPowerOff": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean"
        },
        "batteryLevel": {
          "type": "number"
        }
      }
    },
    "dcOutput": {
      "type": "object",
      "properties": {
        "pingWatchdog": {
          "$ref": "#/x-alt-definitions/pingWatchdog"
        },
        "enabled": {
          "type": "boolean"
        },
        "autoPowerOff": {
          "$ref": "#/x-alt-definitions/autoPowerOff"
        },
        "id": {
          "type": "integer",
          "minimum": 0
        }
      }
    },
    "dcOutput1": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/dcOutput"
      }
    },
    "Model24": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "enum": [
            "ready",
            "syncInProgress",
            "notEnoughSpace",
            "failed"
          ]
        },
        "progressPercent": {
          "type": "integer",
          "minimum": 0,
          "maximum": 100
        },
        "remainingTime": {
          "type": "integer",
          "minimum": 0
        },
        "failureReason": {
          "type": "string"
        }
      },
      "required": [
        "name"
      ]
    },
    "Model25": {
      "type": "array",
      "items": {
        "$ref": "#/x-alt-definitions/Model24"
      }
    },
    "Model26": {
      "type": "object",
      "properties": {
        "detail": {
          "type": "string"
        },
        "error": {
          "type": "number",
          "minimum": 1
        },
        "message": {
          "type": "string"
        },
        "statusCode": {
          "type": "number",
          "minimum": 409,
          "maximum": 409
        }
      },
      "required": [
        "error",
        "message",
        "statusCode"
      ]
    },
    "Model27": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "firmwareVersion": {
          "type": "string"
        },
        "firmwareForMStationsVersion": {
          "type": "string",
          "description": "For accessPoint (AC series) with M stations."
        }
      },
      "required": [
        "deviceId",
        "firmwareVersion"
      ]
    },
    "Model28": {
      "type": "object",
      "properties": {
        "deviceId": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3",
          "x-format": {
            "guid": true
          }
        },
        "firmwareVersion": {
          "type": "string"
        },
        "firmwareForMStationsVersion": {
          "type": "string",
          "description": "For accessPoint (AC series) with M stations."
        }
      },
      "required": [
        "deviceId",
        "firmwareVersion"
      ]
    },
    "addressComponents": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "UserLogin": {
      "type": "object",
      "x-meta": {
        "headers": {
          "x-auth-token": {
            "type": "string",
            "description": "User authorization token"
          }
        }
      },
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string",
          "example": "admin"
        },
        "email": {
          "type": "string",
          "example": "email@example.com",
          "x-format": {
            "email": true
          }
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "imageUrl": {
          "type": "string"
        },
        "alerts": {
          "type": "boolean"
        },
        "notification": {
          "$ref": "#/x-alt-definitions/User%20push%20notifications%20settings%20object."
        },
        "totpAuthEnabled": {
          "type": "boolean"
        },
        "isSsoLoginEnabled": {
          "type": "boolean"
        },
        "isLocalLoginEnabled": {
          "type": "boolean"
        },
        "isOfflinePasswordsGenerated": {
          "type": "boolean"
        },
        "role": {
          "type": "string",
          "description": "Role of this user in UISP. 'anonymous' if user is only allowed to access CRM.",
          "example": "admin",
          "enum": [
            "superadmin",
            "admin",
            "guest",
            "anonymous",
            "installer"
          ]
        },
        "presentationMode": {
          "type": "boolean",
          "description": "Obsolete.",
          "example": false
        },
        "forceChangePassword": {
          "type": "boolean"
        },
        "tableConfig": {
          "$ref": "#/x-alt-definitions/tableConfig"
        },
        "mapConfig": {
          "$ref": "#/x-alt-definitions/mapConfig"
        },
        "preferences": {
          "$ref": "#/x-alt-definitions/preferences"
        },
        "lastLogItemId": {
          "type": "string"
        },
        "location": {
          "$ref": "#/x-alt-definitions/UserLocation"
        },
        "sessionTimeout": {
          "type": "integer",
          "description": "Session expiration in milliseconds, max 30 days.",
          "example": 3600000,
          "minimum": 1
        },
        "keepMeSignedIn": {
          "type": "boolean",
          "description": "Whether session should be cleared when browser window is closed.",
          "example": true
        },
        "lastNewsSeenDate": {
          "type": "string",
          "format": "date-time",
          "description": "Last news check time in ISO format.",
          "example": "2018-11-14T15:20:32.004Z"
        },
        "lastReleaseNotesSeen": {
          "type": "string",
          "description": "Last seen version of release notes.",
          "example": "1.0.0-alpha"
        },
        "ucrmId": {
          "type": "string",
          "description": "ID of UCRM user that is bound with this user.",
          "example": "123"
        },
        "ucrmRole": {
          "type": "string",
          "description": "Role of this user in UCRM. 'null' if user is not allowed to access UCRM.",
          "example": "1"
        },
        "homeScreen": {
          "type": "string",
          "description": "Where should the user be redirected after login.",
          "example": "/nms",
          "enum": [
            "/nms",
            "/crm"
          ]
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether the user can log in or not.",
          "example": true
        },
        "updated": {
          "type": "string",
          "format": "date-time",
          "description": "Last time the user was updated.",
          "example": "2018-11-14T15:20:32.004Z"
        }
      },
      "required": [
        "id",
        "username",
        "email",
        "alerts",
        "isSsoLoginEnabled",
        "isLocalLoginEnabled",
        "isOfflinePasswordsGenerated",
        "forceChangePassword",
        "keepMeSignedIn",
        "lastNewsSeenDate",
        "lastReleaseNotesSeen",
        "ucrmId",
        "ucrmRole",
        "homeScreen",
        "enabled",
        "updated"
      ]
    },
    "SsoUserLogin": {
      "type": "object",
      "x-meta": {
        "headers": {
          "x-auth-token": {
            "type": "string",
            "description": "User authorization token"
          }
        }
      },
      "properties": {
        "id": {
          "type": "string",
          "example": "f7ac9cad-ea28-4390-93c8-7add010e8ee3"
        },
        "username": {
          "type": "string",
          "example": "JohnDoe"
        },
        "email": {
          "type": "string",
          "example": "john.doe@example.com",
          "x-format": {
            "email": true
          }
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "lastName": {
          "type": "string",
          "example": "Doe"
        },
        "imageUrl": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "username",
        "email"
      ]
    },
    "RouterRouteUpsert": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "staticType": {
          "type": "string",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "distance": {
          "type": "number",
          "minimum": 1,
          "maximum": 255
        }
      },
      "required": [
        "destination",
        "gateway",
        "interface",
        "staticType",
        "distance"
      ]
    },
    "RouterRouteUpsert1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "True, if route should be applied; False, otherwise",
          "example": true
        },
        "inUse": {
          "type": "boolean",
          "description": "True, if the route actively acts in packet routing decisions; False, otherwise",
          "example": true
        },
        "ipVersion": {
          "type": "string",
          "description": "Route IP version.",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of the static route.",
          "example": "interface",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "id": {
          "type": "number",
          "description": "Static route unique placeholder identifier",
          "example": 1
        },
        "origin": {
          "type": "string",
          "description": "Defines the origin from which the route was installed.",
          "example": "DHCP",
          "enum": [
            "BGP",
            "Boot",
            "DHCP",
            "ISIS",
            "Kernel",
            "OSPF",
            "Other",
            "Placeholder",
            "PPPoE",
            "RA",
            "RIP",
            "Static"
          ]
        },
        "destination": {
          "type": "string",
          "description": "Destination address/network in CIDR notation.",
          "example": "1.2.3.0/24",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "gateway": {
          "type": "string",
          "description": "The \"next hop\" IP address.",
          "example": "1.2.3.0",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "interface": {
          "type": "string",
          "description": "Egress interface.",
          "example": "1"
        },
        "distance": {
          "type": "number",
          "description": "The distance is considered as a \"cost\" value.",
          "example": 1,
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Description; for documentation purposes only.",
          "example": "Custom description",
          "maxLength": 200
        },
        "gatewayStatus": {
          "type": "string",
          "description": "Gateway status.",
          "example": "reachable",
          "enum": [
            "reachable",
            "unreachable"
          ]
        },
        "mtu": {
          "type": "number",
          "description": "MTU of the route. Minimum 68 for IPv4 and 1280 for IPv6 routes",
          "example": 68
        },
        "table": {
          "type": "number",
          "description": "If set, identifies one of the 252 user routing tables to which this route belongs.\n        This field is leftunset for routes residing in the system's main routing table.",
          "example": 68
        }
      },
      "required": [
        "origin"
      ]
    },
    "RouterRoutes": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "distance": {
          "type": "number",
          "minimum": 0,
          "maximum": 256
        },
        "enabled": {
          "type": "boolean"
        },
        "fib": {
          "type": "boolean"
        },
        "gateway": {
          "type": "string"
        },
        "gatewayStatus": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "nextHop": {
          "type": "string"
        },
        "selected": {
          "type": "boolean"
        },
        "staticType": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "RouterRoutes1": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "True, if route should be applied; False, otherwise",
          "example": true
        },
        "inUse": {
          "type": "boolean",
          "description": "True, if the route actively acts in packet routing decisions; False, otherwise",
          "example": true
        },
        "ipVersion": {
          "type": "string",
          "description": "Route IP version.",
          "example": "v4",
          "enum": [
            "v4",
            "v6"
          ]
        },
        "type": {
          "type": "string",
          "description": "Type of the static route.",
          "example": "interface",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "id": {
          "type": "number",
          "description": "Static route unique placeholder identifier",
          "example": 1
        },
        "origin": {
          "type": "string",
          "description": "Defines the origin from which the route was installed.",
          "example": "DHCP",
          "enum": [
            "BGP",
            "Boot",
            "DHCP",
            "ISIS",
            "Kernel",
            "OSPF",
            "Other",
            "Placeholder",
            "PPPoE",
            "RA",
            "RIP",
            "Static"
          ]
        },
        "destination": {
          "type": "string",
          "description": "Destination address/network in CIDR notation.",
          "example": "1.2.3.0/24",
          "x-format": {
            "ip": {
              "cidr": "required",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "gateway": {
          "type": "string",
          "description": "The \"next hop\" IP address.",
          "example": "1.2.3.0",
          "x-format": {
            "ip": {
              "cidr": "optional",
              "version": [
                "ipv4",
                "ipv6"
              ]
            }
          }
        },
        "interface": {
          "type": "string",
          "description": "Egress interface.",
          "example": "1"
        },
        "distance": {
          "type": "number",
          "description": "The distance is considered as a \"cost\" value.",
          "example": 1,
          "minimum": 0
        },
        "description": {
          "type": "string",
          "description": "Description; for documentation purposes only.",
          "example": "Custom description",
          "maxLength": 200
        },
        "gatewayStatus": {
          "type": "string",
          "description": "Gateway status.",
          "example": "reachable",
          "enum": [
            "reachable",
            "unreachable"
          ]
        },
        "mtu": {
          "type": "number",
          "description": "MTU of the route. Minimum 68 for IPv4 and 1280 for IPv6 routes",
          "example": 68
        },
        "table": {
          "type": "number",
          "description": "If set, identifies one of the 252 user routing tables to which this route belongs.\n        This field is leftunset for routes residing in the system's main routing table.",
          "example": 68
        }
      },
      "required": [
        "origin"
      ]
    },
    "Model29": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "maxLength": 200
        },
        "destination": {
          "type": "string",
          "x-format": {
            "ip": {
              "cidr": "required"
            }
          }
        },
        "gateway": {
          "type": "string"
        },
        "interface": {
          "type": "string"
        },
        "staticType": {
          "type": "string",
          "enum": [
            "interface",
            "blackhole",
            "gateway"
          ]
        },
        "distance": {
          "type": "number",
          "minimum": 1,
          "maximum": 255
        }
      },
      "required": [
        "destination",
        "gateway",
        "interface",
        "staticType",
        "distance"
      ]
    }
  }
}